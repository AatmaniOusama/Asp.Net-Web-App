//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace DataLockTooTaxi {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MyDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MyDataSet : global::System.Data.DataSet {
        
        private UsersDataTable tableUsers;
        
        private DroitsDataTable tableDroits;
        
        private BadgesDataTable tableBadges;
        
        private ListesDataTable tableListes;
        
        private ListesUsersDataTable tableListesUsers;
        
        private ServicesDataTable tableServices;
        
        private UsersBioDataDataTable tableUsersBioData;
        
        private OperateursDataTable tableOperateurs;
        
        private LecteursDataTable tableLecteurs;
        
        private EventsDataTable tableEvents;
        
        private TypeTaxiDataTable tableTypeTaxi;
        
        private ControleUserDataTable tableControleUser;
        
        private LabelsControlesDataTable tableLabelsControles;
        
        private ControlesDataTable tableControles;
        
        private VehiculesDataTable tableVehicules;
        
        private AgrementDataTable tableAgrement;
        
        private CommunesDataTable tableCommunes;
        
        private MotifsDataTable tableMotifs;
        
        private VisiteursDataTable tableVisiteurs;
        
        private AutoQpuDataTable tableAutoQpu;
        
        private LogDataTable tableLog;
        
        private CodesMissionsDataTable tableCodesMissions;
        
        private SyntheseDataTable tableSynthese;
        
        private SyntheseTaxiAbsentsDataTable tableSyntheseTaxiAbsents;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MyDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected MyDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Users"] != null)) {
                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
                }
                if ((ds.Tables["Droits"] != null)) {
                    base.Tables.Add(new DroitsDataTable(ds.Tables["Droits"]));
                }
                if ((ds.Tables["Badges"] != null)) {
                    base.Tables.Add(new BadgesDataTable(ds.Tables["Badges"]));
                }
                if ((ds.Tables["Listes"] != null)) {
                    base.Tables.Add(new ListesDataTable(ds.Tables["Listes"]));
                }
                if ((ds.Tables["ListesUsers"] != null)) {
                    base.Tables.Add(new ListesUsersDataTable(ds.Tables["ListesUsers"]));
                }
                if ((ds.Tables["Services"] != null)) {
                    base.Tables.Add(new ServicesDataTable(ds.Tables["Services"]));
                }
                if ((ds.Tables["UsersBioData"] != null)) {
                    base.Tables.Add(new UsersBioDataDataTable(ds.Tables["UsersBioData"]));
                }
                if ((ds.Tables["Operateurs"] != null)) {
                    base.Tables.Add(new OperateursDataTable(ds.Tables["Operateurs"]));
                }
                if ((ds.Tables["Lecteurs"] != null)) {
                    base.Tables.Add(new LecteursDataTable(ds.Tables["Lecteurs"]));
                }
                if ((ds.Tables["Events"] != null)) {
                    base.Tables.Add(new EventsDataTable(ds.Tables["Events"]));
                }
                if ((ds.Tables["TypeTaxi"] != null)) {
                    base.Tables.Add(new TypeTaxiDataTable(ds.Tables["TypeTaxi"]));
                }
                if ((ds.Tables["ControleUser"] != null)) {
                    base.Tables.Add(new ControleUserDataTable(ds.Tables["ControleUser"]));
                }
                if ((ds.Tables["LabelsControles"] != null)) {
                    base.Tables.Add(new LabelsControlesDataTable(ds.Tables["LabelsControles"]));
                }
                if ((ds.Tables["Controles"] != null)) {
                    base.Tables.Add(new ControlesDataTable(ds.Tables["Controles"]));
                }
                if ((ds.Tables["Vehicules"] != null)) {
                    base.Tables.Add(new VehiculesDataTable(ds.Tables["Vehicules"]));
                }
                if ((ds.Tables["Agrement"] != null)) {
                    base.Tables.Add(new AgrementDataTable(ds.Tables["Agrement"]));
                }
                if ((ds.Tables["Communes"] != null)) {
                    base.Tables.Add(new CommunesDataTable(ds.Tables["Communes"]));
                }
                if ((ds.Tables["Motifs"] != null)) {
                    base.Tables.Add(new MotifsDataTable(ds.Tables["Motifs"]));
                }
                if ((ds.Tables["Visiteurs"] != null)) {
                    base.Tables.Add(new VisiteursDataTable(ds.Tables["Visiteurs"]));
                }
                if ((ds.Tables["AutoQpu"] != null)) {
                    base.Tables.Add(new AutoQpuDataTable(ds.Tables["AutoQpu"]));
                }
                if ((ds.Tables["Log"] != null)) {
                    base.Tables.Add(new LogDataTable(ds.Tables["Log"]));
                }
                if ((ds.Tables["CodesMissions"] != null)) {
                    base.Tables.Add(new CodesMissionsDataTable(ds.Tables["CodesMissions"]));
                }
                if ((ds.Tables["Synthese"] != null)) {
                    base.Tables.Add(new SyntheseDataTable(ds.Tables["Synthese"]));
                }
                if ((ds.Tables["SyntheseTaxiAbsents"] != null)) {
                    base.Tables.Add(new SyntheseTaxiAbsentsDataTable(ds.Tables["SyntheseTaxiAbsents"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UsersDataTable Users {
            get {
                return this.tableUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DroitsDataTable Droits {
            get {
                return this.tableDroits;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public BadgesDataTable Badges {
            get {
                return this.tableBadges;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListesDataTable Listes {
            get {
                return this.tableListes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ListesUsersDataTable ListesUsers {
            get {
                return this.tableListesUsers;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ServicesDataTable Services {
            get {
                return this.tableServices;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public UsersBioDataDataTable UsersBioData {
            get {
                return this.tableUsersBioData;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public OperateursDataTable Operateurs {
            get {
                return this.tableOperateurs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LecteursDataTable Lecteurs {
            get {
                return this.tableLecteurs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public EventsDataTable Events {
            get {
                return this.tableEvents;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TypeTaxiDataTable TypeTaxi {
            get {
                return this.tableTypeTaxi;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ControleUserDataTable ControleUser {
            get {
                return this.tableControleUser;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LabelsControlesDataTable LabelsControles {
            get {
                return this.tableLabelsControles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ControlesDataTable Controles {
            get {
                return this.tableControles;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VehiculesDataTable Vehicules {
            get {
                return this.tableVehicules;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AgrementDataTable Agrement {
            get {
                return this.tableAgrement;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CommunesDataTable Communes {
            get {
                return this.tableCommunes;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MotifsDataTable Motifs {
            get {
                return this.tableMotifs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public VisiteursDataTable Visiteurs {
            get {
                return this.tableVisiteurs;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public AutoQpuDataTable AutoQpu {
            get {
                return this.tableAutoQpu;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LogDataTable Log {
            get {
                return this.tableLog;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CodesMissionsDataTable CodesMissions {
            get {
                return this.tableCodesMissions;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SyntheseDataTable Synthese {
            get {
                return this.tableSynthese;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public SyntheseTaxiAbsentsDataTable SyntheseTaxiAbsents {
            get {
                return this.tableSyntheseTaxiAbsents;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            MyDataSet cln = ((MyDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Users"] != null)) {
                    base.Tables.Add(new UsersDataTable(ds.Tables["Users"]));
                }
                if ((ds.Tables["Droits"] != null)) {
                    base.Tables.Add(new DroitsDataTable(ds.Tables["Droits"]));
                }
                if ((ds.Tables["Badges"] != null)) {
                    base.Tables.Add(new BadgesDataTable(ds.Tables["Badges"]));
                }
                if ((ds.Tables["Listes"] != null)) {
                    base.Tables.Add(new ListesDataTable(ds.Tables["Listes"]));
                }
                if ((ds.Tables["ListesUsers"] != null)) {
                    base.Tables.Add(new ListesUsersDataTable(ds.Tables["ListesUsers"]));
                }
                if ((ds.Tables["Services"] != null)) {
                    base.Tables.Add(new ServicesDataTable(ds.Tables["Services"]));
                }
                if ((ds.Tables["UsersBioData"] != null)) {
                    base.Tables.Add(new UsersBioDataDataTable(ds.Tables["UsersBioData"]));
                }
                if ((ds.Tables["Operateurs"] != null)) {
                    base.Tables.Add(new OperateursDataTable(ds.Tables["Operateurs"]));
                }
                if ((ds.Tables["Lecteurs"] != null)) {
                    base.Tables.Add(new LecteursDataTable(ds.Tables["Lecteurs"]));
                }
                if ((ds.Tables["Events"] != null)) {
                    base.Tables.Add(new EventsDataTable(ds.Tables["Events"]));
                }
                if ((ds.Tables["TypeTaxi"] != null)) {
                    base.Tables.Add(new TypeTaxiDataTable(ds.Tables["TypeTaxi"]));
                }
                if ((ds.Tables["ControleUser"] != null)) {
                    base.Tables.Add(new ControleUserDataTable(ds.Tables["ControleUser"]));
                }
                if ((ds.Tables["LabelsControles"] != null)) {
                    base.Tables.Add(new LabelsControlesDataTable(ds.Tables["LabelsControles"]));
                }
                if ((ds.Tables["Controles"] != null)) {
                    base.Tables.Add(new ControlesDataTable(ds.Tables["Controles"]));
                }
                if ((ds.Tables["Vehicules"] != null)) {
                    base.Tables.Add(new VehiculesDataTable(ds.Tables["Vehicules"]));
                }
                if ((ds.Tables["Agrement"] != null)) {
                    base.Tables.Add(new AgrementDataTable(ds.Tables["Agrement"]));
                }
                if ((ds.Tables["Communes"] != null)) {
                    base.Tables.Add(new CommunesDataTable(ds.Tables["Communes"]));
                }
                if ((ds.Tables["Motifs"] != null)) {
                    base.Tables.Add(new MotifsDataTable(ds.Tables["Motifs"]));
                }
                if ((ds.Tables["Visiteurs"] != null)) {
                    base.Tables.Add(new VisiteursDataTable(ds.Tables["Visiteurs"]));
                }
                if ((ds.Tables["AutoQpu"] != null)) {
                    base.Tables.Add(new AutoQpuDataTable(ds.Tables["AutoQpu"]));
                }
                if ((ds.Tables["Log"] != null)) {
                    base.Tables.Add(new LogDataTable(ds.Tables["Log"]));
                }
                if ((ds.Tables["CodesMissions"] != null)) {
                    base.Tables.Add(new CodesMissionsDataTable(ds.Tables["CodesMissions"]));
                }
                if ((ds.Tables["Synthese"] != null)) {
                    base.Tables.Add(new SyntheseDataTable(ds.Tables["Synthese"]));
                }
                if ((ds.Tables["SyntheseTaxiAbsents"] != null)) {
                    base.Tables.Add(new SyntheseTaxiAbsentsDataTable(ds.Tables["SyntheseTaxiAbsents"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableUsers = ((UsersDataTable)(base.Tables["Users"]));
            if ((initTable == true)) {
                if ((this.tableUsers != null)) {
                    this.tableUsers.InitVars();
                }
            }
            this.tableDroits = ((DroitsDataTable)(base.Tables["Droits"]));
            if ((initTable == true)) {
                if ((this.tableDroits != null)) {
                    this.tableDroits.InitVars();
                }
            }
            this.tableBadges = ((BadgesDataTable)(base.Tables["Badges"]));
            if ((initTable == true)) {
                if ((this.tableBadges != null)) {
                    this.tableBadges.InitVars();
                }
            }
            this.tableListes = ((ListesDataTable)(base.Tables["Listes"]));
            if ((initTable == true)) {
                if ((this.tableListes != null)) {
                    this.tableListes.InitVars();
                }
            }
            this.tableListesUsers = ((ListesUsersDataTable)(base.Tables["ListesUsers"]));
            if ((initTable == true)) {
                if ((this.tableListesUsers != null)) {
                    this.tableListesUsers.InitVars();
                }
            }
            this.tableServices = ((ServicesDataTable)(base.Tables["Services"]));
            if ((initTable == true)) {
                if ((this.tableServices != null)) {
                    this.tableServices.InitVars();
                }
            }
            this.tableUsersBioData = ((UsersBioDataDataTable)(base.Tables["UsersBioData"]));
            if ((initTable == true)) {
                if ((this.tableUsersBioData != null)) {
                    this.tableUsersBioData.InitVars();
                }
            }
            this.tableOperateurs = ((OperateursDataTable)(base.Tables["Operateurs"]));
            if ((initTable == true)) {
                if ((this.tableOperateurs != null)) {
                    this.tableOperateurs.InitVars();
                }
            }
            this.tableLecteurs = ((LecteursDataTable)(base.Tables["Lecteurs"]));
            if ((initTable == true)) {
                if ((this.tableLecteurs != null)) {
                    this.tableLecteurs.InitVars();
                }
            }
            this.tableEvents = ((EventsDataTable)(base.Tables["Events"]));
            if ((initTable == true)) {
                if ((this.tableEvents != null)) {
                    this.tableEvents.InitVars();
                }
            }
            this.tableTypeTaxi = ((TypeTaxiDataTable)(base.Tables["TypeTaxi"]));
            if ((initTable == true)) {
                if ((this.tableTypeTaxi != null)) {
                    this.tableTypeTaxi.InitVars();
                }
            }
            this.tableControleUser = ((ControleUserDataTable)(base.Tables["ControleUser"]));
            if ((initTable == true)) {
                if ((this.tableControleUser != null)) {
                    this.tableControleUser.InitVars();
                }
            }
            this.tableLabelsControles = ((LabelsControlesDataTable)(base.Tables["LabelsControles"]));
            if ((initTable == true)) {
                if ((this.tableLabelsControles != null)) {
                    this.tableLabelsControles.InitVars();
                }
            }
            this.tableControles = ((ControlesDataTable)(base.Tables["Controles"]));
            if ((initTable == true)) {
                if ((this.tableControles != null)) {
                    this.tableControles.InitVars();
                }
            }
            this.tableVehicules = ((VehiculesDataTable)(base.Tables["Vehicules"]));
            if ((initTable == true)) {
                if ((this.tableVehicules != null)) {
                    this.tableVehicules.InitVars();
                }
            }
            this.tableAgrement = ((AgrementDataTable)(base.Tables["Agrement"]));
            if ((initTable == true)) {
                if ((this.tableAgrement != null)) {
                    this.tableAgrement.InitVars();
                }
            }
            this.tableCommunes = ((CommunesDataTable)(base.Tables["Communes"]));
            if ((initTable == true)) {
                if ((this.tableCommunes != null)) {
                    this.tableCommunes.InitVars();
                }
            }
            this.tableMotifs = ((MotifsDataTable)(base.Tables["Motifs"]));
            if ((initTable == true)) {
                if ((this.tableMotifs != null)) {
                    this.tableMotifs.InitVars();
                }
            }
            this.tableVisiteurs = ((VisiteursDataTable)(base.Tables["Visiteurs"]));
            if ((initTable == true)) {
                if ((this.tableVisiteurs != null)) {
                    this.tableVisiteurs.InitVars();
                }
            }
            this.tableAutoQpu = ((AutoQpuDataTable)(base.Tables["AutoQpu"]));
            if ((initTable == true)) {
                if ((this.tableAutoQpu != null)) {
                    this.tableAutoQpu.InitVars();
                }
            }
            this.tableLog = ((LogDataTable)(base.Tables["Log"]));
            if ((initTable == true)) {
                if ((this.tableLog != null)) {
                    this.tableLog.InitVars();
                }
            }
            this.tableCodesMissions = ((CodesMissionsDataTable)(base.Tables["CodesMissions"]));
            if ((initTable == true)) {
                if ((this.tableCodesMissions != null)) {
                    this.tableCodesMissions.InitVars();
                }
            }
            this.tableSynthese = ((SyntheseDataTable)(base.Tables["Synthese"]));
            if ((initTable == true)) {
                if ((this.tableSynthese != null)) {
                    this.tableSynthese.InitVars();
                }
            }
            this.tableSyntheseTaxiAbsents = ((SyntheseTaxiAbsentsDataTable)(base.Tables["SyntheseTaxiAbsents"]));
            if ((initTable == true)) {
                if ((this.tableSyntheseTaxiAbsents != null)) {
                    this.tableSyntheseTaxiAbsents.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "MyDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MyDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableUsers = new UsersDataTable();
            base.Tables.Add(this.tableUsers);
            this.tableDroits = new DroitsDataTable();
            base.Tables.Add(this.tableDroits);
            this.tableBadges = new BadgesDataTable();
            base.Tables.Add(this.tableBadges);
            this.tableListes = new ListesDataTable();
            base.Tables.Add(this.tableListes);
            this.tableListesUsers = new ListesUsersDataTable();
            base.Tables.Add(this.tableListesUsers);
            this.tableServices = new ServicesDataTable();
            base.Tables.Add(this.tableServices);
            this.tableUsersBioData = new UsersBioDataDataTable();
            base.Tables.Add(this.tableUsersBioData);
            this.tableOperateurs = new OperateursDataTable();
            base.Tables.Add(this.tableOperateurs);
            this.tableLecteurs = new LecteursDataTable();
            base.Tables.Add(this.tableLecteurs);
            this.tableEvents = new EventsDataTable();
            base.Tables.Add(this.tableEvents);
            this.tableTypeTaxi = new TypeTaxiDataTable();
            base.Tables.Add(this.tableTypeTaxi);
            this.tableControleUser = new ControleUserDataTable();
            base.Tables.Add(this.tableControleUser);
            this.tableLabelsControles = new LabelsControlesDataTable();
            base.Tables.Add(this.tableLabelsControles);
            this.tableControles = new ControlesDataTable();
            base.Tables.Add(this.tableControles);
            this.tableVehicules = new VehiculesDataTable();
            base.Tables.Add(this.tableVehicules);
            this.tableAgrement = new AgrementDataTable();
            base.Tables.Add(this.tableAgrement);
            this.tableCommunes = new CommunesDataTable();
            base.Tables.Add(this.tableCommunes);
            this.tableMotifs = new MotifsDataTable();
            base.Tables.Add(this.tableMotifs);
            this.tableVisiteurs = new VisiteursDataTable();
            base.Tables.Add(this.tableVisiteurs);
            this.tableAutoQpu = new AutoQpuDataTable();
            base.Tables.Add(this.tableAutoQpu);
            this.tableLog = new LogDataTable();
            base.Tables.Add(this.tableLog);
            this.tableCodesMissions = new CodesMissionsDataTable();
            base.Tables.Add(this.tableCodesMissions);
            this.tableSynthese = new SyntheseDataTable();
            base.Tables.Add(this.tableSynthese);
            this.tableSyntheseTaxiAbsents = new SyntheseTaxiAbsentsDataTable();
            base.Tables.Add(this.tableSyntheseTaxiAbsents);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeDroits() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeBadges() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeListes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeListesUsers() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeServices() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeUsersBioData() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeOperateurs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLecteurs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeEvents() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeTypeTaxi() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeControleUser() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLabelsControles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeControles() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVehicules() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAgrement() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCommunes() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeMotifs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeVisiteurs() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeAutoQpu() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeLog() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeCodesMissions() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSynthese() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeSyntheseTaxiAbsents() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MyDataSet ds = new MyDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UsersRowChangeEventHandler(object sender, UsersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void DroitsRowChangeEventHandler(object sender, DroitsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void BadgesRowChangeEventHandler(object sender, BadgesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ListesRowChangeEventHandler(object sender, ListesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ListesUsersRowChangeEventHandler(object sender, ListesUsersRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ServicesRowChangeEventHandler(object sender, ServicesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void UsersBioDataRowChangeEventHandler(object sender, UsersBioDataRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void OperateursRowChangeEventHandler(object sender, OperateursRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LecteursRowChangeEventHandler(object sender, LecteursRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void EventsRowChangeEventHandler(object sender, EventsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void TypeTaxiRowChangeEventHandler(object sender, TypeTaxiRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ControleUserRowChangeEventHandler(object sender, ControleUserRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LabelsControlesRowChangeEventHandler(object sender, LabelsControlesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void ControlesRowChangeEventHandler(object sender, ControlesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VehiculesRowChangeEventHandler(object sender, VehiculesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AgrementRowChangeEventHandler(object sender, AgrementRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CommunesRowChangeEventHandler(object sender, CommunesRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void MotifsRowChangeEventHandler(object sender, MotifsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void VisiteursRowChangeEventHandler(object sender, VisiteursRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void AutoQpuRowChangeEventHandler(object sender, AutoQpuRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void LogRowChangeEventHandler(object sender, LogRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void CodesMissionsRowChangeEventHandler(object sender, CodesMissionsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SyntheseRowChangeEventHandler(object sender, SyntheseRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void SyntheseTaxiAbsentsRowChangeEventHandler(object sender, SyntheseTaxiAbsentsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UsersDataTable : global::System.Data.TypedTableBase<UsersRow> {
            
            private global::System.Data.DataColumn columnIdUser;
            
            private global::System.Data.DataColumn columnMatricule;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnNumService;
            
            private global::System.Data.DataColumn columnTel;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnFlagAutorise;
            
            private global::System.Data.DataColumn columnDateDebut;
            
            private global::System.Data.DataColumn columnDateFin;
            
            private global::System.Data.DataColumn columnNumDroitAcces;
            
            private global::System.Data.DataColumn columnNumBadge;
            
            private global::System.Data.DataColumn columnNumCode;
            
            private global::System.Data.DataColumn columnNbEmpreintes;
            
            private global::System.Data.DataColumn columnAdresse1;
            
            private global::System.Data.DataColumn columnAdresse2;
            
            private global::System.Data.DataColumn columnCodePostal;
            
            private global::System.Data.DataColumn columnVille;
            
            private global::System.Data.DataColumn columnTelephone;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnDateCreat;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnDateNaissance;
            
            private global::System.Data.DataColumn columnHeureMois;
            
            private global::System.Data.DataColumn columnTauxNormal;
            
            private global::System.Data.DataColumn columnTauxSup1;
            
            private global::System.Data.DataColumn columnTauxSup2;
            
            private global::System.Data.DataColumn columnFonction;
            
            private global::System.Data.DataColumn columnTauxSup3;
            
            private global::System.Data.DataColumn columnSexe;
            
            private global::System.Data.DataColumn columnCivilite;
            
            private global::System.Data.DataColumn columnNumCI;
            
            private global::System.Data.DataColumn columnNumSS;
            
            private global::System.Data.DataColumn columnNumHoraire;
            
            private global::System.Data.DataColumn columnCheckAutoDeclar;
            
            private global::System.Data.DataColumn columnCheckBadge;
            
            private global::System.Data.DataColumn columnCheckEmpreinte;
            
            private global::System.Data.DataColumn columnCheckPin;
            
            private global::System.Data.DataColumn columnCodePin;
            
            private global::System.Data.DataColumn columnTauxSup0;
            
            private global::System.Data.DataColumn columnTypeTemps;
            
            private global::System.Data.DataColumn columnModified;
            
            private global::System.Data.DataColumn columnBadgeEncoded;
            
            private global::System.Data.DataColumn columnNumContrat;
            
            private global::System.Data.DataColumn columnTypeUser;
            
            private global::System.Data.DataColumn columnIdUser1;
            
            private global::System.Data.DataColumn columnIdUser2;
            
            private global::System.Data.DataColumn columnIdUser3;
            
            private global::System.Data.DataColumn columnUpdateLecNow;
            
            private global::System.Data.DataColumn columnJourRepos1;
            
            private global::System.Data.DataColumn columnJourRepos2;
            
            private global::System.Data.DataColumn columnNbJrsCongesAnnuels;
            
            private global::System.Data.DataColumn columnLieuNaiss;
            
            private global::System.Data.DataColumn columnDateCI;
            
            private global::System.Data.DataColumn columnNumPermis;
            
            private global::System.Data.DataColumn columnDatePermis;
            
            private global::System.Data.DataColumn columnAncienNumBadge;
            
            private global::System.Data.DataColumn columnTypeAd;
            
            private global::System.Data.DataColumn columnMdp;
            
            private global::System.Data.DataColumn columnUserLogin;
            
            private global::System.Data.DataColumn columnCheckPointageWeb;
            
            private global::System.Data.DataColumn columnNomService;
            
            private global::System.Data.DataColumn columnBioData;
            
            private global::System.Data.DataColumn columnLibelleDroit;
            
            private global::System.Data.DataColumn columnPhoto;
            
            private global::System.Data.DataColumn columnMotif;
            
            private global::System.Data.DataColumn columnLibelleListe;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnObservations;
            
            private global::System.Data.DataColumn columnDateFinMichoc;
            
            private global::System.Data.DataColumn columnCheckBlocageJoursRepos;
            
            private global::System.Data.DataColumn columnCheckPremierPointage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersDataTable() {
                this.TableName = "Users";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUserColumn {
                get {
                    return this.columnIdUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeColumn {
                get {
                    return this.columnMatricule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumServiceColumn {
                get {
                    return this.columnNumService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelColumn {
                get {
                    return this.columnTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagAutoriseColumn {
                get {
                    return this.columnFlagAutorise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateDebutColumn {
                get {
                    return this.columnDateDebut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinColumn {
                get {
                    return this.columnDateFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumDroitAccesColumn {
                get {
                    return this.columnNumDroitAcces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumBadgeColumn {
                get {
                    return this.columnNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumCodeColumn {
                get {
                    return this.columnNumCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NbEmpreintesColumn {
                get {
                    return this.columnNbEmpreintes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adresse1Column {
                get {
                    return this.columnAdresse1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adresse2Column {
                get {
                    return this.columnAdresse2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodePostalColumn {
                get {
                    return this.columnCodePostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VilleColumn {
                get {
                    return this.columnVille;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreatColumn {
                get {
                    return this.columnDateCreat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateNaissanceColumn {
                get {
                    return this.columnDateNaissance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeureMoisColumn {
                get {
                    return this.columnHeureMois;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxNormalColumn {
                get {
                    return this.columnTauxNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup1Column {
                get {
                    return this.columnTauxSup1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup2Column {
                get {
                    return this.columnTauxSup2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FonctionColumn {
                get {
                    return this.columnFonction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup3Column {
                get {
                    return this.columnTauxSup3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SexeColumn {
                get {
                    return this.columnSexe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CiviliteColumn {
                get {
                    return this.columnCivilite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumCIColumn {
                get {
                    return this.columnNumCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumSSColumn {
                get {
                    return this.columnNumSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumHoraireColumn {
                get {
                    return this.columnNumHoraire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckAutoDeclarColumn {
                get {
                    return this.columnCheckAutoDeclar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBadgeColumn {
                get {
                    return this.columnCheckBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckEmpreinteColumn {
                get {
                    return this.columnCheckEmpreinte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckPinColumn {
                get {
                    return this.columnCheckPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodePinColumn {
                get {
                    return this.columnCodePin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup0Column {
                get {
                    return this.columnTauxSup0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeTempsColumn {
                get {
                    return this.columnTypeTemps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedColumn {
                get {
                    return this.columnModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BadgeEncodedColumn {
                get {
                    return this.columnBadgeEncoded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumContratColumn {
                get {
                    return this.columnNumContrat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeUserColumn {
                get {
                    return this.columnTypeUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUser1Column {
                get {
                    return this.columnIdUser1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUser2Column {
                get {
                    return this.columnIdUser2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUser3Column {
                get {
                    return this.columnIdUser3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateLecNowColumn {
                get {
                    return this.columnUpdateLecNow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JourRepos1Column {
                get {
                    return this.columnJourRepos1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JourRepos2Column {
                get {
                    return this.columnJourRepos2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NbJrsCongesAnnuelsColumn {
                get {
                    return this.columnNbJrsCongesAnnuels;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LieuNaissColumn {
                get {
                    return this.columnLieuNaiss;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCIColumn {
                get {
                    return this.columnDateCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumPermisColumn {
                get {
                    return this.columnNumPermis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DatePermisColumn {
                get {
                    return this.columnDatePermis;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AncienNumBadgeColumn {
                get {
                    return this.columnAncienNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeAdColumn {
                get {
                    return this.columnTypeAd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MdpColumn {
                get {
                    return this.columnMdp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UserLoginColumn {
                get {
                    return this.columnUserLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckPointageWebColumn {
                get {
                    return this.columnCheckPointageWeb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomServiceColumn {
                get {
                    return this.columnNomService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BioDataColumn {
                get {
                    return this.columnBioData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleDroitColumn {
                get {
                    return this.columnLibelleDroit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotifColumn {
                get {
                    return this.columnMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleListeColumn {
                get {
                    return this.columnLibelleListe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObservationsColumn {
                get {
                    return this.columnObservations;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinMichocColumn {
                get {
                    return this.columnDateFinMichoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBlocageJoursReposColumn {
                get {
                    return this.columnCheckBlocageJoursRepos;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckPremierPointageColumn {
                get {
                    return this.columnCheckPremierPointage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersRow this[int index] {
                get {
                    return ((UsersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersRowChangeEventHandler UsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUsersRow(UsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersRow AddUsersRow(
                        int IdUser, 
                        string Matricule, 
                        string Nom, 
                        string Prenom, 
                        int NumService, 
                        string Tel, 
                        string Fax, 
                        string FlagAutorise, 
                        System.DateTime DateDebut, 
                        System.DateTime DateFin, 
                        int NumDroitAcces, 
                        string NumBadge, 
                        string NumCode, 
                        int NbEmpreintes, 
                        string Adresse1, 
                        string Adresse2, 
                        string CodePostal, 
                        string Ville, 
                        string Telephone, 
                        string Mobile, 
                        string EMail, 
                        System.DateTime DateCreat, 
                        System.DateTime DateModif, 
                        string DateNaissance, 
                        int HeureMois, 
                        int TauxNormal, 
                        int TauxSup1, 
                        int TauxSup2, 
                        string Fonction, 
                        int TauxSup3, 
                        int Sexe, 
                        int Civilite, 
                        string NumCI, 
                        string NumSS, 
                        int NumHoraire, 
                        bool CheckAutoDeclar, 
                        bool CheckBadge, 
                        bool CheckEmpreinte, 
                        bool CheckPin, 
                        int CodePin, 
                        int TauxSup0, 
                        int TypeTemps, 
                        bool Modified, 
                        bool BadgeEncoded, 
                        int NumContrat, 
                        int TypeUser, 
                        int IdUser1, 
                        int IdUser2, 
                        int IdUser3, 
                        bool UpdateLecNow, 
                        int JourRepos1, 
                        int JourRepos2, 
                        int NbJrsCongesAnnuels, 
                        string LieuNaiss, 
                        string DateCI, 
                        string NumPermis, 
                        string DatePermis, 
                        string AncienNumBadge, 
                        int TypeAd, 
                        string Mdp, 
                        string UserLogin, 
                        bool CheckPointageWeb, 
                        string NomService, 
                        byte[] BioData, 
                        string LibelleDroit, 
                        byte[] Photo, 
                        string Motif, 
                        string LibelleListe, 
                        int Total, 
                        string Observations, 
                        System.DateTime DateFinMichoc, 
                        bool CheckBlocageJoursRepos, 
                        bool CheckPremierPointage) {
                UsersRow rowUsersRow = ((UsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IdUser,
                        Matricule,
                        Nom,
                        Prenom,
                        NumService,
                        Tel,
                        Fax,
                        FlagAutorise,
                        DateDebut,
                        DateFin,
                        NumDroitAcces,
                        NumBadge,
                        NumCode,
                        NbEmpreintes,
                        Adresse1,
                        Adresse2,
                        CodePostal,
                        Ville,
                        Telephone,
                        Mobile,
                        EMail,
                        DateCreat,
                        DateModif,
                        DateNaissance,
                        HeureMois,
                        TauxNormal,
                        TauxSup1,
                        TauxSup2,
                        Fonction,
                        TauxSup3,
                        Sexe,
                        Civilite,
                        NumCI,
                        NumSS,
                        NumHoraire,
                        CheckAutoDeclar,
                        CheckBadge,
                        CheckEmpreinte,
                        CheckPin,
                        CodePin,
                        TauxSup0,
                        TypeTemps,
                        Modified,
                        BadgeEncoded,
                        NumContrat,
                        TypeUser,
                        IdUser1,
                        IdUser2,
                        IdUser3,
                        UpdateLecNow,
                        JourRepos1,
                        JourRepos2,
                        NbJrsCongesAnnuels,
                        LieuNaiss,
                        DateCI,
                        NumPermis,
                        DatePermis,
                        AncienNumBadge,
                        TypeAd,
                        Mdp,
                        UserLogin,
                        CheckPointageWeb,
                        NomService,
                        BioData,
                        LibelleDroit,
                        Photo,
                        Motif,
                        LibelleListe,
                        Total,
                        Observations,
                        DateFinMichoc,
                        CheckBlocageJoursRepos,
                        CheckPremierPointage};
                rowUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUsersRow);
                return rowUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersRow FindByIdUser(int IdUser) {
                return ((UsersRow)(this.Rows.Find(new object[] {
                            IdUser})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UsersDataTable cln = ((UsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdUser = base.Columns["IdUser"];
                this.columnMatricule = base.Columns["Matricule"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnNumService = base.Columns["NumService"];
                this.columnTel = base.Columns["Tel"];
                this.columnFax = base.Columns["Fax"];
                this.columnFlagAutorise = base.Columns["FlagAutorise"];
                this.columnDateDebut = base.Columns["DateDebut"];
                this.columnDateFin = base.Columns["DateFin"];
                this.columnNumDroitAcces = base.Columns["NumDroitAcces"];
                this.columnNumBadge = base.Columns["NumBadge"];
                this.columnNumCode = base.Columns["NumCode"];
                this.columnNbEmpreintes = base.Columns["NbEmpreintes"];
                this.columnAdresse1 = base.Columns["Adresse1"];
                this.columnAdresse2 = base.Columns["Adresse2"];
                this.columnCodePostal = base.Columns["CodePostal"];
                this.columnVille = base.Columns["Ville"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEMail = base.Columns["EMail"];
                this.columnDateCreat = base.Columns["DateCreat"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnDateNaissance = base.Columns["DateNaissance"];
                this.columnHeureMois = base.Columns["HeureMois"];
                this.columnTauxNormal = base.Columns["TauxNormal"];
                this.columnTauxSup1 = base.Columns["TauxSup1"];
                this.columnTauxSup2 = base.Columns["TauxSup2"];
                this.columnFonction = base.Columns["Fonction"];
                this.columnTauxSup3 = base.Columns["TauxSup3"];
                this.columnSexe = base.Columns["Sexe"];
                this.columnCivilite = base.Columns["Civilite"];
                this.columnNumCI = base.Columns["NumCI"];
                this.columnNumSS = base.Columns["NumSS"];
                this.columnNumHoraire = base.Columns["NumHoraire"];
                this.columnCheckAutoDeclar = base.Columns["CheckAutoDeclar"];
                this.columnCheckBadge = base.Columns["CheckBadge"];
                this.columnCheckEmpreinte = base.Columns["CheckEmpreinte"];
                this.columnCheckPin = base.Columns["CheckPin"];
                this.columnCodePin = base.Columns["CodePin"];
                this.columnTauxSup0 = base.Columns["TauxSup0"];
                this.columnTypeTemps = base.Columns["TypeTemps"];
                this.columnModified = base.Columns["Modified"];
                this.columnBadgeEncoded = base.Columns["BadgeEncoded"];
                this.columnNumContrat = base.Columns["NumContrat"];
                this.columnTypeUser = base.Columns["TypeUser"];
                this.columnIdUser1 = base.Columns["IdUser1"];
                this.columnIdUser2 = base.Columns["IdUser2"];
                this.columnIdUser3 = base.Columns["IdUser3"];
                this.columnUpdateLecNow = base.Columns["UpdateLecNow"];
                this.columnJourRepos1 = base.Columns["JourRepos1"];
                this.columnJourRepos2 = base.Columns["JourRepos2"];
                this.columnNbJrsCongesAnnuels = base.Columns["NbJrsCongesAnnuels"];
                this.columnLieuNaiss = base.Columns["LieuNaiss"];
                this.columnDateCI = base.Columns["DateCI"];
                this.columnNumPermis = base.Columns["NumPermis"];
                this.columnDatePermis = base.Columns["DatePermis"];
                this.columnAncienNumBadge = base.Columns["AncienNumBadge"];
                this.columnTypeAd = base.Columns["TypeAd"];
                this.columnMdp = base.Columns["Mdp"];
                this.columnUserLogin = base.Columns["UserLogin"];
                this.columnCheckPointageWeb = base.Columns["CheckPointageWeb"];
                this.columnNomService = base.Columns["NomService"];
                this.columnBioData = base.Columns["BioData"];
                this.columnLibelleDroit = base.Columns["LibelleDroit"];
                this.columnPhoto = base.Columns["Photo"];
                this.columnMotif = base.Columns["Motif"];
                this.columnLibelleListe = base.Columns["LibelleListe"];
                this.columnTotal = base.Columns["Total"];
                this.columnObservations = base.Columns["Observations"];
                this.columnDateFinMichoc = base.Columns["DateFinMichoc"];
                this.columnCheckBlocageJoursRepos = base.Columns["CheckBlocageJoursRepos"];
                this.columnCheckPremierPointage = base.Columns["CheckPremierPointage"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdUser = new global::System.Data.DataColumn("IdUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser);
                this.columnMatricule = new global::System.Data.DataColumn("Matricule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatricule);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnNumService = new global::System.Data.DataColumn("NumService", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumService);
                this.columnTel = new global::System.Data.DataColumn("Tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnFlagAutorise = new global::System.Data.DataColumn("FlagAutorise", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlagAutorise);
                this.columnDateDebut = new global::System.Data.DataColumn("DateDebut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDebut);
                this.columnDateFin = new global::System.Data.DataColumn("DateFin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFin);
                this.columnNumDroitAcces = new global::System.Data.DataColumn("NumDroitAcces", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumDroitAcces);
                this.columnNumBadge = new global::System.Data.DataColumn("NumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumBadge);
                this.columnNumCode = new global::System.Data.DataColumn("NumCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumCode);
                this.columnNbEmpreintes = new global::System.Data.DataColumn("NbEmpreintes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNbEmpreintes);
                this.columnAdresse1 = new global::System.Data.DataColumn("Adresse1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse1);
                this.columnAdresse2 = new global::System.Data.DataColumn("Adresse2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse2);
                this.columnCodePostal = new global::System.Data.DataColumn("CodePostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodePostal);
                this.columnVille = new global::System.Data.DataColumn("Ville", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille);
                this.columnTelephone = new global::System.Data.DataColumn("Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnDateCreat = new global::System.Data.DataColumn("DateCreat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreat);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnDateNaissance = new global::System.Data.DataColumn("DateNaissance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateNaissance);
                this.columnHeureMois = new global::System.Data.DataColumn("HeureMois", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeureMois);
                this.columnTauxNormal = new global::System.Data.DataColumn("TauxNormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxNormal);
                this.columnTauxSup1 = new global::System.Data.DataColumn("TauxSup1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup1);
                this.columnTauxSup2 = new global::System.Data.DataColumn("TauxSup2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup2);
                this.columnFonction = new global::System.Data.DataColumn("Fonction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFonction);
                this.columnTauxSup3 = new global::System.Data.DataColumn("TauxSup3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup3);
                this.columnSexe = new global::System.Data.DataColumn("Sexe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexe);
                this.columnCivilite = new global::System.Data.DataColumn("Civilite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCivilite);
                this.columnNumCI = new global::System.Data.DataColumn("NumCI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumCI);
                this.columnNumSS = new global::System.Data.DataColumn("NumSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumSS);
                this.columnNumHoraire = new global::System.Data.DataColumn("NumHoraire", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumHoraire);
                this.columnCheckAutoDeclar = new global::System.Data.DataColumn("CheckAutoDeclar", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckAutoDeclar);
                this.columnCheckBadge = new global::System.Data.DataColumn("CheckBadge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBadge);
                this.columnCheckEmpreinte = new global::System.Data.DataColumn("CheckEmpreinte", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckEmpreinte);
                this.columnCheckPin = new global::System.Data.DataColumn("CheckPin", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckPin);
                this.columnCodePin = new global::System.Data.DataColumn("CodePin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodePin);
                this.columnTauxSup0 = new global::System.Data.DataColumn("TauxSup0", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup0);
                this.columnTypeTemps = new global::System.Data.DataColumn("TypeTemps", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeTemps);
                this.columnModified = new global::System.Data.DataColumn("Modified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified);
                this.columnBadgeEncoded = new global::System.Data.DataColumn("BadgeEncoded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBadgeEncoded);
                this.columnNumContrat = new global::System.Data.DataColumn("NumContrat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumContrat);
                this.columnTypeUser = new global::System.Data.DataColumn("TypeUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeUser);
                this.columnIdUser1 = new global::System.Data.DataColumn("IdUser1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser1);
                this.columnIdUser2 = new global::System.Data.DataColumn("IdUser2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser2);
                this.columnIdUser3 = new global::System.Data.DataColumn("IdUser3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser3);
                this.columnUpdateLecNow = new global::System.Data.DataColumn("UpdateLecNow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateLecNow);
                this.columnJourRepos1 = new global::System.Data.DataColumn("JourRepos1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJourRepos1);
                this.columnJourRepos2 = new global::System.Data.DataColumn("JourRepos2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJourRepos2);
                this.columnNbJrsCongesAnnuels = new global::System.Data.DataColumn("NbJrsCongesAnnuels", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNbJrsCongesAnnuels);
                this.columnLieuNaiss = new global::System.Data.DataColumn("LieuNaiss", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLieuNaiss);
                this.columnDateCI = new global::System.Data.DataColumn("DateCI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCI);
                this.columnNumPermis = new global::System.Data.DataColumn("NumPermis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumPermis);
                this.columnDatePermis = new global::System.Data.DataColumn("DatePermis", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatePermis);
                this.columnAncienNumBadge = new global::System.Data.DataColumn("AncienNumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAncienNumBadge);
                this.columnTypeAd = new global::System.Data.DataColumn("TypeAd", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeAd);
                this.columnMdp = new global::System.Data.DataColumn("Mdp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMdp);
                this.columnUserLogin = new global::System.Data.DataColumn("UserLogin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUserLogin);
                this.columnCheckPointageWeb = new global::System.Data.DataColumn("CheckPointageWeb", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckPointageWeb);
                this.columnNomService = new global::System.Data.DataColumn("NomService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomService);
                this.columnBioData = new global::System.Data.DataColumn("BioData", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBioData);
                this.columnLibelleDroit = new global::System.Data.DataColumn("LibelleDroit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleDroit);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnMotif = new global::System.Data.DataColumn("Motif", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotif);
                this.columnLibelleListe = new global::System.Data.DataColumn("LibelleListe", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleListe);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnObservations = new global::System.Data.DataColumn("Observations", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObservations);
                this.columnDateFinMichoc = new global::System.Data.DataColumn("DateFinMichoc", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFinMichoc);
                this.columnCheckBlocageJoursRepos = new global::System.Data.DataColumn("CheckBlocageJoursRepos", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBlocageJoursRepos);
                this.columnCheckPremierPointage = new global::System.Data.DataColumn("CheckPremierPointage", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckPremierPointage);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnIdUser}, true));
                this.columnIdUser.AllowDBNull = false;
                this.columnIdUser.Unique = true;
                this.columnMatricule.MaxLength = 20;
                this.columnNom.MaxLength = 30;
                this.columnPrenom.MaxLength = 30;
                this.columnTel.MaxLength = 15;
                this.columnFax.MaxLength = 50;
                this.columnFlagAutorise.MaxLength = 5;
                this.columnNumBadge.MaxLength = 20;
                this.columnNumCode.MaxLength = 8;
                this.columnAdresse1.MaxLength = 50;
                this.columnAdresse2.MaxLength = 50;
                this.columnCodePostal.MaxLength = 10;
                this.columnVille.MaxLength = 30;
                this.columnTelephone.MaxLength = 15;
                this.columnMobile.MaxLength = 15;
                this.columnEMail.MaxLength = 50;
                this.columnDateNaissance.MaxLength = 50;
                this.columnFonction.MaxLength = 50;
                this.columnNumCI.MaxLength = 15;
                this.columnNumSS.MaxLength = 20;
                this.columnLieuNaiss.MaxLength = 20;
                this.columnDateCI.MaxLength = 20;
                this.columnNumPermis.MaxLength = 20;
                this.columnDatePermis.MaxLength = 20;
                this.columnAncienNumBadge.MaxLength = 20;
                this.columnMdp.MaxLength = 20;
                this.columnUserLogin.MaxLength = 30;
                this.columnNomService.MaxLength = 100;
                this.columnLibelleDroit.MaxLength = 100;
                this.columnMotif.MaxLength = 50;
                this.columnLibelleListe.MaxLength = 50;
                this.columnObservations.MaxLength = 1000;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersRow NewUsersRow() {
                return ((UsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UsersRowChanged != null)) {
                    this.UsersRowChanged(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UsersRowChanging != null)) {
                    this.UsersRowChanging(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UsersRowDeleted != null)) {
                    this.UsersRowDeleted(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UsersRowDeleting != null)) {
                    this.UsersRowDeleting(this, new UsersRowChangeEvent(((UsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUsersRow(UsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class DroitsDataTable : global::System.Data.TypedTableBase<DroitsRow> {
            
            private global::System.Data.DataColumn columnNumDroit;
            
            private global::System.Data.DataColumn columnLibelleDroit;
            
            private global::System.Data.DataColumn columnIdPenalite;
            
            private global::System.Data.DataColumn columnIdBonification;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsDataTable() {
                this.TableName = "Droits";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DroitsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected DroitsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumDroitColumn {
                get {
                    return this.columnNumDroit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleDroitColumn {
                get {
                    return this.columnLibelleDroit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdPenaliteColumn {
                get {
                    return this.columnIdPenalite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdBonificationColumn {
                get {
                    return this.columnIdBonification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsRow this[int index] {
                get {
                    return ((DroitsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DroitsRowChangeEventHandler DroitsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DroitsRowChangeEventHandler DroitsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DroitsRowChangeEventHandler DroitsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event DroitsRowChangeEventHandler DroitsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddDroitsRow(DroitsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsRow AddDroitsRow(int NumDroit, string LibelleDroit, decimal IdPenalite, decimal IdBonification) {
                DroitsRow rowDroitsRow = ((DroitsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumDroit,
                        LibelleDroit,
                        IdPenalite,
                        IdBonification};
                rowDroitsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowDroitsRow);
                return rowDroitsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsRow FindByNumDroit(int NumDroit) {
                return ((DroitsRow)(this.Rows.Find(new object[] {
                            NumDroit})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                DroitsDataTable cln = ((DroitsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new DroitsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumDroit = base.Columns["NumDroit"];
                this.columnLibelleDroit = base.Columns["LibelleDroit"];
                this.columnIdPenalite = base.Columns["IdPenalite"];
                this.columnIdBonification = base.Columns["IdBonification"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumDroit = new global::System.Data.DataColumn("NumDroit", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumDroit);
                this.columnLibelleDroit = new global::System.Data.DataColumn("LibelleDroit", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleDroit);
                this.columnIdPenalite = new global::System.Data.DataColumn("IdPenalite", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdPenalite);
                this.columnIdBonification = new global::System.Data.DataColumn("IdBonification", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdBonification);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNumDroit}, true));
                this.columnNumDroit.AllowDBNull = false;
                this.columnNumDroit.Unique = true;
                this.columnLibelleDroit.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsRow NewDroitsRow() {
                return ((DroitsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new DroitsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(DroitsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DroitsRowChanged != null)) {
                    this.DroitsRowChanged(this, new DroitsRowChangeEvent(((DroitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DroitsRowChanging != null)) {
                    this.DroitsRowChanging(this, new DroitsRowChangeEvent(((DroitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DroitsRowDeleted != null)) {
                    this.DroitsRowDeleted(this, new DroitsRowChangeEvent(((DroitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DroitsRowDeleting != null)) {
                    this.DroitsRowDeleting(this, new DroitsRowChangeEvent(((DroitsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveDroitsRow(DroitsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "DroitsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class BadgesDataTable : global::System.Data.TypedTableBase<BadgesRow> {
            
            private global::System.Data.DataColumn columnNumBadge;
            
            private global::System.Data.DataColumn columnFlagAutorise;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnMatricule;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BadgesDataTable() {
                this.TableName = "Badges";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BadgesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected BadgesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumBadgeColumn {
                get {
                    return this.columnNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagAutoriseColumn {
                get {
                    return this.columnFlagAutorise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeColumn {
                get {
                    return this.columnMatricule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BadgesRow this[int index] {
                get {
                    return ((BadgesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BadgesRowChangeEventHandler BadgesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BadgesRowChangeEventHandler BadgesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BadgesRowChangeEventHandler BadgesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event BadgesRowChangeEventHandler BadgesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddBadgesRow(BadgesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BadgesRow AddBadgesRow(string NumBadge, string FlagAutorise, string Nom, string Prenom, string Matricule, int Total) {
                BadgesRow rowBadgesRow = ((BadgesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumBadge,
                        FlagAutorise,
                        Nom,
                        Prenom,
                        Matricule,
                        Total};
                rowBadgesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowBadgesRow);
                return rowBadgesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                BadgesDataTable cln = ((BadgesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new BadgesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumBadge = base.Columns["NumBadge"];
                this.columnFlagAutorise = base.Columns["FlagAutorise"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnMatricule = base.Columns["Matricule"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumBadge = new global::System.Data.DataColumn("NumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumBadge);
                this.columnFlagAutorise = new global::System.Data.DataColumn("FlagAutorise", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlagAutorise);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnMatricule = new global::System.Data.DataColumn("Matricule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatricule);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnNumBadge.MaxLength = 20;
                this.columnFlagAutorise.MaxLength = 5;
                this.columnNom.MaxLength = 30;
                this.columnPrenom.MaxLength = 30;
                this.columnMatricule.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BadgesRow NewBadgesRow() {
                return ((BadgesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new BadgesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(BadgesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.BadgesRowChanged != null)) {
                    this.BadgesRowChanged(this, new BadgesRowChangeEvent(((BadgesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.BadgesRowChanging != null)) {
                    this.BadgesRowChanging(this, new BadgesRowChangeEvent(((BadgesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.BadgesRowDeleted != null)) {
                    this.BadgesRowDeleted(this, new BadgesRowChangeEvent(((BadgesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.BadgesRowDeleting != null)) {
                    this.BadgesRowDeleting(this, new BadgesRowChangeEvent(((BadgesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveBadgesRow(BadgesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "BadgesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListesDataTable : global::System.Data.TypedTableBase<ListesRow> {
            
            private global::System.Data.DataColumn columnNum;
            
            private global::System.Data.DataColumn columnLibelle;
            
            private global::System.Data.DataColumn columnAbrev;
            
            private global::System.Data.DataColumn columnType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesDataTable() {
                this.TableName = "Listes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ListesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ListesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumColumn {
                get {
                    return this.columnNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleColumn {
                get {
                    return this.columnLibelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbrevColumn {
                get {
                    return this.columnAbrev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesRow this[int index] {
                get {
                    return ((ListesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesRowChangeEventHandler ListesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesRowChangeEventHandler ListesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesRowChangeEventHandler ListesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesRowChangeEventHandler ListesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddListesRow(ListesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesRow AddListesRow(string Libelle, string Abrev, int Type) {
                ListesRow rowListesRow = ((ListesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Libelle,
                        Abrev,
                        Type};
                rowListesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListesRow);
                return rowListesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesRow FindByNum(int Num) {
                return ((ListesRow)(this.Rows.Find(new object[] {
                            Num})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ListesDataTable cln = ((ListesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNum = base.Columns["Num"];
                this.columnLibelle = base.Columns["Libelle"];
                this.columnAbrev = base.Columns["Abrev"];
                this.columnType = base.Columns["Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNum = new global::System.Data.DataColumn("Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum);
                this.columnLibelle = new global::System.Data.DataColumn("Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelle);
                this.columnAbrev = new global::System.Data.DataColumn("Abrev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbrev);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNum}, true));
                this.columnNum.AutoIncrement = true;
                this.columnNum.AutoIncrementSeed = -1;
                this.columnNum.AutoIncrementStep = -1;
                this.columnNum.AllowDBNull = false;
                this.columnNum.ReadOnly = true;
                this.columnNum.Unique = true;
                this.columnLibelle.MaxLength = 50;
                this.columnAbrev.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesRow NewListesRow() {
                return ((ListesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ListesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListesRowChanged != null)) {
                    this.ListesRowChanged(this, new ListesRowChangeEvent(((ListesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListesRowChanging != null)) {
                    this.ListesRowChanging(this, new ListesRowChangeEvent(((ListesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListesRowDeleted != null)) {
                    this.ListesRowDeleted(this, new ListesRowChangeEvent(((ListesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListesRowDeleting != null)) {
                    this.ListesRowDeleting(this, new ListesRowChangeEvent(((ListesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveListesRow(ListesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ListesUsersDataTable : global::System.Data.TypedTableBase<ListesUsersRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnNumListe;
            
            private global::System.Data.DataColumn columnIdUser;
            
            private global::System.Data.DataColumn columnIdMotif;
            
            private global::System.Data.DataColumn columnOrdre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersDataTable() {
                this.TableName = "ListesUsers";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ListesUsersDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ListesUsersDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumListeColumn {
                get {
                    return this.columnNumListe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUserColumn {
                get {
                    return this.columnIdUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdMotifColumn {
                get {
                    return this.columnIdMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OrdreColumn {
                get {
                    return this.columnOrdre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersRow this[int index] {
                get {
                    return ((ListesUsersRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesUsersRowChangeEventHandler ListesUsersRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesUsersRowChangeEventHandler ListesUsersRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesUsersRowChangeEventHandler ListesUsersRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ListesUsersRowChangeEventHandler ListesUsersRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddListesUsersRow(ListesUsersRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersRow AddListesUsersRow(int Id, int NumListe, int IdUser, int IdMotif, int Ordre) {
                ListesUsersRow rowListesUsersRow = ((ListesUsersRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        NumListe,
                        IdUser,
                        IdMotif,
                        Ordre};
                rowListesUsersRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowListesUsersRow);
                return rowListesUsersRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersRow FindById(int Id) {
                return ((ListesUsersRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ListesUsersDataTable cln = ((ListesUsersDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ListesUsersDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnNumListe = base.Columns["NumListe"];
                this.columnIdUser = base.Columns["IdUser"];
                this.columnIdMotif = base.Columns["IdMotif"];
                this.columnOrdre = base.Columns["Ordre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnNumListe = new global::System.Data.DataColumn("NumListe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumListe);
                this.columnIdUser = new global::System.Data.DataColumn("IdUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser);
                this.columnIdMotif = new global::System.Data.DataColumn("IdMotif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdMotif);
                this.columnOrdre = new global::System.Data.DataColumn("Ordre", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOrdre);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersRow NewListesUsersRow() {
                return ((ListesUsersRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ListesUsersRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ListesUsersRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ListesUsersRowChanged != null)) {
                    this.ListesUsersRowChanged(this, new ListesUsersRowChangeEvent(((ListesUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ListesUsersRowChanging != null)) {
                    this.ListesUsersRowChanging(this, new ListesUsersRowChangeEvent(((ListesUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ListesUsersRowDeleted != null)) {
                    this.ListesUsersRowDeleted(this, new ListesUsersRowChangeEvent(((ListesUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ListesUsersRowDeleting != null)) {
                    this.ListesUsersRowDeleting(this, new ListesUsersRowChangeEvent(((ListesUsersRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveListesUsersRow(ListesUsersRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ListesUsersDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ServicesDataTable : global::System.Data.TypedTableBase<ServicesRow> {
            
            private global::System.Data.DataColumn columnNumService;
            
            private global::System.Data.DataColumn columnNomService;
            
            private global::System.Data.DataColumn columnNumDroitAcces;
            
            private global::System.Data.DataColumn columnNumServicePere;
            
            private global::System.Data.DataColumn columnNumListSignataires;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesDataTable() {
                this.TableName = "Services";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ServicesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ServicesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumServiceColumn {
                get {
                    return this.columnNumService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomServiceColumn {
                get {
                    return this.columnNomService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumDroitAccesColumn {
                get {
                    return this.columnNumDroitAcces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumServicePereColumn {
                get {
                    return this.columnNumServicePere;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumListSignatairesColumn {
                get {
                    return this.columnNumListSignataires;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow this[int index] {
                get {
                    return ((ServicesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ServicesRowChangeEventHandler ServicesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddServicesRow(ServicesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow AddServicesRow(int NumService, string NomService, int NumDroitAcces, int NumServicePere, int NumListSignataires) {
                ServicesRow rowServicesRow = ((ServicesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumService,
                        NomService,
                        NumDroitAcces,
                        NumServicePere,
                        NumListSignataires};
                rowServicesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowServicesRow);
                return rowServicesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow FindByNumService(int NumService) {
                return ((ServicesRow)(this.Rows.Find(new object[] {
                            NumService})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ServicesDataTable cln = ((ServicesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ServicesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumService = base.Columns["NumService"];
                this.columnNomService = base.Columns["NomService"];
                this.columnNumDroitAcces = base.Columns["NumDroitAcces"];
                this.columnNumServicePere = base.Columns["NumServicePere"];
                this.columnNumListSignataires = base.Columns["NumListSignataires"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumService = new global::System.Data.DataColumn("NumService", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumService);
                this.columnNomService = new global::System.Data.DataColumn("NomService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomService);
                this.columnNumDroitAcces = new global::System.Data.DataColumn("NumDroitAcces", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumDroitAcces);
                this.columnNumServicePere = new global::System.Data.DataColumn("NumServicePere", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumServicePere);
                this.columnNumListSignataires = new global::System.Data.DataColumn("NumListSignataires", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumListSignataires);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNumService}, true));
                this.columnNumService.AllowDBNull = false;
                this.columnNumService.Unique = true;
                this.columnNomService.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow NewServicesRow() {
                return ((ServicesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ServicesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ServicesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ServicesRowChanged != null)) {
                    this.ServicesRowChanged(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ServicesRowChanging != null)) {
                    this.ServicesRowChanging(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ServicesRowDeleted != null)) {
                    this.ServicesRowDeleted(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ServicesRowDeleting != null)) {
                    this.ServicesRowDeleting(this, new ServicesRowChangeEvent(((ServicesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveServicesRow(ServicesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ServicesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class UsersBioDataDataTable : global::System.Data.TypedTableBase<UsersBioDataRow> {
            
            private global::System.Data.DataColumn columnMatricule;
            
            private global::System.Data.DataColumn columnBioData;
            
            private global::System.Data.DataColumn columnPhoto;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataDataTable() {
                this.TableName = "UsersBioData";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UsersBioDataDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected UsersBioDataDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeColumn {
                get {
                    return this.columnMatricule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BioDataColumn {
                get {
                    return this.columnBioData;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataRow this[int index] {
                get {
                    return ((UsersBioDataRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersBioDataRowChangeEventHandler UsersBioDataRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersBioDataRowChangeEventHandler UsersBioDataRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersBioDataRowChangeEventHandler UsersBioDataRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event UsersBioDataRowChangeEventHandler UsersBioDataRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddUsersBioDataRow(UsersBioDataRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataRow AddUsersBioDataRow(string Matricule, byte[] BioData, byte[] Photo) {
                UsersBioDataRow rowUsersBioDataRow = ((UsersBioDataRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Matricule,
                        BioData,
                        Photo};
                rowUsersBioDataRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowUsersBioDataRow);
                return rowUsersBioDataRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataRow FindByMatricule(string Matricule) {
                return ((UsersBioDataRow)(this.Rows.Find(new object[] {
                            Matricule})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                UsersBioDataDataTable cln = ((UsersBioDataDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new UsersBioDataDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnMatricule = base.Columns["Matricule"];
                this.columnBioData = base.Columns["BioData"];
                this.columnPhoto = base.Columns["Photo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnMatricule = new global::System.Data.DataColumn("Matricule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatricule);
                this.columnBioData = new global::System.Data.DataColumn("BioData", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBioData);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMatricule}, true));
                this.columnMatricule.AllowDBNull = false;
                this.columnMatricule.Unique = true;
                this.columnMatricule.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataRow NewUsersBioDataRow() {
                return ((UsersBioDataRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new UsersBioDataRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(UsersBioDataRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.UsersBioDataRowChanged != null)) {
                    this.UsersBioDataRowChanged(this, new UsersBioDataRowChangeEvent(((UsersBioDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.UsersBioDataRowChanging != null)) {
                    this.UsersBioDataRowChanging(this, new UsersBioDataRowChangeEvent(((UsersBioDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.UsersBioDataRowDeleted != null)) {
                    this.UsersBioDataRowDeleted(this, new UsersBioDataRowChangeEvent(((UsersBioDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.UsersBioDataRowDeleting != null)) {
                    this.UsersBioDataRowDeleting(this, new UsersBioDataRowChangeEvent(((UsersBioDataRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveUsersBioDataRow(UsersBioDataRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "UsersBioDataDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class OperateursDataTable : global::System.Data.TypedTableBase<OperateursRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnIDCreateur;
            
            private global::System.Data.DataColumn columnDebut;
            
            private global::System.Data.DataColumn columnFin;
            
            private global::System.Data.DataColumn columnProfil;
            
            private global::System.Data.DataColumn columnLogin;
            
            private global::System.Data.DataColumn columnMotPasse;
            
            private global::System.Data.DataColumn columnRefEmpreinte;
            
            private global::System.Data.DataColumn columnNomService;
            
            private global::System.Data.DataColumn columnMenusAutorises;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OperateursDataTable() {
                this.TableName = "Operateurs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OperateursDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected OperateursDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDCreateurColumn {
                get {
                    return this.columnIDCreateur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DebutColumn {
                get {
                    return this.columnDebut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinColumn {
                get {
                    return this.columnFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfilColumn {
                get {
                    return this.columnProfil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoginColumn {
                get {
                    return this.columnLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotPasseColumn {
                get {
                    return this.columnMotPasse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RefEmpreinteColumn {
                get {
                    return this.columnRefEmpreinte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomServiceColumn {
                get {
                    return this.columnNomService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MenusAutorisesColumn {
                get {
                    return this.columnMenusAutorises;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OperateursRow this[int index] {
                get {
                    return ((OperateursRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OperateursRowChangeEventHandler OperateursRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OperateursRowChangeEventHandler OperateursRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OperateursRowChangeEventHandler OperateursRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event OperateursRowChangeEventHandler OperateursRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddOperateursRow(OperateursRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OperateursRow AddOperateursRow(int ID, string Nom, string Prenom, System.DateTime DateCreation, int IDCreateur, System.DateTime Debut, System.DateTime Fin, string Profil, string Login, string MotPasse, string RefEmpreinte, string NomService, string MenusAutorises) {
                OperateursRow rowOperateursRow = ((OperateursRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        Nom,
                        Prenom,
                        DateCreation,
                        IDCreateur,
                        Debut,
                        Fin,
                        Profil,
                        Login,
                        MotPasse,
                        RefEmpreinte,
                        NomService,
                        MenusAutorises};
                rowOperateursRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowOperateursRow);
                return rowOperateursRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                OperateursDataTable cln = ((OperateursDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new OperateursDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnIDCreateur = base.Columns["IDCreateur"];
                this.columnDebut = base.Columns["Debut"];
                this.columnFin = base.Columns["Fin"];
                this.columnProfil = base.Columns["Profil"];
                this.columnLogin = base.Columns["Login"];
                this.columnMotPasse = base.Columns["MotPasse"];
                this.columnRefEmpreinte = base.Columns["RefEmpreinte"];
                this.columnNomService = base.Columns["NomService"];
                this.columnMenusAutorises = base.Columns["MenusAutorises"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnIDCreateur = new global::System.Data.DataColumn("IDCreateur", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIDCreateur);
                this.columnDebut = new global::System.Data.DataColumn("Debut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDebut);
                this.columnFin = new global::System.Data.DataColumn("Fin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFin);
                this.columnProfil = new global::System.Data.DataColumn("Profil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfil);
                this.columnLogin = new global::System.Data.DataColumn("Login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogin);
                this.columnMotPasse = new global::System.Data.DataColumn("MotPasse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotPasse);
                this.columnRefEmpreinte = new global::System.Data.DataColumn("RefEmpreinte", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRefEmpreinte);
                this.columnNomService = new global::System.Data.DataColumn("NomService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomService);
                this.columnMenusAutorises = new global::System.Data.DataColumn("MenusAutorises", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMenusAutorises);
                this.columnID.AllowDBNull = false;
                this.columnNom.MaxLength = 50;
                this.columnPrenom.MaxLength = 50;
                this.columnProfil.MaxLength = 50;
                this.columnLogin.MaxLength = 50;
                this.columnMotPasse.MaxLength = 50;
                this.columnRefEmpreinte.DefaultValue = ((string)(""));
                this.columnRefEmpreinte.MaxLength = 20;
                this.columnNomService.MaxLength = 50;
                this.columnMenusAutorises.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OperateursRow NewOperateursRow() {
                return ((OperateursRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new OperateursRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(OperateursRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.OperateursRowChanged != null)) {
                    this.OperateursRowChanged(this, new OperateursRowChangeEvent(((OperateursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.OperateursRowChanging != null)) {
                    this.OperateursRowChanging(this, new OperateursRowChangeEvent(((OperateursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.OperateursRowDeleted != null)) {
                    this.OperateursRowDeleted(this, new OperateursRowChangeEvent(((OperateursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.OperateursRowDeleting != null)) {
                    this.OperateursRowDeleting(this, new OperateursRowChangeEvent(((OperateursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveOperateursRow(OperateursRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "OperateursDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LecteursDataTable : global::System.Data.TypedTableBase<LecteursRow> {
            
            private global::System.Data.DataColumn columnNomLecteur;
            
            private global::System.Data.DataColumn columnCom;
            
            private global::System.Data.DataColumn columnAdresse;
            
            private global::System.Data.DataColumn columnVitesse;
            
            private global::System.Data.DataColumn columnNumSerie;
            
            private global::System.Data.DataColumn columnVersion;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnAPB;
            
            private global::System.Data.DataColumn columnCheckRights;
            
            private global::System.Data.DataColumn columnDateLastEvent;
            
            private global::System.Data.DataColumn columnAdresseIP;
            
            private global::System.Data.DataColumn columnPasserelle;
            
            private global::System.Data.DataColumn columnMasque;
            
            private global::System.Data.DataColumn columnEmpreintes;
            
            private global::System.Data.DataColumn columnBadge;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnMode;
            
            private global::System.Data.DataColumn columnDialog;
            
            private global::System.Data.DataColumn columnEtat;
            
            private global::System.Data.DataColumn columnDureeSireneSec;
            
            private global::System.Data.DataColumn columnNumHoraireSirene;
            
            private global::System.Data.DataColumn columnSireneSurRelais;
            
            private global::System.Data.DataColumn columnNbMaxUsers;
            
            private global::System.Data.DataColumn columnEntreeSortie;
            
            private global::System.Data.DataColumn columnPortSocket;
            
            private global::System.Data.DataColumn columnCheckBipTouches;
            
            private global::System.Data.DataColumn columnCheckBuzzer;
            
            private global::System.Data.DataColumn columnCheckCodeAcces;
            
            private global::System.Data.DataColumn columnCheckCodeAdmin;
            
            private global::System.Data.DataColumn columnCheckDateValidite;
            
            private global::System.Data.DataColumn columnCheckDiplayDateHour;
            
            private global::System.Data.DataColumn columnCheckDisplayName;
            
            private global::System.Data.DataColumn columnCheckHeureEte;
            
            private global::System.Data.DataColumn columnCheckHistoActiver;
            
            private global::System.Data.DataColumn columnCheckHistoAlarmes;
            
            private global::System.Data.DataColumn columnCheckHistoAutre;
            
            private global::System.Data.DataColumn columnCheckHistoEnroll;
            
            private global::System.Data.DataColumn columnCheckHistoIdentif;
            
            private global::System.Data.DataColumn columnCodeAcces;
            
            private global::System.Data.DataColumn columnCodeAdmin;
            
            private global::System.Data.DataColumn columnLangue;
            
            private global::System.Data.DataColumn columnModeAcces;
            
            private global::System.Data.DataColumn columnVeille;
            
            private global::System.Data.DataColumn columnCheckBuzEvtIdentOk;
            
            private global::System.Data.DataColumn columnCheckBuzEvtIdentKo;
            
            private global::System.Data.DataColumn columnCheckBuzEvtEnrol;
            
            private global::System.Data.DataColumn columnCheckBuzEvtFingPosKo;
            
            private global::System.Data.DataColumn columnCheckBuzEvtRdCscOk;
            
            private global::System.Data.DataColumn columnCheckBuzEvtRdCscKo;
            
            private global::System.Data.DataColumn columnCheckBuzEvtOther;
            
            private global::System.Data.DataColumn columnCheckHistoIdentifKo;
            
            private global::System.Data.DataColumn columnCheckDisplayCode;
            
            private global::System.Data.DataColumn columnTmoCode;
            
            private global::System.Data.DataColumn columnDelaiFinCourseSec;
            
            private global::System.Data.DataColumn columnCheckLogCsc;
            
            private global::System.Data.DataColumn columnCheckFinDeCourse;
            
            private global::System.Data.DataColumn columnExpAlarmeLec;
            
            private global::System.Data.DataColumn columnLecGtCa;
            
            private global::System.Data.DataColumn columnNumLastEvent;
            
            private global::System.Data.DataColumn columnIdLastEventSap;
            
            private global::System.Data.DataColumn columnMajDateLec;
            
            private global::System.Data.DataColumn columnIdLastEventApb;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LecteursDataTable() {
                this.TableName = "Lecteurs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LecteursDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LecteursDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomLecteurColumn {
                get {
                    return this.columnNomLecteur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ComColumn {
                get {
                    return this.columnCom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdresseColumn {
                get {
                    return this.columnAdresse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VitesseColumn {
                get {
                    return this.columnVitesse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumSerieColumn {
                get {
                    return this.columnNumSerie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionColumn {
                get {
                    return this.columnVersion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn APBColumn {
                get {
                    return this.columnAPB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckRightsColumn {
                get {
                    return this.columnCheckRights;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateLastEventColumn {
                get {
                    return this.columnDateLastEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdresseIPColumn {
                get {
                    return this.columnAdresseIP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PasserelleColumn {
                get {
                    return this.columnPasserelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MasqueColumn {
                get {
                    return this.columnMasque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EmpreintesColumn {
                get {
                    return this.columnEmpreintes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BadgeColumn {
                get {
                    return this.columnBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModeColumn {
                get {
                    return this.columnMode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DialogColumn {
                get {
                    return this.columnDialog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EtatColumn {
                get {
                    return this.columnEtat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DureeSireneSecColumn {
                get {
                    return this.columnDureeSireneSec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumHoraireSireneColumn {
                get {
                    return this.columnNumHoraireSirene;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SireneSurRelaisColumn {
                get {
                    return this.columnSireneSurRelais;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NbMaxUsersColumn {
                get {
                    return this.columnNbMaxUsers;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EntreeSortieColumn {
                get {
                    return this.columnEntreeSortie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PortSocketColumn {
                get {
                    return this.columnPortSocket;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBipTouchesColumn {
                get {
                    return this.columnCheckBipTouches;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzzerColumn {
                get {
                    return this.columnCheckBuzzer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckCodeAccesColumn {
                get {
                    return this.columnCheckCodeAcces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckCodeAdminColumn {
                get {
                    return this.columnCheckCodeAdmin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckDateValiditeColumn {
                get {
                    return this.columnCheckDateValidite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckDiplayDateHourColumn {
                get {
                    return this.columnCheckDiplayDateHour;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckDisplayNameColumn {
                get {
                    return this.columnCheckDisplayName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHeureEteColumn {
                get {
                    return this.columnCheckHeureEte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHistoActiverColumn {
                get {
                    return this.columnCheckHistoActiver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHistoAlarmesColumn {
                get {
                    return this.columnCheckHistoAlarmes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHistoAutreColumn {
                get {
                    return this.columnCheckHistoAutre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHistoEnrollColumn {
                get {
                    return this.columnCheckHistoEnroll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHistoIdentifColumn {
                get {
                    return this.columnCheckHistoIdentif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeAccesColumn {
                get {
                    return this.columnCodeAcces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeAdminColumn {
                get {
                    return this.columnCodeAdmin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LangueColumn {
                get {
                    return this.columnLangue;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModeAccesColumn {
                get {
                    return this.columnModeAcces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VeilleColumn {
                get {
                    return this.columnVeille;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtIdentOkColumn {
                get {
                    return this.columnCheckBuzEvtIdentOk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtIdentKoColumn {
                get {
                    return this.columnCheckBuzEvtIdentKo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtEnrolColumn {
                get {
                    return this.columnCheckBuzEvtEnrol;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtFingPosKoColumn {
                get {
                    return this.columnCheckBuzEvtFingPosKo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtRdCscOkColumn {
                get {
                    return this.columnCheckBuzEvtRdCscOk;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtRdCscKoColumn {
                get {
                    return this.columnCheckBuzEvtRdCscKo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBuzEvtOtherColumn {
                get {
                    return this.columnCheckBuzEvtOther;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckHistoIdentifKoColumn {
                get {
                    return this.columnCheckHistoIdentifKo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckDisplayCodeColumn {
                get {
                    return this.columnCheckDisplayCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TmoCodeColumn {
                get {
                    return this.columnTmoCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelaiFinCourseSecColumn {
                get {
                    return this.columnDelaiFinCourseSec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckLogCscColumn {
                get {
                    return this.columnCheckLogCsc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckFinDeCourseColumn {
                get {
                    return this.columnCheckFinDeCourse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExpAlarmeLecColumn {
                get {
                    return this.columnExpAlarmeLec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LecGtCaColumn {
                get {
                    return this.columnLecGtCa;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumLastEventColumn {
                get {
                    return this.columnNumLastEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdLastEventSapColumn {
                get {
                    return this.columnIdLastEventSap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MajDateLecColumn {
                get {
                    return this.columnMajDateLec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdLastEventApbColumn {
                get {
                    return this.columnIdLastEventApb;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LecteursRow this[int index] {
                get {
                    return ((LecteursRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LecteursRowChangeEventHandler LecteursRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LecteursRowChangeEventHandler LecteursRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LecteursRowChangeEventHandler LecteursRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LecteursRowChangeEventHandler LecteursRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLecteursRow(LecteursRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LecteursRow AddLecteursRow(
                        string NomLecteur, 
                        string Com, 
                        int Adresse, 
                        int Vitesse, 
                        string NumSerie, 
                        string Version, 
                        string Type, 
                        int APB, 
                        bool CheckRights, 
                        System.DateTime DateLastEvent, 
                        string AdresseIP, 
                        string Passerelle, 
                        string Masque, 
                        bool Empreintes, 
                        bool Badge, 
                        bool Code, 
                        int Mode, 
                        int Dialog, 
                        int Etat, 
                        int DureeSireneSec, 
                        int NumHoraireSirene, 
                        bool SireneSurRelais, 
                        int NbMaxUsers, 
                        int EntreeSortie, 
                        int PortSocket, 
                        bool CheckBipTouches, 
                        bool CheckBuzzer, 
                        bool CheckCodeAcces, 
                        bool CheckCodeAdmin, 
                        bool CheckDateValidite, 
                        bool CheckDiplayDateHour, 
                        bool CheckDisplayName, 
                        bool CheckHeureEte, 
                        bool CheckHistoActiver, 
                        bool CheckHistoAlarmes, 
                        bool CheckHistoAutre, 
                        bool CheckHistoEnroll, 
                        bool CheckHistoIdentif, 
                        string CodeAcces, 
                        string CodeAdmin, 
                        int Langue, 
                        int ModeAcces, 
                        int Veille, 
                        bool CheckBuzEvtIdentOk, 
                        bool CheckBuzEvtIdentKo, 
                        bool CheckBuzEvtEnrol, 
                        bool CheckBuzEvtFingPosKo, 
                        bool CheckBuzEvtRdCscOk, 
                        bool CheckBuzEvtRdCscKo, 
                        bool CheckBuzEvtOther, 
                        bool CheckHistoIdentifKo, 
                        bool CheckDisplayCode, 
                        int TmoCode, 
                        int DelaiFinCourseSec, 
                        bool CheckLogCsc, 
                        bool CheckFinDeCourse, 
                        int ExpAlarmeLec, 
                        int LecGtCa, 
                        int NumLastEvent, 
                        int IdLastEventSap, 
                        bool MajDateLec, 
                        int IdLastEventApb) {
                LecteursRow rowLecteursRow = ((LecteursRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NomLecteur,
                        Com,
                        Adresse,
                        Vitesse,
                        NumSerie,
                        Version,
                        Type,
                        APB,
                        CheckRights,
                        DateLastEvent,
                        AdresseIP,
                        Passerelle,
                        Masque,
                        Empreintes,
                        Badge,
                        Code,
                        Mode,
                        Dialog,
                        Etat,
                        DureeSireneSec,
                        NumHoraireSirene,
                        SireneSurRelais,
                        NbMaxUsers,
                        EntreeSortie,
                        PortSocket,
                        CheckBipTouches,
                        CheckBuzzer,
                        CheckCodeAcces,
                        CheckCodeAdmin,
                        CheckDateValidite,
                        CheckDiplayDateHour,
                        CheckDisplayName,
                        CheckHeureEte,
                        CheckHistoActiver,
                        CheckHistoAlarmes,
                        CheckHistoAutre,
                        CheckHistoEnroll,
                        CheckHistoIdentif,
                        CodeAcces,
                        CodeAdmin,
                        Langue,
                        ModeAcces,
                        Veille,
                        CheckBuzEvtIdentOk,
                        CheckBuzEvtIdentKo,
                        CheckBuzEvtEnrol,
                        CheckBuzEvtFingPosKo,
                        CheckBuzEvtRdCscOk,
                        CheckBuzEvtRdCscKo,
                        CheckBuzEvtOther,
                        CheckHistoIdentifKo,
                        CheckDisplayCode,
                        TmoCode,
                        DelaiFinCourseSec,
                        CheckLogCsc,
                        CheckFinDeCourse,
                        ExpAlarmeLec,
                        LecGtCa,
                        NumLastEvent,
                        IdLastEventSap,
                        MajDateLec,
                        IdLastEventApb};
                rowLecteursRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLecteursRow);
                return rowLecteursRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LecteursDataTable cln = ((LecteursDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LecteursDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNomLecteur = base.Columns["NomLecteur"];
                this.columnCom = base.Columns["Com"];
                this.columnAdresse = base.Columns["Adresse"];
                this.columnVitesse = base.Columns["Vitesse"];
                this.columnNumSerie = base.Columns["NumSerie"];
                this.columnVersion = base.Columns["Version"];
                this.columnType = base.Columns["Type"];
                this.columnAPB = base.Columns["APB"];
                this.columnCheckRights = base.Columns["CheckRights"];
                this.columnDateLastEvent = base.Columns["DateLastEvent"];
                this.columnAdresseIP = base.Columns["AdresseIP"];
                this.columnPasserelle = base.Columns["Passerelle"];
                this.columnMasque = base.Columns["Masque"];
                this.columnEmpreintes = base.Columns["Empreintes"];
                this.columnBadge = base.Columns["Badge"];
                this.columnCode = base.Columns["Code"];
                this.columnMode = base.Columns["Mode"];
                this.columnDialog = base.Columns["Dialog"];
                this.columnEtat = base.Columns["Etat"];
                this.columnDureeSireneSec = base.Columns["DureeSireneSec"];
                this.columnNumHoraireSirene = base.Columns["NumHoraireSirene"];
                this.columnSireneSurRelais = base.Columns["SireneSurRelais"];
                this.columnNbMaxUsers = base.Columns["NbMaxUsers"];
                this.columnEntreeSortie = base.Columns["EntreeSortie"];
                this.columnPortSocket = base.Columns["PortSocket"];
                this.columnCheckBipTouches = base.Columns["CheckBipTouches"];
                this.columnCheckBuzzer = base.Columns["CheckBuzzer"];
                this.columnCheckCodeAcces = base.Columns["CheckCodeAcces"];
                this.columnCheckCodeAdmin = base.Columns["CheckCodeAdmin"];
                this.columnCheckDateValidite = base.Columns["CheckDateValidite"];
                this.columnCheckDiplayDateHour = base.Columns["CheckDiplayDateHour"];
                this.columnCheckDisplayName = base.Columns["CheckDisplayName"];
                this.columnCheckHeureEte = base.Columns["CheckHeureEte"];
                this.columnCheckHistoActiver = base.Columns["CheckHistoActiver"];
                this.columnCheckHistoAlarmes = base.Columns["CheckHistoAlarmes"];
                this.columnCheckHistoAutre = base.Columns["CheckHistoAutre"];
                this.columnCheckHistoEnroll = base.Columns["CheckHistoEnroll"];
                this.columnCheckHistoIdentif = base.Columns["CheckHistoIdentif"];
                this.columnCodeAcces = base.Columns["CodeAcces"];
                this.columnCodeAdmin = base.Columns["CodeAdmin"];
                this.columnLangue = base.Columns["Langue"];
                this.columnModeAcces = base.Columns["ModeAcces"];
                this.columnVeille = base.Columns["Veille"];
                this.columnCheckBuzEvtIdentOk = base.Columns["CheckBuzEvtIdentOk"];
                this.columnCheckBuzEvtIdentKo = base.Columns["CheckBuzEvtIdentKo"];
                this.columnCheckBuzEvtEnrol = base.Columns["CheckBuzEvtEnrol"];
                this.columnCheckBuzEvtFingPosKo = base.Columns["CheckBuzEvtFingPosKo"];
                this.columnCheckBuzEvtRdCscOk = base.Columns["CheckBuzEvtRdCscOk"];
                this.columnCheckBuzEvtRdCscKo = base.Columns["CheckBuzEvtRdCscKo"];
                this.columnCheckBuzEvtOther = base.Columns["CheckBuzEvtOther"];
                this.columnCheckHistoIdentifKo = base.Columns["CheckHistoIdentifKo"];
                this.columnCheckDisplayCode = base.Columns["CheckDisplayCode"];
                this.columnTmoCode = base.Columns["TmoCode"];
                this.columnDelaiFinCourseSec = base.Columns["DelaiFinCourseSec"];
                this.columnCheckLogCsc = base.Columns["CheckLogCsc"];
                this.columnCheckFinDeCourse = base.Columns["CheckFinDeCourse"];
                this.columnExpAlarmeLec = base.Columns["ExpAlarmeLec"];
                this.columnLecGtCa = base.Columns["LecGtCa"];
                this.columnNumLastEvent = base.Columns["NumLastEvent"];
                this.columnIdLastEventSap = base.Columns["IdLastEventSap"];
                this.columnMajDateLec = base.Columns["MajDateLec"];
                this.columnIdLastEventApb = base.Columns["IdLastEventApb"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNomLecteur = new global::System.Data.DataColumn("NomLecteur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomLecteur);
                this.columnCom = new global::System.Data.DataColumn("Com", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCom);
                this.columnAdresse = new global::System.Data.DataColumn("Adresse", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse);
                this.columnVitesse = new global::System.Data.DataColumn("Vitesse", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVitesse);
                this.columnNumSerie = new global::System.Data.DataColumn("NumSerie", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumSerie);
                this.columnVersion = new global::System.Data.DataColumn("Version", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersion);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnAPB = new global::System.Data.DataColumn("APB", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAPB);
                this.columnCheckRights = new global::System.Data.DataColumn("CheckRights", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckRights);
                this.columnDateLastEvent = new global::System.Data.DataColumn("DateLastEvent", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateLastEvent);
                this.columnAdresseIP = new global::System.Data.DataColumn("AdresseIP", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresseIP);
                this.columnPasserelle = new global::System.Data.DataColumn("Passerelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPasserelle);
                this.columnMasque = new global::System.Data.DataColumn("Masque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasque);
                this.columnEmpreintes = new global::System.Data.DataColumn("Empreintes", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEmpreintes);
                this.columnBadge = new global::System.Data.DataColumn("Badge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBadge);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnMode = new global::System.Data.DataColumn("Mode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMode);
                this.columnDialog = new global::System.Data.DataColumn("Dialog", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDialog);
                this.columnEtat = new global::System.Data.DataColumn("Etat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEtat);
                this.columnDureeSireneSec = new global::System.Data.DataColumn("DureeSireneSec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDureeSireneSec);
                this.columnNumHoraireSirene = new global::System.Data.DataColumn("NumHoraireSirene", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumHoraireSirene);
                this.columnSireneSurRelais = new global::System.Data.DataColumn("SireneSurRelais", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSireneSurRelais);
                this.columnNbMaxUsers = new global::System.Data.DataColumn("NbMaxUsers", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNbMaxUsers);
                this.columnEntreeSortie = new global::System.Data.DataColumn("EntreeSortie", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntreeSortie);
                this.columnPortSocket = new global::System.Data.DataColumn("PortSocket", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPortSocket);
                this.columnCheckBipTouches = new global::System.Data.DataColumn("CheckBipTouches", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBipTouches);
                this.columnCheckBuzzer = new global::System.Data.DataColumn("CheckBuzzer", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzzer);
                this.columnCheckCodeAcces = new global::System.Data.DataColumn("CheckCodeAcces", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckCodeAcces);
                this.columnCheckCodeAdmin = new global::System.Data.DataColumn("CheckCodeAdmin", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckCodeAdmin);
                this.columnCheckDateValidite = new global::System.Data.DataColumn("CheckDateValidite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckDateValidite);
                this.columnCheckDiplayDateHour = new global::System.Data.DataColumn("CheckDiplayDateHour", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckDiplayDateHour);
                this.columnCheckDisplayName = new global::System.Data.DataColumn("CheckDisplayName", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckDisplayName);
                this.columnCheckHeureEte = new global::System.Data.DataColumn("CheckHeureEte", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHeureEte);
                this.columnCheckHistoActiver = new global::System.Data.DataColumn("CheckHistoActiver", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHistoActiver);
                this.columnCheckHistoAlarmes = new global::System.Data.DataColumn("CheckHistoAlarmes", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHistoAlarmes);
                this.columnCheckHistoAutre = new global::System.Data.DataColumn("CheckHistoAutre", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHistoAutre);
                this.columnCheckHistoEnroll = new global::System.Data.DataColumn("CheckHistoEnroll", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHistoEnroll);
                this.columnCheckHistoIdentif = new global::System.Data.DataColumn("CheckHistoIdentif", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHistoIdentif);
                this.columnCodeAcces = new global::System.Data.DataColumn("CodeAcces", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeAcces);
                this.columnCodeAdmin = new global::System.Data.DataColumn("CodeAdmin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeAdmin);
                this.columnLangue = new global::System.Data.DataColumn("Langue", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLangue);
                this.columnModeAcces = new global::System.Data.DataColumn("ModeAcces", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModeAcces);
                this.columnVeille = new global::System.Data.DataColumn("Veille", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVeille);
                this.columnCheckBuzEvtIdentOk = new global::System.Data.DataColumn("CheckBuzEvtIdentOk", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtIdentOk);
                this.columnCheckBuzEvtIdentKo = new global::System.Data.DataColumn("CheckBuzEvtIdentKo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtIdentKo);
                this.columnCheckBuzEvtEnrol = new global::System.Data.DataColumn("CheckBuzEvtEnrol", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtEnrol);
                this.columnCheckBuzEvtFingPosKo = new global::System.Data.DataColumn("CheckBuzEvtFingPosKo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtFingPosKo);
                this.columnCheckBuzEvtRdCscOk = new global::System.Data.DataColumn("CheckBuzEvtRdCscOk", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtRdCscOk);
                this.columnCheckBuzEvtRdCscKo = new global::System.Data.DataColumn("CheckBuzEvtRdCscKo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtRdCscKo);
                this.columnCheckBuzEvtOther = new global::System.Data.DataColumn("CheckBuzEvtOther", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBuzEvtOther);
                this.columnCheckHistoIdentifKo = new global::System.Data.DataColumn("CheckHistoIdentifKo", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckHistoIdentifKo);
                this.columnCheckDisplayCode = new global::System.Data.DataColumn("CheckDisplayCode", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckDisplayCode);
                this.columnTmoCode = new global::System.Data.DataColumn("TmoCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTmoCode);
                this.columnDelaiFinCourseSec = new global::System.Data.DataColumn("DelaiFinCourseSec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelaiFinCourseSec);
                this.columnCheckLogCsc = new global::System.Data.DataColumn("CheckLogCsc", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckLogCsc);
                this.columnCheckFinDeCourse = new global::System.Data.DataColumn("CheckFinDeCourse", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckFinDeCourse);
                this.columnExpAlarmeLec = new global::System.Data.DataColumn("ExpAlarmeLec", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExpAlarmeLec);
                this.columnLecGtCa = new global::System.Data.DataColumn("LecGtCa", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLecGtCa);
                this.columnNumLastEvent = new global::System.Data.DataColumn("NumLastEvent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLastEvent);
                this.columnIdLastEventSap = new global::System.Data.DataColumn("IdLastEventSap", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdLastEventSap);
                this.columnMajDateLec = new global::System.Data.DataColumn("MajDateLec", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMajDateLec);
                this.columnIdLastEventApb = new global::System.Data.DataColumn("IdLastEventApb", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdLastEventApb);
                this.columnNomLecteur.MaxLength = 50;
                this.columnCom.MaxLength = 50;
                this.columnAdresse.AllowDBNull = false;
                this.columnNumSerie.MaxLength = 50;
                this.columnVersion.MaxLength = 50;
                this.columnType.MaxLength = 50;
                this.columnAdresseIP.MaxLength = 50;
                this.columnPasserelle.MaxLength = 50;
                this.columnMasque.MaxLength = 50;
                this.columnCodeAcces.MaxLength = 20;
                this.columnCodeAdmin.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LecteursRow NewLecteursRow() {
                return ((LecteursRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LecteursRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LecteursRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LecteursRowChanged != null)) {
                    this.LecteursRowChanged(this, new LecteursRowChangeEvent(((LecteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LecteursRowChanging != null)) {
                    this.LecteursRowChanging(this, new LecteursRowChangeEvent(((LecteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LecteursRowDeleted != null)) {
                    this.LecteursRowDeleted(this, new LecteursRowChangeEvent(((LecteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LecteursRowDeleting != null)) {
                    this.LecteursRowDeleting(this, new LecteursRowChangeEvent(((LecteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLecteursRow(LecteursRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LecteursDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class EventsDataTable : global::System.Data.TypedTableBase<EventsRow> {
            
            private global::System.Data.DataColumn columnNumLecteur;
            
            private global::System.Data.DataColumn columnInstant;
            
            private global::System.Data.DataColumn columnNumEvent;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnSous_Type;
            
            private global::System.Data.DataColumn columnReference;
            
            private global::System.Data.DataColumn columnTraite;
            
            private global::System.Data.DataColumn columnEntreeSortie;
            
            private global::System.Data.DataColumn columnValide;
            
            private global::System.Data.DataColumn columnCode;
            
            private global::System.Data.DataColumn columnNumAgrement;
            
            private global::System.Data.DataColumn columnCodeRefus;
            
            private global::System.Data.DataColumn columnMatriculeAdmin;
            
            private global::System.Data.DataColumn columnNumTaxi;
            
            private global::System.Data.DataColumn columnTypeTaxi;
            
            private global::System.Data.DataColumn columnIdEvent;
            
            private global::System.Data.DataColumn columnNomAgent;
            
            private global::System.Data.DataColumn columnPrenomAgent;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnLibelleTypeTaxi;
            
            private global::System.Data.DataColumn columnLibelleCode;
            
            private global::System.Data.DataColumn columnTypeCode;
            
            private global::System.Data.DataColumn columnNomLecteur;
            
            private global::System.Data.DataColumn columnNumBadge;
            
            private global::System.Data.DataColumn columnAdresse;
            
            private global::System.Data.DataColumn columnPlaque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsDataTable() {
                this.TableName = "Events";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EventsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected EventsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumLecteurColumn {
                get {
                    return this.columnNumLecteur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstantColumn {
                get {
                    return this.columnInstant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumEventColumn {
                get {
                    return this.columnNumEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Sous_TypeColumn {
                get {
                    return this.columnSous_Type;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReferenceColumn {
                get {
                    return this.columnReference;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TraiteColumn {
                get {
                    return this.columnTraite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EntreeSortieColumn {
                get {
                    return this.columnEntreeSortie;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValideColumn {
                get {
                    return this.columnValide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeColumn {
                get {
                    return this.columnCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumAgrementColumn {
                get {
                    return this.columnNumAgrement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeRefusColumn {
                get {
                    return this.columnCodeRefus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeAdminColumn {
                get {
                    return this.columnMatriculeAdmin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumTaxiColumn {
                get {
                    return this.columnNumTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeTaxiColumn {
                get {
                    return this.columnTypeTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdEventColumn {
                get {
                    return this.columnIdEvent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomAgentColumn {
                get {
                    return this.columnNomAgent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomAgentColumn {
                get {
                    return this.columnPrenomAgent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleTypeTaxiColumn {
                get {
                    return this.columnLibelleTypeTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleCodeColumn {
                get {
                    return this.columnLibelleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeCodeColumn {
                get {
                    return this.columnTypeCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomLecteurColumn {
                get {
                    return this.columnNomLecteur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumBadgeColumn {
                get {
                    return this.columnNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdresseColumn {
                get {
                    return this.columnAdresse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaqueColumn {
                get {
                    return this.columnPlaque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow this[int index] {
                get {
                    return ((EventsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event EventsRowChangeEventHandler EventsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddEventsRow(EventsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow AddEventsRow(
                        int NumLecteur, 
                        System.DateTime Instant, 
                        int NumEvent, 
                        int Type, 
                        int Sous_Type, 
                        string Reference, 
                        bool Traite, 
                        int EntreeSortie, 
                        bool Valide, 
                        string Code, 
                        string NumAgrement, 
                        string CodeRefus, 
                        string MatriculeAdmin, 
                        string NumTaxi, 
                        int TypeTaxi, 
                        string NomAgent, 
                        string PrenomAgent, 
                        string Nom, 
                        string Prenom, 
                        string LibelleTypeTaxi, 
                        string LibelleCode, 
                        int TypeCode, 
                        string NomLecteur, 
                        string NumBadge, 
                        int Adresse, 
                        string Plaque) {
                EventsRow rowEventsRow = ((EventsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumLecteur,
                        Instant,
                        NumEvent,
                        Type,
                        Sous_Type,
                        Reference,
                        Traite,
                        EntreeSortie,
                        Valide,
                        Code,
                        NumAgrement,
                        CodeRefus,
                        MatriculeAdmin,
                        NumTaxi,
                        TypeTaxi,
                        null,
                        NomAgent,
                        PrenomAgent,
                        Nom,
                        Prenom,
                        LibelleTypeTaxi,
                        LibelleCode,
                        TypeCode,
                        NomLecteur,
                        NumBadge,
                        Adresse,
                        Plaque};
                rowEventsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowEventsRow);
                return rowEventsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow FindByIdEvent(int IdEvent) {
                return ((EventsRow)(this.Rows.Find(new object[] {
                            IdEvent})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                EventsDataTable cln = ((EventsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new EventsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumLecteur = base.Columns["NumLecteur"];
                this.columnInstant = base.Columns["Instant"];
                this.columnNumEvent = base.Columns["NumEvent"];
                this.columnType = base.Columns["Type"];
                this.columnSous_Type = base.Columns["Sous_Type"];
                this.columnReference = base.Columns["Reference"];
                this.columnTraite = base.Columns["Traite"];
                this.columnEntreeSortie = base.Columns["EntreeSortie"];
                this.columnValide = base.Columns["Valide"];
                this.columnCode = base.Columns["Code"];
                this.columnNumAgrement = base.Columns["NumAgrement"];
                this.columnCodeRefus = base.Columns["CodeRefus"];
                this.columnMatriculeAdmin = base.Columns["MatriculeAdmin"];
                this.columnNumTaxi = base.Columns["NumTaxi"];
                this.columnTypeTaxi = base.Columns["TypeTaxi"];
                this.columnIdEvent = base.Columns["IdEvent"];
                this.columnNomAgent = base.Columns["NomAgent"];
                this.columnPrenomAgent = base.Columns["PrenomAgent"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnLibelleTypeTaxi = base.Columns["LibelleTypeTaxi"];
                this.columnLibelleCode = base.Columns["LibelleCode"];
                this.columnTypeCode = base.Columns["TypeCode"];
                this.columnNomLecteur = base.Columns["NomLecteur"];
                this.columnNumBadge = base.Columns["NumBadge"];
                this.columnAdresse = base.Columns["Adresse"];
                this.columnPlaque = base.Columns["Plaque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumLecteur = new global::System.Data.DataColumn("NumLecteur", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumLecteur);
                this.columnInstant = new global::System.Data.DataColumn("Instant", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstant);
                this.columnNumEvent = new global::System.Data.DataColumn("NumEvent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumEvent);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnSous_Type = new global::System.Data.DataColumn("Sous_Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSous_Type);
                this.columnReference = new global::System.Data.DataColumn("Reference", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReference);
                this.columnTraite = new global::System.Data.DataColumn("Traite", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTraite);
                this.columnEntreeSortie = new global::System.Data.DataColumn("EntreeSortie", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEntreeSortie);
                this.columnValide = new global::System.Data.DataColumn("Valide", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValide);
                this.columnCode = new global::System.Data.DataColumn("Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCode);
                this.columnNumAgrement = new global::System.Data.DataColumn("NumAgrement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumAgrement);
                this.columnCodeRefus = new global::System.Data.DataColumn("CodeRefus", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeRefus);
                this.columnMatriculeAdmin = new global::System.Data.DataColumn("MatriculeAdmin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatriculeAdmin);
                this.columnNumTaxi = new global::System.Data.DataColumn("NumTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumTaxi);
                this.columnTypeTaxi = new global::System.Data.DataColumn("TypeTaxi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeTaxi);
                this.columnIdEvent = new global::System.Data.DataColumn("IdEvent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdEvent);
                this.columnNomAgent = new global::System.Data.DataColumn("NomAgent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomAgent);
                this.columnPrenomAgent = new global::System.Data.DataColumn("PrenomAgent", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenomAgent);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnLibelleTypeTaxi = new global::System.Data.DataColumn("LibelleTypeTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleTypeTaxi);
                this.columnLibelleCode = new global::System.Data.DataColumn("LibelleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleCode);
                this.columnTypeCode = new global::System.Data.DataColumn("TypeCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeCode);
                this.columnNomLecteur = new global::System.Data.DataColumn("NomLecteur", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomLecteur);
                this.columnNumBadge = new global::System.Data.DataColumn("NumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumBadge);
                this.columnAdresse = new global::System.Data.DataColumn("Adresse", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse);
                this.columnPlaque = new global::System.Data.DataColumn("Plaque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaque);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("EventsKey1", new global::System.Data.DataColumn[] {
                                this.columnIdEvent}, true));
                this.columnReference.MaxLength = 20;
                this.columnCode.MaxLength = 10;
                this.columnNumAgrement.MaxLength = 10;
                this.columnCodeRefus.MaxLength = 10;
                this.columnMatriculeAdmin.MaxLength = 16;
                this.columnNumTaxi.MaxLength = 10;
                this.columnIdEvent.AutoIncrement = true;
                this.columnIdEvent.AutoIncrementSeed = -1;
                this.columnIdEvent.AutoIncrementStep = -1;
                this.columnIdEvent.AllowDBNull = false;
                this.columnIdEvent.Unique = true;
                this.columnNomAgent.MaxLength = 50;
                this.columnPrenomAgent.MaxLength = 50;
                this.columnNom.MaxLength = 30;
                this.columnPrenom.MaxLength = 30;
                this.columnLibelleTypeTaxi.MaxLength = 30;
                this.columnLibelleCode.MaxLength = 50;
                this.columnNomLecteur.MaxLength = 50;
                this.columnNumBadge.MaxLength = 20;
                this.columnAdresse.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow NewEventsRow() {
                return ((EventsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new EventsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(EventsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.EventsRowChanged != null)) {
                    this.EventsRowChanged(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.EventsRowChanging != null)) {
                    this.EventsRowChanging(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.EventsRowDeleted != null)) {
                    this.EventsRowDeleted(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.EventsRowDeleting != null)) {
                    this.EventsRowDeleting(this, new EventsRowChangeEvent(((EventsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveEventsRow(EventsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "EventsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TypeTaxiDataTable : global::System.Data.TypedTableBase<TypeTaxiRow> {
            
            private global::System.Data.DataColumn columnNum;
            
            private global::System.Data.DataColumn columnLibelle;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TypeTaxiDataTable() {
                this.TableName = "TypeTaxi";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TypeTaxiDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected TypeTaxiDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumColumn {
                get {
                    return this.columnNum;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleColumn {
                get {
                    return this.columnLibelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TypeTaxiRow this[int index] {
                get {
                    return ((TypeTaxiRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TypeTaxiRowChangeEventHandler TypeTaxiRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TypeTaxiRowChangeEventHandler TypeTaxiRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TypeTaxiRowChangeEventHandler TypeTaxiRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event TypeTaxiRowChangeEventHandler TypeTaxiRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddTypeTaxiRow(TypeTaxiRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TypeTaxiRow AddTypeTaxiRow(int Num, string Libelle) {
                TypeTaxiRow rowTypeTaxiRow = ((TypeTaxiRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Num,
                        Libelle};
                rowTypeTaxiRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTypeTaxiRow);
                return rowTypeTaxiRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                TypeTaxiDataTable cln = ((TypeTaxiDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TypeTaxiDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNum = base.Columns["Num"];
                this.columnLibelle = base.Columns["Libelle"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNum = new global::System.Data.DataColumn("Num", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum);
                this.columnLibelle = new global::System.Data.DataColumn("Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelle);
                this.columnLibelle.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TypeTaxiRow NewTypeTaxiRow() {
                return ((TypeTaxiRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TypeTaxiRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(TypeTaxiRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TypeTaxiRowChanged != null)) {
                    this.TypeTaxiRowChanged(this, new TypeTaxiRowChangeEvent(((TypeTaxiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TypeTaxiRowChanging != null)) {
                    this.TypeTaxiRowChanging(this, new TypeTaxiRowChangeEvent(((TypeTaxiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TypeTaxiRowDeleted != null)) {
                    this.TypeTaxiRowDeleted(this, new TypeTaxiRowChangeEvent(((TypeTaxiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TypeTaxiRowDeleting != null)) {
                    this.TypeTaxiRowDeleting(this, new TypeTaxiRowChangeEvent(((TypeTaxiRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveTypeTaxiRow(TypeTaxiRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TypeTaxiDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ControleUserDataTable : global::System.Data.TypedTableBase<ControleUserRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnIdOpCreation;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnIdOpModif;
            
            private global::System.Data.DataColumn columnDateFin;
            
            private global::System.Data.DataColumn columnIdLabelControle;
            
            private global::System.Data.DataColumn columnAbrev;
            
            private global::System.Data.DataColumn columnIdUser;
            
            private global::System.Data.DataColumn columnMatricule;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnNumBadge;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControleUserDataTable() {
                this.TableName = "ControleUser";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ControleUserDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ControleUserDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpCreationColumn {
                get {
                    return this.columnIdOpCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpModifColumn {
                get {
                    return this.columnIdOpModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinColumn {
                get {
                    return this.columnDateFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdLabelControleColumn {
                get {
                    return this.columnIdLabelControle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbrevColumn {
                get {
                    return this.columnAbrev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUserColumn {
                get {
                    return this.columnIdUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeColumn {
                get {
                    return this.columnMatricule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumBadgeColumn {
                get {
                    return this.columnNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControleUserRow this[int index] {
                get {
                    return ((ControleUserRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControleUserRowChangeEventHandler ControleUserRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControleUserRowChangeEventHandler ControleUserRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControleUserRowChangeEventHandler ControleUserRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControleUserRowChangeEventHandler ControleUserRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddControleUserRow(ControleUserRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControleUserRow AddControleUserRow(System.DateTime DateCreation, int IdOpCreation, System.DateTime DateModif, int IdOpModif, System.DateTime DateFin, int IdLabelControle, string Abrev, int IdUser, string Matricule, string Nom, string Prenom, string NumBadge) {
                ControleUserRow rowControleUserRow = ((ControleUserRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DateCreation,
                        IdOpCreation,
                        DateModif,
                        IdOpModif,
                        DateFin,
                        IdLabelControle,
                        Abrev,
                        IdUser,
                        Matricule,
                        Nom,
                        Prenom,
                        NumBadge};
                rowControleUserRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowControleUserRow);
                return rowControleUserRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ControleUserDataTable cln = ((ControleUserDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ControleUserDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnIdOpCreation = base.Columns["IdOpCreation"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnIdOpModif = base.Columns["IdOpModif"];
                this.columnDateFin = base.Columns["DateFin"];
                this.columnIdLabelControle = base.Columns["IdLabelControle"];
                this.columnAbrev = base.Columns["Abrev"];
                this.columnIdUser = base.Columns["IdUser"];
                this.columnMatricule = base.Columns["Matricule"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnNumBadge = base.Columns["NumBadge"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnIdOpCreation = new global::System.Data.DataColumn("IdOpCreation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpCreation);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnIdOpModif = new global::System.Data.DataColumn("IdOpModif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpModif);
                this.columnDateFin = new global::System.Data.DataColumn("DateFin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFin);
                this.columnIdLabelControle = new global::System.Data.DataColumn("IdLabelControle", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdLabelControle);
                this.columnAbrev = new global::System.Data.DataColumn("Abrev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbrev);
                this.columnIdUser = new global::System.Data.DataColumn("IdUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser);
                this.columnMatricule = new global::System.Data.DataColumn("Matricule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatricule);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnNumBadge = new global::System.Data.DataColumn("NumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumBadge);
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnAbrev.MaxLength = 20;
                this.columnMatricule.MaxLength = 20;
                this.columnNom.MaxLength = 30;
                this.columnPrenom.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControleUserRow NewControleUserRow() {
                return ((ControleUserRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ControleUserRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ControleUserRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ControleUserRowChanged != null)) {
                    this.ControleUserRowChanged(this, new ControleUserRowChangeEvent(((ControleUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ControleUserRowChanging != null)) {
                    this.ControleUserRowChanging(this, new ControleUserRowChangeEvent(((ControleUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ControleUserRowDeleted != null)) {
                    this.ControleUserRowDeleted(this, new ControleUserRowChangeEvent(((ControleUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ControleUserRowDeleting != null)) {
                    this.ControleUserRowDeleting(this, new ControleUserRowChangeEvent(((ControleUserRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveControleUserRow(ControleUserRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ControleUserDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LabelsControlesDataTable : global::System.Data.TypedTableBase<LabelsControlesRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnAbrev;
            
            private global::System.Data.DataColumn columnLibelle;
            
            private global::System.Data.DataColumn columnType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LabelsControlesDataTable() {
                this.TableName = "LabelsControles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LabelsControlesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LabelsControlesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbrevColumn {
                get {
                    return this.columnAbrev;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleColumn {
                get {
                    return this.columnLibelle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LabelsControlesRow this[int index] {
                get {
                    return ((LabelsControlesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LabelsControlesRowChangeEventHandler LabelsControlesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LabelsControlesRowChangeEventHandler LabelsControlesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LabelsControlesRowChangeEventHandler LabelsControlesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LabelsControlesRowChangeEventHandler LabelsControlesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLabelsControlesRow(LabelsControlesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LabelsControlesRow AddLabelsControlesRow(string Abrev, string Libelle, int Type) {
                LabelsControlesRow rowLabelsControlesRow = ((LabelsControlesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Abrev,
                        Libelle,
                        Type};
                rowLabelsControlesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLabelsControlesRow);
                return rowLabelsControlesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LabelsControlesDataTable cln = ((LabelsControlesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LabelsControlesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnAbrev = base.Columns["Abrev"];
                this.columnLibelle = base.Columns["Libelle"];
                this.columnType = base.Columns["Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnAbrev = new global::System.Data.DataColumn("Abrev", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbrev);
                this.columnLibelle = new global::System.Data.DataColumn("Libelle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelle);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnAbrev.MaxLength = 20;
                this.columnLibelle.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LabelsControlesRow NewLabelsControlesRow() {
                return ((LabelsControlesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LabelsControlesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LabelsControlesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LabelsControlesRowChanged != null)) {
                    this.LabelsControlesRowChanged(this, new LabelsControlesRowChangeEvent(((LabelsControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LabelsControlesRowChanging != null)) {
                    this.LabelsControlesRowChanging(this, new LabelsControlesRowChangeEvent(((LabelsControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LabelsControlesRowDeleted != null)) {
                    this.LabelsControlesRowDeleted(this, new LabelsControlesRowChangeEvent(((LabelsControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LabelsControlesRowDeleting != null)) {
                    this.LabelsControlesRowDeleting(this, new LabelsControlesRowChangeEvent(((LabelsControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLabelsControlesRow(LabelsControlesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LabelsControlesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ControlesDataTable : global::System.Data.TypedTableBase<ControlesRow> {
            
            private global::System.Data.DataColumn columnDateFin;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnIdOpCreation;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnIdOpModif;
            
            private global::System.Data.DataColumn columnIdVehicule;
            
            private global::System.Data.DataColumn columnTypeTaxi;
            
            private global::System.Data.DataColumn columnNumTaxi;
            
            private global::System.Data.DataColumn columnIdLabelControle;
            
            private global::System.Data.DataColumn columnLibelleControle;
            
            private global::System.Data.DataColumn columnPlaque;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControlesDataTable() {
                this.TableName = "Controles";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ControlesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected ControlesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinColumn {
                get {
                    return this.columnDateFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpCreationColumn {
                get {
                    return this.columnIdOpCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpModifColumn {
                get {
                    return this.columnIdOpModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdVehiculeColumn {
                get {
                    return this.columnIdVehicule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeTaxiColumn {
                get {
                    return this.columnTypeTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumTaxiColumn {
                get {
                    return this.columnNumTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdLabelControleColumn {
                get {
                    return this.columnIdLabelControle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleControleColumn {
                get {
                    return this.columnLibelleControle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaqueColumn {
                get {
                    return this.columnPlaque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControlesRow this[int index] {
                get {
                    return ((ControlesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControlesRowChangeEventHandler ControlesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControlesRowChangeEventHandler ControlesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControlesRowChangeEventHandler ControlesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event ControlesRowChangeEventHandler ControlesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddControlesRow(ControlesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControlesRow AddControlesRow(System.DateTime DateFin, System.DateTime DateModif, int IdOpCreation, System.DateTime DateCreation, int IdOpModif, int IdVehicule, string TypeTaxi, string NumTaxi, int IdLabelControle, string LibelleControle, string Plaque) {
                ControlesRow rowControlesRow = ((ControlesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DateFin,
                        DateModif,
                        IdOpCreation,
                        DateCreation,
                        null,
                        IdOpModif,
                        IdVehicule,
                        TypeTaxi,
                        NumTaxi,
                        IdLabelControle,
                        LibelleControle,
                        Plaque};
                rowControlesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowControlesRow);
                return rowControlesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ControlesDataTable cln = ((ControlesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ControlesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDateFin = base.Columns["DateFin"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnIdOpCreation = base.Columns["IdOpCreation"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnId = base.Columns["Id"];
                this.columnIdOpModif = base.Columns["IdOpModif"];
                this.columnIdVehicule = base.Columns["IdVehicule"];
                this.columnTypeTaxi = base.Columns["TypeTaxi"];
                this.columnNumTaxi = base.Columns["NumTaxi"];
                this.columnIdLabelControle = base.Columns["IdLabelControle"];
                this.columnLibelleControle = base.Columns["LibelleControle"];
                this.columnPlaque = base.Columns["Plaque"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDateFin = new global::System.Data.DataColumn("DateFin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFin);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnIdOpCreation = new global::System.Data.DataColumn("IdOpCreation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpCreation);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnIdOpModif = new global::System.Data.DataColumn("IdOpModif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpModif);
                this.columnIdVehicule = new global::System.Data.DataColumn("IdVehicule", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdVehicule);
                this.columnTypeTaxi = new global::System.Data.DataColumn("TypeTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeTaxi);
                this.columnNumTaxi = new global::System.Data.DataColumn("NumTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumTaxi);
                this.columnIdLabelControle = new global::System.Data.DataColumn("IdLabelControle", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdLabelControle);
                this.columnLibelleControle = new global::System.Data.DataColumn("LibelleControle", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleControle);
                this.columnPlaque = new global::System.Data.DataColumn("Plaque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaque);
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnTypeTaxi.MaxLength = 30;
                this.columnNumTaxi.MaxLength = 30;
                this.columnLibelleControle.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControlesRow NewControlesRow() {
                return ((ControlesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ControlesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ControlesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ControlesRowChanged != null)) {
                    this.ControlesRowChanged(this, new ControlesRowChangeEvent(((ControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ControlesRowChanging != null)) {
                    this.ControlesRowChanging(this, new ControlesRowChangeEvent(((ControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ControlesRowDeleted != null)) {
                    this.ControlesRowDeleted(this, new ControlesRowChangeEvent(((ControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ControlesRowDeleting != null)) {
                    this.ControlesRowDeleting(this, new ControlesRowChangeEvent(((ControlesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveControlesRow(ControlesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ControlesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VehiculesDataTable : global::System.Data.TypedTableBase<VehiculesRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnIdOpCreation;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnIdOpModif;
            
            private global::System.Data.DataColumn columnImmat;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnCin;
            
            private global::System.Data.DataColumn columnDateMec;
            
            private global::System.Data.DataColumn columnDateImmat;
            
            private global::System.Data.DataColumn columnMarque;
            
            private global::System.Data.DataColumn columnModele;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VehiculesDataTable() {
                this.TableName = "Vehicules";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VehiculesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VehiculesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpCreationColumn {
                get {
                    return this.columnIdOpCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpModifColumn {
                get {
                    return this.columnIdOpModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImmatColumn {
                get {
                    return this.columnImmat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CinColumn {
                get {
                    return this.columnCin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateMecColumn {
                get {
                    return this.columnDateMec;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateImmatColumn {
                get {
                    return this.columnDateImmat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarqueColumn {
                get {
                    return this.columnMarque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModeleColumn {
                get {
                    return this.columnModele;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VehiculesRow this[int index] {
                get {
                    return ((VehiculesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VehiculesRowChangeEventHandler VehiculesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VehiculesRowChangeEventHandler VehiculesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VehiculesRowChangeEventHandler VehiculesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VehiculesRowChangeEventHandler VehiculesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVehiculesRow(VehiculesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VehiculesRow AddVehiculesRow(System.DateTime DateCreation, int IdOpCreation, System.DateTime DateModif, int IdOpModif, string Immat, string Nom, string Prenom, string Cin, System.DateTime DateMec, System.DateTime DateImmat, string Marque, string Modele, uint Total) {
                VehiculesRow rowVehiculesRow = ((VehiculesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DateCreation,
                        IdOpCreation,
                        DateModif,
                        IdOpModif,
                        Immat,
                        Nom,
                        Prenom,
                        Cin,
                        DateMec,
                        DateImmat,
                        Marque,
                        Modele,
                        Total};
                rowVehiculesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVehiculesRow);
                return rowVehiculesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VehiculesDataTable cln = ((VehiculesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VehiculesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnIdOpCreation = base.Columns["IdOpCreation"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnIdOpModif = base.Columns["IdOpModif"];
                this.columnImmat = base.Columns["Immat"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnCin = base.Columns["Cin"];
                this.columnDateMec = base.Columns["DateMec"];
                this.columnDateImmat = base.Columns["DateImmat"];
                this.columnMarque = base.Columns["Marque"];
                this.columnModele = base.Columns["Modele"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnIdOpCreation = new global::System.Data.DataColumn("IdOpCreation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpCreation);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnIdOpModif = new global::System.Data.DataColumn("IdOpModif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpModif);
                this.columnImmat = new global::System.Data.DataColumn("Immat", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImmat);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnCin = new global::System.Data.DataColumn("Cin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCin);
                this.columnDateMec = new global::System.Data.DataColumn("DateMec", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateMec);
                this.columnDateImmat = new global::System.Data.DataColumn("DateImmat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateImmat);
                this.columnMarque = new global::System.Data.DataColumn("Marque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarque);
                this.columnModele = new global::System.Data.DataColumn("Modele", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModele);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(uint), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("VehiculesKey1", new global::System.Data.DataColumn[] {
                                this.columnId}, false));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnImmat.MaxLength = 20;
                this.columnNom.MaxLength = 30;
                this.columnPrenom.MaxLength = 30;
                this.columnCin.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VehiculesRow NewVehiculesRow() {
                return ((VehiculesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VehiculesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VehiculesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VehiculesRowChanged != null)) {
                    this.VehiculesRowChanged(this, new VehiculesRowChangeEvent(((VehiculesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VehiculesRowChanging != null)) {
                    this.VehiculesRowChanging(this, new VehiculesRowChangeEvent(((VehiculesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VehiculesRowDeleted != null)) {
                    this.VehiculesRowDeleted(this, new VehiculesRowChangeEvent(((VehiculesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VehiculesRowDeleting != null)) {
                    this.VehiculesRowDeleting(this, new VehiculesRowChangeEvent(((VehiculesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVehiculesRow(VehiculesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VehiculesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AgrementDataTable : global::System.Data.TypedTableBase<AgrementRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnIdOpCreation;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnIdOpModif;
            
            private global::System.Data.DataColumn columnDateDebut;
            
            private global::System.Data.DataColumn columnDateFin;
            
            private global::System.Data.DataColumn columnNumAgrement;
            
            private global::System.Data.DataColumn columnValide;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnPlaque;
            
            private global::System.Data.DataColumn columnPointAttache;
            
            private global::System.Data.DataColumn columnNumTaxi;
            
            private global::System.Data.DataColumn columnIdVehicule;
            
            private global::System.Data.DataColumn columnNom_Prem;
            
            private global::System.Data.DataColumn columnPrenom_Prem;
            
            private global::System.Data.DataColumn columnNom_Dern;
            
            private global::System.Data.DataColumn columnPrenom_Dern;
            
            private global::System.Data.DataColumn columnCommune;
            
            private global::System.Data.DataColumn columnTypeTaxi;
            
            private global::System.Data.DataColumn columnCin;
            
            private global::System.Data.DataColumn columnTelephone;
            
            private global::System.Data.DataColumn columnAdresse;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementDataTable() {
                this.TableName = "Agrement";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AgrementDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AgrementDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpCreationColumn {
                get {
                    return this.columnIdOpCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpModifColumn {
                get {
                    return this.columnIdOpModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateDebutColumn {
                get {
                    return this.columnDateDebut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinColumn {
                get {
                    return this.columnDateFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumAgrementColumn {
                get {
                    return this.columnNumAgrement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValideColumn {
                get {
                    return this.columnValide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PlaqueColumn {
                get {
                    return this.columnPlaque;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PointAttacheColumn {
                get {
                    return this.columnPointAttache;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumTaxiColumn {
                get {
                    return this.columnNumTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdVehiculeColumn {
                get {
                    return this.columnIdVehicule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nom_PremColumn {
                get {
                    return this.columnNom_Prem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prenom_PremColumn {
                get {
                    return this.columnPrenom_Prem;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Nom_DernColumn {
                get {
                    return this.columnNom_Dern;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Prenom_DernColumn {
                get {
                    return this.columnPrenom_Dern;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CommuneColumn {
                get {
                    return this.columnCommune;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeTaxiColumn {
                get {
                    return this.columnTypeTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CinColumn {
                get {
                    return this.columnCin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdresseColumn {
                get {
                    return this.columnAdresse;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementRow this[int index] {
                get {
                    return ((AgrementRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AgrementRowChangeEventHandler AgrementRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AgrementRowChangeEventHandler AgrementRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AgrementRowChangeEventHandler AgrementRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AgrementRowChangeEventHandler AgrementRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAgrementRow(AgrementRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementRow AddAgrementRow(
                        int Id, 
                        System.DateTime DateCreation, 
                        int IdOpCreation, 
                        System.DateTime DateModif, 
                        int IdOpModif, 
                        System.DateTime DateDebut, 
                        System.DateTime DateFin, 
                        string NumAgrement, 
                        bool Valide, 
                        string Nom, 
                        string Prenom, 
                        string Plaque, 
                        string PointAttache, 
                        string NumTaxi, 
                        int IdVehicule, 
                        string Nom_Prem, 
                        string Prenom_Prem, 
                        string Nom_Dern, 
                        string Prenom_Dern, 
                        string Commune, 
                        string TypeTaxi, 
                        string Cin, 
                        string Telephone, 
                        string Adresse) {
                AgrementRow rowAgrementRow = ((AgrementRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Id,
                        DateCreation,
                        IdOpCreation,
                        DateModif,
                        IdOpModif,
                        DateDebut,
                        DateFin,
                        NumAgrement,
                        Valide,
                        Nom,
                        Prenom,
                        Plaque,
                        PointAttache,
                        NumTaxi,
                        IdVehicule,
                        Nom_Prem,
                        Prenom_Prem,
                        Nom_Dern,
                        Prenom_Dern,
                        Commune,
                        TypeTaxi,
                        Cin,
                        Telephone,
                        Adresse};
                rowAgrementRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAgrementRow);
                return rowAgrementRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementRow FindById(int Id) {
                return ((AgrementRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AgrementDataTable cln = ((AgrementDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AgrementDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnIdOpCreation = base.Columns["IdOpCreation"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnIdOpModif = base.Columns["IdOpModif"];
                this.columnDateDebut = base.Columns["DateDebut"];
                this.columnDateFin = base.Columns["DateFin"];
                this.columnNumAgrement = base.Columns["NumAgrement"];
                this.columnValide = base.Columns["Valide"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnPlaque = base.Columns["Plaque"];
                this.columnPointAttache = base.Columns["PointAttache"];
                this.columnNumTaxi = base.Columns["NumTaxi"];
                this.columnIdVehicule = base.Columns["IdVehicule"];
                this.columnNom_Prem = base.Columns["Nom_Prem"];
                this.columnPrenom_Prem = base.Columns["Prenom_Prem"];
                this.columnNom_Dern = base.Columns["Nom_Dern"];
                this.columnPrenom_Dern = base.Columns["Prenom_Dern"];
                this.columnCommune = base.Columns["Commune"];
                this.columnTypeTaxi = base.Columns["TypeTaxi"];
                this.columnCin = base.Columns["Cin"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnAdresse = base.Columns["Adresse"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnIdOpCreation = new global::System.Data.DataColumn("IdOpCreation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpCreation);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnIdOpModif = new global::System.Data.DataColumn("IdOpModif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpModif);
                this.columnDateDebut = new global::System.Data.DataColumn("DateDebut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDebut);
                this.columnDateFin = new global::System.Data.DataColumn("DateFin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFin);
                this.columnNumAgrement = new global::System.Data.DataColumn("NumAgrement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumAgrement);
                this.columnValide = new global::System.Data.DataColumn("Valide", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValide);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnPlaque = new global::System.Data.DataColumn("Plaque", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPlaque);
                this.columnPointAttache = new global::System.Data.DataColumn("PointAttache", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointAttache);
                this.columnNumTaxi = new global::System.Data.DataColumn("NumTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumTaxi);
                this.columnIdVehicule = new global::System.Data.DataColumn("IdVehicule", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdVehicule);
                this.columnNom_Prem = new global::System.Data.DataColumn("Nom_Prem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom_Prem);
                this.columnPrenom_Prem = new global::System.Data.DataColumn("Prenom_Prem", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom_Prem);
                this.columnNom_Dern = new global::System.Data.DataColumn("Nom_Dern", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom_Dern);
                this.columnPrenom_Dern = new global::System.Data.DataColumn("Prenom_Dern", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom_Dern);
                this.columnCommune = new global::System.Data.DataColumn("Commune", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCommune);
                this.columnTypeTaxi = new global::System.Data.DataColumn("TypeTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeTaxi);
                this.columnCin = new global::System.Data.DataColumn("Cin", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCin);
                this.columnTelephone = new global::System.Data.DataColumn("Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnAdresse = new global::System.Data.DataColumn("Adresse", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Id", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AllowDBNull = false;
                this.columnId.Unique = true;
                this.columnNumAgrement.MaxLength = 25;
                this.columnNom.MaxLength = 30;
                this.columnPrenom.MaxLength = 30;
                this.columnPlaque.MaxLength = 30;
                this.columnPointAttache.MaxLength = 30;
                this.columnNumTaxi.MaxLength = 30;
                this.columnCommune.MaxLength = 30;
                this.columnTypeTaxi.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementRow NewAgrementRow() {
                return ((AgrementRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AgrementRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AgrementRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AgrementRowChanged != null)) {
                    this.AgrementRowChanged(this, new AgrementRowChangeEvent(((AgrementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AgrementRowChanging != null)) {
                    this.AgrementRowChanging(this, new AgrementRowChangeEvent(((AgrementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AgrementRowDeleted != null)) {
                    this.AgrementRowDeleted(this, new AgrementRowChangeEvent(((AgrementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AgrementRowDeleting != null)) {
                    this.AgrementRowDeleting(this, new AgrementRowChangeEvent(((AgrementRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAgrementRow(AgrementRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AgrementDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CommunesDataTable : global::System.Data.TypedTableBase<CommunesRow> {
            
            private global::System.Data.DataColumn columnIdCommune;
            
            private global::System.Data.DataColumn columnNomCommune;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CommunesDataTable() {
                this.TableName = "Communes";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CommunesDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CommunesDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdCommuneColumn {
                get {
                    return this.columnIdCommune;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomCommuneColumn {
                get {
                    return this.columnNomCommune;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CommunesRow this[int index] {
                get {
                    return ((CommunesRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CommunesRowChangeEventHandler CommunesRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CommunesRowChangeEventHandler CommunesRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CommunesRowChangeEventHandler CommunesRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CommunesRowChangeEventHandler CommunesRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCommunesRow(CommunesRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CommunesRow AddCommunesRow(string NomCommune) {
                CommunesRow rowCommunesRow = ((CommunesRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        NomCommune};
                rowCommunesRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCommunesRow);
                return rowCommunesRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CommunesDataTable cln = ((CommunesDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CommunesDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdCommune = base.Columns["IdCommune"];
                this.columnNomCommune = base.Columns["NomCommune"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdCommune = new global::System.Data.DataColumn("IdCommune", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdCommune);
                this.columnNomCommune = new global::System.Data.DataColumn("NomCommune", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomCommune);
                this.columnIdCommune.AutoIncrement = true;
                this.columnIdCommune.AutoIncrementSeed = -1;
                this.columnIdCommune.AutoIncrementStep = -1;
                this.columnIdCommune.AllowDBNull = false;
                this.columnIdCommune.ReadOnly = true;
                this.columnNomCommune.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CommunesRow NewCommunesRow() {
                return ((CommunesRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CommunesRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CommunesRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CommunesRowChanged != null)) {
                    this.CommunesRowChanged(this, new CommunesRowChangeEvent(((CommunesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CommunesRowChanging != null)) {
                    this.CommunesRowChanging(this, new CommunesRowChangeEvent(((CommunesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CommunesRowDeleted != null)) {
                    this.CommunesRowDeleted(this, new CommunesRowChangeEvent(((CommunesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CommunesRowDeleting != null)) {
                    this.CommunesRowDeleting(this, new CommunesRowChangeEvent(((CommunesRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCommunesRow(CommunesRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CommunesDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class MotifsDataTable : global::System.Data.TypedTableBase<MotifsRow> {
            
            private global::System.Data.DataColumn columnIdMotif;
            
            private global::System.Data.DataColumn columnAbrevMotif;
            
            private global::System.Data.DataColumn columnLibelleMotif;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MotifsDataTable() {
                this.TableName = "Motifs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MotifsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected MotifsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdMotifColumn {
                get {
                    return this.columnIdMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbrevMotifColumn {
                get {
                    return this.columnAbrevMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleMotifColumn {
                get {
                    return this.columnLibelleMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MotifsRow this[int index] {
                get {
                    return ((MotifsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MotifsRowChangeEventHandler MotifsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MotifsRowChangeEventHandler MotifsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MotifsRowChangeEventHandler MotifsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event MotifsRowChangeEventHandler MotifsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddMotifsRow(MotifsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MotifsRow AddMotifsRow(string AbrevMotif, string LibelleMotif) {
                MotifsRow rowMotifsRow = ((MotifsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AbrevMotif,
                        LibelleMotif};
                rowMotifsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowMotifsRow);
                return rowMotifsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                MotifsDataTable cln = ((MotifsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new MotifsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdMotif = base.Columns["IdMotif"];
                this.columnAbrevMotif = base.Columns["AbrevMotif"];
                this.columnLibelleMotif = base.Columns["LibelleMotif"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdMotif = new global::System.Data.DataColumn("IdMotif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdMotif);
                this.columnAbrevMotif = new global::System.Data.DataColumn("AbrevMotif", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbrevMotif);
                this.columnLibelleMotif = new global::System.Data.DataColumn("LibelleMotif", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleMotif);
                this.columnIdMotif.AutoIncrement = true;
                this.columnIdMotif.AutoIncrementSeed = -1;
                this.columnIdMotif.AutoIncrementStep = -1;
                this.columnIdMotif.AllowDBNull = false;
                this.columnIdMotif.ReadOnly = true;
                this.columnAbrevMotif.MaxLength = 20;
                this.columnLibelleMotif.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MotifsRow NewMotifsRow() {
                return ((MotifsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new MotifsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(MotifsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MotifsRowChanged != null)) {
                    this.MotifsRowChanged(this, new MotifsRowChangeEvent(((MotifsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MotifsRowChanging != null)) {
                    this.MotifsRowChanging(this, new MotifsRowChangeEvent(((MotifsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MotifsRowDeleted != null)) {
                    this.MotifsRowDeleted(this, new MotifsRowChangeEvent(((MotifsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MotifsRowDeleting != null)) {
                    this.MotifsRowDeleting(this, new MotifsRowChangeEvent(((MotifsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveMotifsRow(MotifsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "MotifsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class VisiteursDataTable : global::System.Data.TypedTableBase<VisiteursRow> {
            
            private global::System.Data.DataColumn columnIdUser;
            
            private global::System.Data.DataColumn columnMatricule;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnNumService;
            
            private global::System.Data.DataColumn columnTel;
            
            private global::System.Data.DataColumn columnFax;
            
            private global::System.Data.DataColumn columnFlagAutorise;
            
            private global::System.Data.DataColumn columnDateDebut;
            
            private global::System.Data.DataColumn columnDateFin;
            
            private global::System.Data.DataColumn columnNumDroitAcces;
            
            private global::System.Data.DataColumn columnNumBadge;
            
            private global::System.Data.DataColumn columnNbEmpreintes;
            
            private global::System.Data.DataColumn columnAdresse1;
            
            private global::System.Data.DataColumn columnAdresse2;
            
            private global::System.Data.DataColumn columnCodePostal;
            
            private global::System.Data.DataColumn columnVille;
            
            private global::System.Data.DataColumn columnTelephone;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnEMail;
            
            private global::System.Data.DataColumn columnDateCreat;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnDateNaissance;
            
            private global::System.Data.DataColumn columnHeureMois;
            
            private global::System.Data.DataColumn columnTauxNormal;
            
            private global::System.Data.DataColumn columnTauxSup1;
            
            private global::System.Data.DataColumn columnTauxSup2;
            
            private global::System.Data.DataColumn columnFonction;
            
            private global::System.Data.DataColumn columnTauxSup3;
            
            private global::System.Data.DataColumn columnSexe;
            
            private global::System.Data.DataColumn columnCivilite;
            
            private global::System.Data.DataColumn columnNumCI;
            
            private global::System.Data.DataColumn columnNumSS;
            
            private global::System.Data.DataColumn columnNumHoraire;
            
            private global::System.Data.DataColumn columnCodePin;
            
            private global::System.Data.DataColumn columnCheckEmpreinte;
            
            private global::System.Data.DataColumn columnCheckBadge;
            
            private global::System.Data.DataColumn columnCheckPin;
            
            private global::System.Data.DataColumn columnCheckAutoDeclar;
            
            private global::System.Data.DataColumn columnTauxSup0;
            
            private global::System.Data.DataColumn columnTypeTemps;
            
            private global::System.Data.DataColumn columnModified;
            
            private global::System.Data.DataColumn columnBadgeEncoded;
            
            private global::System.Data.DataColumn columnNumContrat;
            
            private global::System.Data.DataColumn columnTypeUser;
            
            private global::System.Data.DataColumn columnIdUser1;
            
            private global::System.Data.DataColumn columnIdUser2;
            
            private global::System.Data.DataColumn columnIdUser3;
            
            private global::System.Data.DataColumn columnUpdateLecNow;
            
            private global::System.Data.DataColumn columnJourRepos1;
            
            private global::System.Data.DataColumn columnJourRepos2;
            
            private global::System.Data.DataColumn columnMotif;
            
            private global::System.Data.DataColumn columnIdMotif;
            
            private global::System.Data.DataColumn columnTotal;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursDataTable() {
                this.TableName = "Visiteurs";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VisiteursDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected VisiteursDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUserColumn {
                get {
                    return this.columnIdUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeColumn {
                get {
                    return this.columnMatricule;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumServiceColumn {
                get {
                    return this.columnNumService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelColumn {
                get {
                    return this.columnTel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxColumn {
                get {
                    return this.columnFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FlagAutoriseColumn {
                get {
                    return this.columnFlagAutorise;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateDebutColumn {
                get {
                    return this.columnDateDebut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinColumn {
                get {
                    return this.columnDateFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumDroitAccesColumn {
                get {
                    return this.columnNumDroitAcces;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumBadgeColumn {
                get {
                    return this.columnNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NbEmpreintesColumn {
                get {
                    return this.columnNbEmpreintes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adresse1Column {
                get {
                    return this.columnAdresse1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Adresse2Column {
                get {
                    return this.columnAdresse2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodePostalColumn {
                get {
                    return this.columnCodePostal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VilleColumn {
                get {
                    return this.columnVille;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TelephoneColumn {
                get {
                    return this.columnTelephone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EMailColumn {
                get {
                    return this.columnEMail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreatColumn {
                get {
                    return this.columnDateCreat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateNaissanceColumn {
                get {
                    return this.columnDateNaissance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeureMoisColumn {
                get {
                    return this.columnHeureMois;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxNormalColumn {
                get {
                    return this.columnTauxNormal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup1Column {
                get {
                    return this.columnTauxSup1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup2Column {
                get {
                    return this.columnTauxSup2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FonctionColumn {
                get {
                    return this.columnFonction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup3Column {
                get {
                    return this.columnTauxSup3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SexeColumn {
                get {
                    return this.columnSexe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CiviliteColumn {
                get {
                    return this.columnCivilite;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumCIColumn {
                get {
                    return this.columnNumCI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumSSColumn {
                get {
                    return this.columnNumSS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumHoraireColumn {
                get {
                    return this.columnNumHoraire;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodePinColumn {
                get {
                    return this.columnCodePin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckEmpreinteColumn {
                get {
                    return this.columnCheckEmpreinte;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckBadgeColumn {
                get {
                    return this.columnCheckBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckPinColumn {
                get {
                    return this.columnCheckPin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CheckAutoDeclarColumn {
                get {
                    return this.columnCheckAutoDeclar;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TauxSup0Column {
                get {
                    return this.columnTauxSup0;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeTempsColumn {
                get {
                    return this.columnTypeTemps;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ModifiedColumn {
                get {
                    return this.columnModified;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BadgeEncodedColumn {
                get {
                    return this.columnBadgeEncoded;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumContratColumn {
                get {
                    return this.columnNumContrat;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeUserColumn {
                get {
                    return this.columnTypeUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUser1Column {
                get {
                    return this.columnIdUser1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUser2Column {
                get {
                    return this.columnIdUser2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdUser3Column {
                get {
                    return this.columnIdUser3;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UpdateLecNowColumn {
                get {
                    return this.columnUpdateLecNow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JourRepos1Column {
                get {
                    return this.columnJourRepos1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn JourRepos2Column {
                get {
                    return this.columnJourRepos2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MotifColumn {
                get {
                    return this.columnMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdMotifColumn {
                get {
                    return this.columnIdMotif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursRow this[int index] {
                get {
                    return ((VisiteursRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VisiteursRowChangeEventHandler VisiteursRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VisiteursRowChangeEventHandler VisiteursRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VisiteursRowChangeEventHandler VisiteursRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event VisiteursRowChangeEventHandler VisiteursRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddVisiteursRow(VisiteursRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursRow AddVisiteursRow(
                        int IdUser, 
                        string Matricule, 
                        string Nom, 
                        string Prenom, 
                        int NumService, 
                        string Tel, 
                        string Fax, 
                        string FlagAutorise, 
                        System.DateTime DateDebut, 
                        System.DateTime DateFin, 
                        int NumDroitAcces, 
                        string NumBadge, 
                        int NbEmpreintes, 
                        string Adresse1, 
                        string Adresse2, 
                        string CodePostal, 
                        string Ville, 
                        string Telephone, 
                        string Mobile, 
                        string EMail, 
                        System.DateTime DateCreat, 
                        System.DateTime DateModif, 
                        string DateNaissance, 
                        int HeureMois, 
                        int TauxNormal, 
                        int TauxSup1, 
                        int TauxSup2, 
                        string Fonction, 
                        int TauxSup3, 
                        int Sexe, 
                        int Civilite, 
                        string NumCI, 
                        string NumSS, 
                        int NumHoraire, 
                        int CodePin, 
                        bool CheckEmpreinte, 
                        bool CheckBadge, 
                        bool CheckPin, 
                        bool CheckAutoDeclar, 
                        int TauxSup0, 
                        int TypeTemps, 
                        bool Modified, 
                        bool BadgeEncoded, 
                        int NumContrat, 
                        int TypeUser, 
                        int IdUser1, 
                        int IdUser2, 
                        int IdUser3, 
                        bool UpdateLecNow, 
                        int JourRepos1, 
                        int JourRepos2, 
                        string Motif, 
                        int IdMotif, 
                        string Total) {
                VisiteursRow rowVisiteursRow = ((VisiteursRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        IdUser,
                        Matricule,
                        Nom,
                        Prenom,
                        NumService,
                        Tel,
                        Fax,
                        FlagAutorise,
                        DateDebut,
                        DateFin,
                        NumDroitAcces,
                        NumBadge,
                        NbEmpreintes,
                        Adresse1,
                        Adresse2,
                        CodePostal,
                        Ville,
                        Telephone,
                        Mobile,
                        EMail,
                        DateCreat,
                        DateModif,
                        DateNaissance,
                        HeureMois,
                        TauxNormal,
                        TauxSup1,
                        TauxSup2,
                        Fonction,
                        TauxSup3,
                        Sexe,
                        Civilite,
                        NumCI,
                        NumSS,
                        NumHoraire,
                        CodePin,
                        CheckEmpreinte,
                        CheckBadge,
                        CheckPin,
                        CheckAutoDeclar,
                        TauxSup0,
                        TypeTemps,
                        Modified,
                        BadgeEncoded,
                        NumContrat,
                        TypeUser,
                        IdUser1,
                        IdUser2,
                        IdUser3,
                        UpdateLecNow,
                        JourRepos1,
                        JourRepos2,
                        Motif,
                        IdMotif,
                        Total};
                rowVisiteursRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowVisiteursRow);
                return rowVisiteursRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursRow FindByMatricule(string Matricule) {
                return ((VisiteursRow)(this.Rows.Find(new object[] {
                            Matricule})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                VisiteursDataTable cln = ((VisiteursDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new VisiteursDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdUser = base.Columns["IdUser"];
                this.columnMatricule = base.Columns["Matricule"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnNumService = base.Columns["NumService"];
                this.columnTel = base.Columns["Tel"];
                this.columnFax = base.Columns["Fax"];
                this.columnFlagAutorise = base.Columns["FlagAutorise"];
                this.columnDateDebut = base.Columns["DateDebut"];
                this.columnDateFin = base.Columns["DateFin"];
                this.columnNumDroitAcces = base.Columns["NumDroitAcces"];
                this.columnNumBadge = base.Columns["NumBadge"];
                this.columnNbEmpreintes = base.Columns["NbEmpreintes"];
                this.columnAdresse1 = base.Columns["Adresse1"];
                this.columnAdresse2 = base.Columns["Adresse2"];
                this.columnCodePostal = base.Columns["CodePostal"];
                this.columnVille = base.Columns["Ville"];
                this.columnTelephone = base.Columns["Telephone"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnEMail = base.Columns["EMail"];
                this.columnDateCreat = base.Columns["DateCreat"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnDateNaissance = base.Columns["DateNaissance"];
                this.columnHeureMois = base.Columns["HeureMois"];
                this.columnTauxNormal = base.Columns["TauxNormal"];
                this.columnTauxSup1 = base.Columns["TauxSup1"];
                this.columnTauxSup2 = base.Columns["TauxSup2"];
                this.columnFonction = base.Columns["Fonction"];
                this.columnTauxSup3 = base.Columns["TauxSup3"];
                this.columnSexe = base.Columns["Sexe"];
                this.columnCivilite = base.Columns["Civilite"];
                this.columnNumCI = base.Columns["NumCI"];
                this.columnNumSS = base.Columns["NumSS"];
                this.columnNumHoraire = base.Columns["NumHoraire"];
                this.columnCodePin = base.Columns["CodePin"];
                this.columnCheckEmpreinte = base.Columns["CheckEmpreinte"];
                this.columnCheckBadge = base.Columns["CheckBadge"];
                this.columnCheckPin = base.Columns["CheckPin"];
                this.columnCheckAutoDeclar = base.Columns["CheckAutoDeclar"];
                this.columnTauxSup0 = base.Columns["TauxSup0"];
                this.columnTypeTemps = base.Columns["TypeTemps"];
                this.columnModified = base.Columns["Modified"];
                this.columnBadgeEncoded = base.Columns["BadgeEncoded"];
                this.columnNumContrat = base.Columns["NumContrat"];
                this.columnTypeUser = base.Columns["TypeUser"];
                this.columnIdUser1 = base.Columns["IdUser1"];
                this.columnIdUser2 = base.Columns["IdUser2"];
                this.columnIdUser3 = base.Columns["IdUser3"];
                this.columnUpdateLecNow = base.Columns["UpdateLecNow"];
                this.columnJourRepos1 = base.Columns["JourRepos1"];
                this.columnJourRepos2 = base.Columns["JourRepos2"];
                this.columnMotif = base.Columns["Motif"];
                this.columnIdMotif = base.Columns["IdMotif"];
                this.columnTotal = base.Columns["Total"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdUser = new global::System.Data.DataColumn("IdUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser);
                this.columnMatricule = new global::System.Data.DataColumn("Matricule", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatricule);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnNumService = new global::System.Data.DataColumn("NumService", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumService);
                this.columnTel = new global::System.Data.DataColumn("Tel", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTel);
                this.columnFax = new global::System.Data.DataColumn("Fax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFax);
                this.columnFlagAutorise = new global::System.Data.DataColumn("FlagAutorise", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFlagAutorise);
                this.columnDateDebut = new global::System.Data.DataColumn("DateDebut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDebut);
                this.columnDateFin = new global::System.Data.DataColumn("DateFin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFin);
                this.columnNumDroitAcces = new global::System.Data.DataColumn("NumDroitAcces", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumDroitAcces);
                this.columnNumBadge = new global::System.Data.DataColumn("NumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumBadge);
                this.columnNbEmpreintes = new global::System.Data.DataColumn("NbEmpreintes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNbEmpreintes);
                this.columnAdresse1 = new global::System.Data.DataColumn("Adresse1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse1);
                this.columnAdresse2 = new global::System.Data.DataColumn("Adresse2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdresse2);
                this.columnCodePostal = new global::System.Data.DataColumn("CodePostal", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodePostal);
                this.columnVille = new global::System.Data.DataColumn("Ville", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVille);
                this.columnTelephone = new global::System.Data.DataColumn("Telephone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTelephone);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnEMail = new global::System.Data.DataColumn("EMail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEMail);
                this.columnDateCreat = new global::System.Data.DataColumn("DateCreat", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreat);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnDateNaissance = new global::System.Data.DataColumn("DateNaissance", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateNaissance);
                this.columnHeureMois = new global::System.Data.DataColumn("HeureMois", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeureMois);
                this.columnTauxNormal = new global::System.Data.DataColumn("TauxNormal", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxNormal);
                this.columnTauxSup1 = new global::System.Data.DataColumn("TauxSup1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup1);
                this.columnTauxSup2 = new global::System.Data.DataColumn("TauxSup2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup2);
                this.columnFonction = new global::System.Data.DataColumn("Fonction", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFonction);
                this.columnTauxSup3 = new global::System.Data.DataColumn("TauxSup3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup3);
                this.columnSexe = new global::System.Data.DataColumn("Sexe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexe);
                this.columnCivilite = new global::System.Data.DataColumn("Civilite", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCivilite);
                this.columnNumCI = new global::System.Data.DataColumn("NumCI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumCI);
                this.columnNumSS = new global::System.Data.DataColumn("NumSS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumSS);
                this.columnNumHoraire = new global::System.Data.DataColumn("NumHoraire", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumHoraire);
                this.columnCodePin = new global::System.Data.DataColumn("CodePin", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodePin);
                this.columnCheckEmpreinte = new global::System.Data.DataColumn("CheckEmpreinte", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckEmpreinte);
                this.columnCheckBadge = new global::System.Data.DataColumn("CheckBadge", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckBadge);
                this.columnCheckPin = new global::System.Data.DataColumn("CheckPin", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckPin);
                this.columnCheckAutoDeclar = new global::System.Data.DataColumn("CheckAutoDeclar", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCheckAutoDeclar);
                this.columnTauxSup0 = new global::System.Data.DataColumn("TauxSup0", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTauxSup0);
                this.columnTypeTemps = new global::System.Data.DataColumn("TypeTemps", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeTemps);
                this.columnModified = new global::System.Data.DataColumn("Modified", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnModified);
                this.columnBadgeEncoded = new global::System.Data.DataColumn("BadgeEncoded", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBadgeEncoded);
                this.columnNumContrat = new global::System.Data.DataColumn("NumContrat", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumContrat);
                this.columnTypeUser = new global::System.Data.DataColumn("TypeUser", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeUser);
                this.columnIdUser1 = new global::System.Data.DataColumn("IdUser1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser1);
                this.columnIdUser2 = new global::System.Data.DataColumn("IdUser2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser2);
                this.columnIdUser3 = new global::System.Data.DataColumn("IdUser3", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdUser3);
                this.columnUpdateLecNow = new global::System.Data.DataColumn("UpdateLecNow", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUpdateLecNow);
                this.columnJourRepos1 = new global::System.Data.DataColumn("JourRepos1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJourRepos1);
                this.columnJourRepos2 = new global::System.Data.DataColumn("JourRepos2", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJourRepos2);
                this.columnMotif = new global::System.Data.DataColumn("Motif", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMotif);
                this.columnIdMotif = new global::System.Data.DataColumn("IdMotif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdMotif);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnMatricule}, true));
                this.columnIdUser.AllowDBNull = false;
                this.columnMatricule.AllowDBNull = false;
                this.columnMatricule.Unique = true;
                this.columnMatricule.MaxLength = 20;
                this.columnNom.MaxLength = 32;
                this.columnPrenom.MaxLength = 32;
                this.columnTel.MaxLength = 20;
                this.columnFax.MaxLength = 50;
                this.columnFlagAutorise.MaxLength = 5;
                this.columnNumBadge.MaxLength = 20;
                this.columnAdresse1.MaxLength = 50;
                this.columnAdresse2.MaxLength = 50;
                this.columnCodePostal.MaxLength = 10;
                this.columnVille.MaxLength = 32;
                this.columnTelephone.MaxLength = 20;
                this.columnMobile.MaxLength = 20;
                this.columnEMail.MaxLength = 50;
                this.columnDateNaissance.MaxLength = 50;
                this.columnFonction.MaxLength = 50;
                this.columnNumCI.MaxLength = 20;
                this.columnNumSS.MaxLength = 20;
                this.columnMotif.MaxLength = 100;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursRow NewVisiteursRow() {
                return ((VisiteursRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new VisiteursRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(VisiteursRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.VisiteursRowChanged != null)) {
                    this.VisiteursRowChanged(this, new VisiteursRowChangeEvent(((VisiteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.VisiteursRowChanging != null)) {
                    this.VisiteursRowChanging(this, new VisiteursRowChangeEvent(((VisiteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.VisiteursRowDeleted != null)) {
                    this.VisiteursRowDeleted(this, new VisiteursRowChangeEvent(((VisiteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.VisiteursRowDeleting != null)) {
                    this.VisiteursRowDeleting(this, new VisiteursRowChangeEvent(((VisiteursRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveVisiteursRow(VisiteursRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "VisiteursDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class AutoQpuDataTable : global::System.Data.TypedTableBase<AutoQpuRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnDateCreation;
            
            private global::System.Data.DataColumn columnIdOpCreation;
            
            private global::System.Data.DataColumn columnDateModif;
            
            private global::System.Data.DataColumn columnIdOpModif;
            
            private global::System.Data.DataColumn columnDateDebut;
            
            private global::System.Data.DataColumn columnDateFin;
            
            private global::System.Data.DataColumn columnMatriculeUser;
            
            private global::System.Data.DataColumn columnValide;
            
            private global::System.Data.DataColumn columnNumAuto;
            
            private global::System.Data.DataColumn columnNumAgrement;
            
            private global::System.Data.DataColumn columnDestination;
            
            private global::System.Data.DataColumn columnIdAgrement;
            
            private global::System.Data.DataColumn columnNomPassager1;
            
            private global::System.Data.DataColumn columnPrenomPassager1;
            
            private global::System.Data.DataColumn columnCinPassager1;
            
            private global::System.Data.DataColumn columnNomPassager2;
            
            private global::System.Data.DataColumn columnPrenomPassager2;
            
            private global::System.Data.DataColumn columnCinPassager2;
            
            private global::System.Data.DataColumn columnNomUser;
            
            private global::System.Data.DataColumn columnPrenomUser;
            
            private global::System.Data.DataColumn columnNumListe;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoQpuDataTable() {
                this.TableName = "AutoQpu";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AutoQpuDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected AutoQpuDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateCreationColumn {
                get {
                    return this.columnDateCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpCreationColumn {
                get {
                    return this.columnIdOpCreation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateModifColumn {
                get {
                    return this.columnDateModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOpModifColumn {
                get {
                    return this.columnIdOpModif;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateDebutColumn {
                get {
                    return this.columnDateDebut;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateFinColumn {
                get {
                    return this.columnDateFin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MatriculeUserColumn {
                get {
                    return this.columnMatriculeUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValideColumn {
                get {
                    return this.columnValide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumAutoColumn {
                get {
                    return this.columnNumAuto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumAgrementColumn {
                get {
                    return this.columnNumAgrement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DestinationColumn {
                get {
                    return this.columnDestination;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdAgrementColumn {
                get {
                    return this.columnIdAgrement;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomPassager1Column {
                get {
                    return this.columnNomPassager1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomPassager1Column {
                get {
                    return this.columnPrenomPassager1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CinPassager1Column {
                get {
                    return this.columnCinPassager1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomPassager2Column {
                get {
                    return this.columnNomPassager2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomPassager2Column {
                get {
                    return this.columnPrenomPassager2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CinPassager2Column {
                get {
                    return this.columnCinPassager2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomUserColumn {
                get {
                    return this.columnNomUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomUserColumn {
                get {
                    return this.columnPrenomUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumListeColumn {
                get {
                    return this.columnNumListe;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoQpuRow this[int index] {
                get {
                    return ((AutoQpuRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoQpuRowChangeEventHandler AutoQpuRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoQpuRowChangeEventHandler AutoQpuRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoQpuRowChangeEventHandler AutoQpuRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event AutoQpuRowChangeEventHandler AutoQpuRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddAutoQpuRow(AutoQpuRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoQpuRow AddAutoQpuRow(
                        System.DateTime DateCreation, 
                        int IdOpCreation, 
                        System.DateTime DateModif, 
                        int IdOpModif, 
                        System.DateTime DateDebut, 
                        System.DateTime DateFin, 
                        string MatriculeUser, 
                        bool Valide, 
                        string NumAuto, 
                        string NumAgrement, 
                        string Destination, 
                        int IdAgrement, 
                        string NomPassager1, 
                        string PrenomPassager1, 
                        string CinPassager1, 
                        string NomPassager2, 
                        string PrenomPassager2, 
                        string CinPassager2, 
                        string NomUser, 
                        string PrenomUser, 
                        int NumListe) {
                AutoQpuRow rowAutoQpuRow = ((AutoQpuRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        DateCreation,
                        IdOpCreation,
                        DateModif,
                        IdOpModif,
                        DateDebut,
                        DateFin,
                        MatriculeUser,
                        Valide,
                        NumAuto,
                        NumAgrement,
                        Destination,
                        IdAgrement,
                        NomPassager1,
                        PrenomPassager1,
                        CinPassager1,
                        NomPassager2,
                        PrenomPassager2,
                        CinPassager2,
                        NomUser,
                        PrenomUser,
                        NumListe};
                rowAutoQpuRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowAutoQpuRow);
                return rowAutoQpuRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                AutoQpuDataTable cln = ((AutoQpuDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new AutoQpuDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnDateCreation = base.Columns["DateCreation"];
                this.columnIdOpCreation = base.Columns["IdOpCreation"];
                this.columnDateModif = base.Columns["DateModif"];
                this.columnIdOpModif = base.Columns["IdOpModif"];
                this.columnDateDebut = base.Columns["DateDebut"];
                this.columnDateFin = base.Columns["DateFin"];
                this.columnMatriculeUser = base.Columns["MatriculeUser"];
                this.columnValide = base.Columns["Valide"];
                this.columnNumAuto = base.Columns["NumAuto"];
                this.columnNumAgrement = base.Columns["NumAgrement"];
                this.columnDestination = base.Columns["Destination"];
                this.columnIdAgrement = base.Columns["IdAgrement"];
                this.columnNomPassager1 = base.Columns["NomPassager1"];
                this.columnPrenomPassager1 = base.Columns["PrenomPassager1"];
                this.columnCinPassager1 = base.Columns["CinPassager1"];
                this.columnNomPassager2 = base.Columns["NomPassager2"];
                this.columnPrenomPassager2 = base.Columns["PrenomPassager2"];
                this.columnCinPassager2 = base.Columns["CinPassager2"];
                this.columnNomUser = base.Columns["NomUser"];
                this.columnPrenomUser = base.Columns["PrenomUser"];
                this.columnNumListe = base.Columns["NumListe"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnDateCreation = new global::System.Data.DataColumn("DateCreation", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreation);
                this.columnIdOpCreation = new global::System.Data.DataColumn("IdOpCreation", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpCreation);
                this.columnDateModif = new global::System.Data.DataColumn("DateModif", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateModif);
                this.columnIdOpModif = new global::System.Data.DataColumn("IdOpModif", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOpModif);
                this.columnDateDebut = new global::System.Data.DataColumn("DateDebut", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateDebut);
                this.columnDateFin = new global::System.Data.DataColumn("DateFin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateFin);
                this.columnMatriculeUser = new global::System.Data.DataColumn("MatriculeUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMatriculeUser);
                this.columnValide = new global::System.Data.DataColumn("Valide", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValide);
                this.columnNumAuto = new global::System.Data.DataColumn("NumAuto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumAuto);
                this.columnNumAgrement = new global::System.Data.DataColumn("NumAgrement", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumAgrement);
                this.columnDestination = new global::System.Data.DataColumn("Destination", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDestination);
                this.columnIdAgrement = new global::System.Data.DataColumn("IdAgrement", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdAgrement);
                this.columnNomPassager1 = new global::System.Data.DataColumn("NomPassager1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomPassager1);
                this.columnPrenomPassager1 = new global::System.Data.DataColumn("PrenomPassager1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenomPassager1);
                this.columnCinPassager1 = new global::System.Data.DataColumn("CinPassager1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCinPassager1);
                this.columnNomPassager2 = new global::System.Data.DataColumn("NomPassager2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomPassager2);
                this.columnPrenomPassager2 = new global::System.Data.DataColumn("PrenomPassager2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenomPassager2);
                this.columnCinPassager2 = new global::System.Data.DataColumn("CinPassager2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCinPassager2);
                this.columnNomUser = new global::System.Data.DataColumn("NomUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomUser);
                this.columnPrenomUser = new global::System.Data.DataColumn("PrenomUser", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenomUser);
                this.columnNumListe = new global::System.Data.DataColumn("NumListe", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumListe);
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnMatriculeUser.MaxLength = 25;
                this.columnNumAuto.MaxLength = 25;
                this.columnNumAgrement.MaxLength = 25;
                this.columnDestination.MaxLength = 50;
                this.columnNomPassager1.MaxLength = 30;
                this.columnPrenomPassager1.MaxLength = 30;
                this.columnCinPassager1.MaxLength = 30;
                this.columnNomPassager2.MaxLength = 30;
                this.columnPrenomPassager2.MaxLength = 30;
                this.columnCinPassager2.MaxLength = 30;
                this.columnPrenomUser.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoQpuRow NewAutoQpuRow() {
                return ((AutoQpuRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new AutoQpuRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(AutoQpuRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.AutoQpuRowChanged != null)) {
                    this.AutoQpuRowChanged(this, new AutoQpuRowChangeEvent(((AutoQpuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.AutoQpuRowChanging != null)) {
                    this.AutoQpuRowChanging(this, new AutoQpuRowChangeEvent(((AutoQpuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.AutoQpuRowDeleted != null)) {
                    this.AutoQpuRowDeleted(this, new AutoQpuRowChangeEvent(((AutoQpuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.AutoQpuRowDeleting != null)) {
                    this.AutoQpuRowDeleting(this, new AutoQpuRowChangeEvent(((AutoQpuRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveAutoQpuRow(AutoQpuRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "AutoQpuDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LogDataTable : global::System.Data.TypedTableBase<LogRow> {
            
            private global::System.Data.DataColumn columnIdLog;
            
            private global::System.Data.DataColumn columnType;
            
            private global::System.Data.DataColumn columnInstant;
            
            private global::System.Data.DataColumn columnIdOperateur;
            
            private global::System.Data.DataColumn columnNom;
            
            private global::System.Data.DataColumn columnPrenom;
            
            private global::System.Data.DataColumn columnProfil;
            
            private global::System.Data.DataColumn columnNomService;
            
            private global::System.Data.DataColumn columnLogin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogDataTable() {
                this.TableName = "Log";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected LogDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdLogColumn {
                get {
                    return this.columnIdLog;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InstantColumn {
                get {
                    return this.columnInstant;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdOperateurColumn {
                get {
                    return this.columnIdOperateur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomColumn {
                get {
                    return this.columnNom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrenomColumn {
                get {
                    return this.columnPrenom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ProfilColumn {
                get {
                    return this.columnProfil;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NomServiceColumn {
                get {
                    return this.columnNomService;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoginColumn {
                get {
                    return this.columnLogin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow this[int index] {
                get {
                    return ((LogRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event LogRowChangeEventHandler LogRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddLogRow(LogRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow AddLogRow(int Type, System.DateTime Instant, int IdOperateur, string Nom, string Prenom, string Profil, string NomService, string Login) {
                LogRow rowLogRow = ((LogRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Type,
                        Instant,
                        IdOperateur,
                        Nom,
                        Prenom,
                        Profil,
                        NomService,
                        Login};
                rowLogRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLogRow);
                return rowLogRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                LogDataTable cln = ((LogDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LogDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnIdLog = base.Columns["IdLog"];
                this.columnType = base.Columns["Type"];
                this.columnInstant = base.Columns["Instant"];
                this.columnIdOperateur = base.Columns["IdOperateur"];
                this.columnNom = base.Columns["Nom"];
                this.columnPrenom = base.Columns["Prenom"];
                this.columnProfil = base.Columns["Profil"];
                this.columnNomService = base.Columns["NomService"];
                this.columnLogin = base.Columns["Login"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnIdLog = new global::System.Data.DataColumn("IdLog", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdLog);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.columnInstant = new global::System.Data.DataColumn("Instant", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstant);
                this.columnIdOperateur = new global::System.Data.DataColumn("IdOperateur", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIdOperateur);
                this.columnNom = new global::System.Data.DataColumn("Nom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNom);
                this.columnPrenom = new global::System.Data.DataColumn("Prenom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrenom);
                this.columnProfil = new global::System.Data.DataColumn("Profil", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnProfil);
                this.columnNomService = new global::System.Data.DataColumn("NomService", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNomService);
                this.columnLogin = new global::System.Data.DataColumn("Login", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLogin);
                this.columnIdLog.AutoIncrement = true;
                this.columnIdLog.AutoIncrementSeed = -1;
                this.columnIdLog.AutoIncrementStep = -1;
                this.columnIdLog.AllowDBNull = false;
                this.columnIdLog.ReadOnly = true;
                this.columnNom.MaxLength = 50;
                this.columnPrenom.MaxLength = 50;
                this.columnProfil.MaxLength = 50;
                this.columnNomService.MaxLength = 50;
                this.columnLogin.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow NewLogRow() {
                return ((LogRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LogRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(LogRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LogRowChanged != null)) {
                    this.LogRowChanged(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LogRowChanging != null)) {
                    this.LogRowChanging(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LogRowDeleted != null)) {
                    this.LogRowDeleted(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LogRowDeleting != null)) {
                    this.LogRowDeleting(this, new LogRowChangeEvent(((LogRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveLogRow(LogRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LogDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CodesMissionsDataTable : global::System.Data.TypedTableBase<CodesMissionsRow> {
            
            private global::System.Data.DataColumn columnNumCode;
            
            private global::System.Data.DataColumn columnValeurCode;
            
            private global::System.Data.DataColumn columnLibelleCode;
            
            private global::System.Data.DataColumn columnCodeSap;
            
            private global::System.Data.DataColumn columnLecteur;
            
            private global::System.Data.DataColumn columnType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsDataTable() {
                this.TableName = "CodesMissions";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CodesMissionsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected CodesMissionsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumCodeColumn {
                get {
                    return this.columnNumCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ValeurCodeColumn {
                get {
                    return this.columnValeurCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LibelleCodeColumn {
                get {
                    return this.columnLibelleCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeSapColumn {
                get {
                    return this.columnCodeSap;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LecteurColumn {
                get {
                    return this.columnLecteur;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeColumn {
                get {
                    return this.columnType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsRow this[int index] {
                get {
                    return ((CodesMissionsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CodesMissionsRowChangeEventHandler CodesMissionsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CodesMissionsRowChangeEventHandler CodesMissionsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CodesMissionsRowChangeEventHandler CodesMissionsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event CodesMissionsRowChangeEventHandler CodesMissionsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddCodesMissionsRow(CodesMissionsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsRow AddCodesMissionsRow(int NumCode, string ValeurCode, string LibelleCode, string CodeSap, int Lecteur, int Type) {
                CodesMissionsRow rowCodesMissionsRow = ((CodesMissionsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumCode,
                        ValeurCode,
                        LibelleCode,
                        CodeSap,
                        Lecteur,
                        Type};
                rowCodesMissionsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCodesMissionsRow);
                return rowCodesMissionsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsRow FindByNumCode(int NumCode) {
                return ((CodesMissionsRow)(this.Rows.Find(new object[] {
                            NumCode})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                CodesMissionsDataTable cln = ((CodesMissionsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new CodesMissionsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumCode = base.Columns["NumCode"];
                this.columnValeurCode = base.Columns["ValeurCode"];
                this.columnLibelleCode = base.Columns["LibelleCode"];
                this.columnCodeSap = base.Columns["CodeSap"];
                this.columnLecteur = base.Columns["Lecteur"];
                this.columnType = base.Columns["Type"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumCode = new global::System.Data.DataColumn("NumCode", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumCode);
                this.columnValeurCode = new global::System.Data.DataColumn("ValeurCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValeurCode);
                this.columnLibelleCode = new global::System.Data.DataColumn("LibelleCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLibelleCode);
                this.columnCodeSap = new global::System.Data.DataColumn("CodeSap", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeSap);
                this.columnLecteur = new global::System.Data.DataColumn("Lecteur", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLecteur);
                this.columnType = new global::System.Data.DataColumn("Type", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnType);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNumCode}, true));
                this.columnNumCode.AllowDBNull = false;
                this.columnNumCode.Unique = true;
                this.columnValeurCode.MaxLength = 10;
                this.columnLibelleCode.MaxLength = 50;
                this.columnCodeSap.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsRow NewCodesMissionsRow() {
                return ((CodesMissionsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new CodesMissionsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(CodesMissionsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CodesMissionsRowChanged != null)) {
                    this.CodesMissionsRowChanged(this, new CodesMissionsRowChangeEvent(((CodesMissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CodesMissionsRowChanging != null)) {
                    this.CodesMissionsRowChanging(this, new CodesMissionsRowChangeEvent(((CodesMissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CodesMissionsRowDeleted != null)) {
                    this.CodesMissionsRowDeleted(this, new CodesMissionsRowChangeEvent(((CodesMissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CodesMissionsRowDeleting != null)) {
                    this.CodesMissionsRowDeleting(this, new CodesMissionsRowChangeEvent(((CodesMissionsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveCodesMissionsRow(CodesMissionsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CodesMissionsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SyntheseDataTable : global::System.Data.TypedTableBase<SyntheseRow> {
            
            private global::System.Data.DataColumn columnNumTaxi;
            
            private global::System.Data.DataColumn columnNumBadge;
            
            private global::System.Data.DataColumn columninstant1;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseDataTable() {
                this.TableName = "Synthese";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SyntheseDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SyntheseDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumTaxiColumn {
                get {
                    return this.columnNumTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumBadgeColumn {
                get {
                    return this.columnNumBadge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn instant1Column {
                get {
                    return this.columninstant1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseRow this[int index] {
                get {
                    return ((SyntheseRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseRowChangeEventHandler SyntheseRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseRowChangeEventHandler SyntheseRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseRowChangeEventHandler SyntheseRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseRowChangeEventHandler SyntheseRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSyntheseRow(SyntheseRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseRow AddSyntheseRow(string NumTaxi, string NumBadge, System.DateTime instant1) {
                SyntheseRow rowSyntheseRow = ((SyntheseRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumTaxi,
                        NumBadge,
                        instant1};
                rowSyntheseRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSyntheseRow);
                return rowSyntheseRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SyntheseDataTable cln = ((SyntheseDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SyntheseDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumTaxi = base.Columns["NumTaxi"];
                this.columnNumBadge = base.Columns["NumBadge"];
                this.columninstant1 = base.Columns["instant1"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumTaxi = new global::System.Data.DataColumn("NumTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumTaxi);
                this.columnNumBadge = new global::System.Data.DataColumn("NumBadge", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumBadge);
                this.columninstant1 = new global::System.Data.DataColumn("instant1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninstant1);
                this.columnNumTaxi.MaxLength = 10;
                this.columnNumBadge.MaxLength = 20;
                this.columninstant1.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseRow NewSyntheseRow() {
                return ((SyntheseRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SyntheseRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SyntheseRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SyntheseRowChanged != null)) {
                    this.SyntheseRowChanged(this, new SyntheseRowChangeEvent(((SyntheseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SyntheseRowChanging != null)) {
                    this.SyntheseRowChanging(this, new SyntheseRowChangeEvent(((SyntheseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SyntheseRowDeleted != null)) {
                    this.SyntheseRowDeleted(this, new SyntheseRowChangeEvent(((SyntheseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SyntheseRowDeleting != null)) {
                    this.SyntheseRowDeleting(this, new SyntheseRowChangeEvent(((SyntheseRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSyntheseRow(SyntheseRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SyntheseDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class SyntheseTaxiAbsentsDataTable : global::System.Data.TypedTableBase<SyntheseTaxiAbsentsRow> {
            
            private global::System.Data.DataColumn columnNumTaxi;
            
            private global::System.Data.DataColumn columninstant1;
            
            private global::System.Data.DataColumn columnIndexTaxi;
            
            private global::System.Data.DataColumn columnCodeRefus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseTaxiAbsentsDataTable() {
                this.TableName = "SyntheseTaxiAbsents";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SyntheseTaxiAbsentsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected SyntheseTaxiAbsentsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NumTaxiColumn {
                get {
                    return this.columnNumTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn instant1Column {
                get {
                    return this.columninstant1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IndexTaxiColumn {
                get {
                    return this.columnIndexTaxi;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CodeRefusColumn {
                get {
                    return this.columnCodeRefus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseTaxiAbsentsRow this[int index] {
                get {
                    return ((SyntheseTaxiAbsentsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseTaxiAbsentsRowChangeEventHandler SyntheseTaxiAbsentsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseTaxiAbsentsRowChangeEventHandler SyntheseTaxiAbsentsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseTaxiAbsentsRowChangeEventHandler SyntheseTaxiAbsentsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event SyntheseTaxiAbsentsRowChangeEventHandler SyntheseTaxiAbsentsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddSyntheseTaxiAbsentsRow(SyntheseTaxiAbsentsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseTaxiAbsentsRow AddSyntheseTaxiAbsentsRow(string NumTaxi, System.DateTime instant1, int IndexTaxi, int CodeRefus) {
                SyntheseTaxiAbsentsRow rowSyntheseTaxiAbsentsRow = ((SyntheseTaxiAbsentsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        NumTaxi,
                        instant1,
                        IndexTaxi,
                        CodeRefus};
                rowSyntheseTaxiAbsentsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowSyntheseTaxiAbsentsRow);
                return rowSyntheseTaxiAbsentsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                SyntheseTaxiAbsentsDataTable cln = ((SyntheseTaxiAbsentsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new SyntheseTaxiAbsentsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnNumTaxi = base.Columns["NumTaxi"];
                this.columninstant1 = base.Columns["instant1"];
                this.columnIndexTaxi = base.Columns["IndexTaxi"];
                this.columnCodeRefus = base.Columns["CodeRefus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnNumTaxi = new global::System.Data.DataColumn("NumTaxi", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumTaxi);
                this.columninstant1 = new global::System.Data.DataColumn("instant1", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninstant1);
                this.columnIndexTaxi = new global::System.Data.DataColumn("IndexTaxi", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIndexTaxi);
                this.columnCodeRefus = new global::System.Data.DataColumn("CodeRefus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodeRefus);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseTaxiAbsentsRow NewSyntheseTaxiAbsentsRow() {
                return ((SyntheseTaxiAbsentsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new SyntheseTaxiAbsentsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(SyntheseTaxiAbsentsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.SyntheseTaxiAbsentsRowChanged != null)) {
                    this.SyntheseTaxiAbsentsRowChanged(this, new SyntheseTaxiAbsentsRowChangeEvent(((SyntheseTaxiAbsentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.SyntheseTaxiAbsentsRowChanging != null)) {
                    this.SyntheseTaxiAbsentsRowChanging(this, new SyntheseTaxiAbsentsRowChangeEvent(((SyntheseTaxiAbsentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.SyntheseTaxiAbsentsRowDeleted != null)) {
                    this.SyntheseTaxiAbsentsRowDeleted(this, new SyntheseTaxiAbsentsRowChangeEvent(((SyntheseTaxiAbsentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.SyntheseTaxiAbsentsRowDeleting != null)) {
                    this.SyntheseTaxiAbsentsRowDeleting(this, new SyntheseTaxiAbsentsRowChangeEvent(((SyntheseTaxiAbsentsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveSyntheseTaxiAbsentsRow(SyntheseTaxiAbsentsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MyDataSet ds = new MyDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "SyntheseTaxiAbsentsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UsersRow : global::System.Data.DataRow {
            
            private UsersDataTable tableUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsers = ((UsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser {
                get {
                    return ((int)(this[this.tableUsers.IdUserColumn]));
                }
                set {
                    this[this.tableUsers.IdUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Matricule {
                get {
                    if (this.IsMatriculeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUsers.MatriculeColumn]));
                    }
                }
                set {
                    this[this.tableUsers.MatriculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    if (this.IsNomNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUsers.NomColumn]));
                    }
                }
                set {
                    this[this.tableUsers.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    if (this.IsPrenomNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUsers.PrenomColumn]));
                    }
                }
                set {
                    this[this.tableUsers.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumService {
                get {
                    try {
                        return ((int)(this[this.tableUsers.NumServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumService\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tel {
                get {
                    try {
                        return ((string)(this[this.tableUsers.TelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Tel\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableUsers.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Fax\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FlagAutorise {
                get {
                    try {
                        return ((string)(this[this.tableUsers.FlagAutoriseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'FlagAutorise\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.FlagAutoriseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateDebut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUsers.DateDebutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateDebut\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateDebutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUsers.DateFinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFin\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateFinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumDroitAcces {
                get {
                    try {
                        return ((int)(this[this.tableUsers.NumDroitAccesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumDroitAcces\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumDroitAccesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumBadge {
                get {
                    try {
                        return ((string)(this[this.tableUsers.NumBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumBadge\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumCode {
                get {
                    try {
                        return ((string)(this[this.tableUsers.NumCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumCode\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NbEmpreintes {
                get {
                    try {
                        return ((int)(this[this.tableUsers.NbEmpreintesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NbEmpreintes\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NbEmpreintesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adresse1 {
                get {
                    try {
                        return ((string)(this[this.tableUsers.Adresse1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Adresse1\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.Adresse1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adresse2 {
                get {
                    try {
                        return ((string)(this[this.tableUsers.Adresse2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Adresse2\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.Adresse2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodePostal {
                get {
                    try {
                        return ((string)(this[this.tableUsers.CodePostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodePostal\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CodePostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ville {
                get {
                    try {
                        return ((string)(this[this.tableUsers.VilleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Ville\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.VilleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tableUsers.TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Telephone\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableUsers.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Mobile\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    try {
                        return ((string)(this[this.tableUsers.EMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'EMail\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreat {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUsers.DateCreatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreat\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateCreatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUsers.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateNaissance {
                get {
                    try {
                        return ((string)(this[this.tableUsers.DateNaissanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateNaissance\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateNaissanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HeureMois {
                get {
                    try {
                        return ((int)(this[this.tableUsers.HeureMoisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'HeureMois\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.HeureMoisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxNormal {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TauxNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxNormal\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TauxNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup1 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TauxSup1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup1\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TauxSup1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup2 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TauxSup2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup2\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TauxSup2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fonction {
                get {
                    try {
                        return ((string)(this[this.tableUsers.FonctionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Fonction\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.FonctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup3 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TauxSup3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup3\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TauxSup3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Sexe {
                get {
                    try {
                        return ((int)(this[this.tableUsers.SexeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Sexe\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.SexeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Civilite {
                get {
                    try {
                        return ((int)(this[this.tableUsers.CiviliteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Civilite\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CiviliteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumCI {
                get {
                    try {
                        return ((string)(this[this.tableUsers.NumCIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumCI\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumSS {
                get {
                    try {
                        return ((string)(this[this.tableUsers.NumSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumSS\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumHoraire {
                get {
                    try {
                        return ((int)(this[this.tableUsers.NumHoraireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumHoraire\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumHoraireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckAutoDeclar {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckAutoDeclarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckAutoDeclar\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckAutoDeclarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBadge {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBadge\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckEmpreinte {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckEmpreinteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckEmpreinte\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckEmpreinteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckPin {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckPinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckPin\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckPinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CodePin {
                get {
                    try {
                        return ((int)(this[this.tableUsers.CodePinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodePin\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CodePinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup0 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TauxSup0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup0\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TauxSup0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeTemps {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TypeTempsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeTemps\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TypeTempsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Modified {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.ModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Modified\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.ModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BadgeEncoded {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.BadgeEncodedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'BadgeEncoded\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.BadgeEncodedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumContrat {
                get {
                    try {
                        return ((int)(this[this.tableUsers.NumContratColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumContrat\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumContratColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeUser {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TypeUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeUser\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TypeUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser1 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.IdUser1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser1\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.IdUser1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser2 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.IdUser2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser2\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.IdUser2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser3 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.IdUser3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser3\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.IdUser3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UpdateLecNow {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.UpdateLecNowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'UpdateLecNow\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.UpdateLecNowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JourRepos1 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.JourRepos1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'JourRepos1\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.JourRepos1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JourRepos2 {
                get {
                    try {
                        return ((int)(this[this.tableUsers.JourRepos2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'JourRepos2\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.JourRepos2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NbJrsCongesAnnuels {
                get {
                    try {
                        return ((int)(this[this.tableUsers.NbJrsCongesAnnuelsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NbJrsCongesAnnuels\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NbJrsCongesAnnuelsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LieuNaiss {
                get {
                    try {
                        return ((string)(this[this.tableUsers.LieuNaissColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LieuNaiss\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.LieuNaissColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateCI {
                get {
                    try {
                        return ((string)(this[this.tableUsers.DateCIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCI\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumPermis {
                get {
                    try {
                        return ((string)(this[this.tableUsers.NumPermisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumPermis\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NumPermisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DatePermis {
                get {
                    try {
                        return ((string)(this[this.tableUsers.DatePermisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DatePermis\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DatePermisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AncienNumBadge {
                get {
                    try {
                        return ((string)(this[this.tableUsers.AncienNumBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'AncienNumBadge\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.AncienNumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeAd {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TypeAdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeAd\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TypeAdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mdp {
                get {
                    try {
                        return ((string)(this[this.tableUsers.MdpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Mdp\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.MdpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string UserLogin {
                get {
                    try {
                        return ((string)(this[this.tableUsers.UserLoginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'UserLogin\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.UserLoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckPointageWeb {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckPointageWebColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckPointageWeb\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckPointageWebColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomService {
                get {
                    try {
                        return ((string)(this[this.tableUsers.NomServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NomService\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.NomServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] BioData {
                get {
                    try {
                        return ((byte[])(this[this.tableUsers.BioDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'BioData\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.BioDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleDroit {
                get {
                    try {
                        return ((string)(this[this.tableUsers.LibelleDroitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LibelleDroit\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.LibelleDroitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableUsers.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Photo\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Motif {
                get {
                    if (this.IsMotifNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUsers.MotifColumn]));
                    }
                }
                set {
                    this[this.tableUsers.MotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleListe {
                get {
                    if (this.IsLibelleListeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableUsers.LibelleListeColumn]));
                    }
                }
                set {
                    this[this.tableUsers.LibelleListeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total {
                get {
                    try {
                        return ((int)(this[this.tableUsers.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Total\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Observations {
                get {
                    try {
                        return ((string)(this[this.tableUsers.ObservationsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Observations\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.ObservationsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFinMichoc {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableUsers.DateFinMichocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFinMichoc\' dans la table \'Users\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsers.DateFinMichocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBlocageJoursRepos {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckBlocageJoursReposColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBlocageJoursRepos\' dans la table \'Users\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckBlocageJoursReposColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckPremierPointage {
                get {
                    try {
                        return ((bool)(this[this.tableUsers.CheckPremierPointageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckPremierPointage\' dans la table \'Users\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableUsers.CheckPremierPointageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMatriculeNull() {
                return this.IsNull(this.tableUsers.MatriculeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMatriculeNull() {
                this[this.tableUsers.MatriculeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableUsers.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableUsers.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableUsers.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableUsers.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumServiceNull() {
                return this.IsNull(this.tableUsers.NumServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumServiceNull() {
                this[this.tableUsers.NumServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelNull() {
                return this.IsNull(this.tableUsers.TelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelNull() {
                this[this.tableUsers.TelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaxNull() {
                return this.IsNull(this.tableUsers.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaxNull() {
                this[this.tableUsers.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlagAutoriseNull() {
                return this.IsNull(this.tableUsers.FlagAutoriseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlagAutoriseNull() {
                this[this.tableUsers.FlagAutoriseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDebutNull() {
                return this.IsNull(this.tableUsers.DateDebutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDebutNull() {
                this[this.tableUsers.DateDebutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinNull() {
                return this.IsNull(this.tableUsers.DateFinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinNull() {
                this[this.tableUsers.DateFinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumDroitAccesNull() {
                return this.IsNull(this.tableUsers.NumDroitAccesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumDroitAccesNull() {
                this[this.tableUsers.NumDroitAccesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumBadgeNull() {
                return this.IsNull(this.tableUsers.NumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumBadgeNull() {
                this[this.tableUsers.NumBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumCodeNull() {
                return this.IsNull(this.tableUsers.NumCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumCodeNull() {
                this[this.tableUsers.NumCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNbEmpreintesNull() {
                return this.IsNull(this.tableUsers.NbEmpreintesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNbEmpreintesNull() {
                this[this.tableUsers.NbEmpreintesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresse1Null() {
                return this.IsNull(this.tableUsers.Adresse1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresse1Null() {
                this[this.tableUsers.Adresse1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresse2Null() {
                return this.IsNull(this.tableUsers.Adresse2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresse2Null() {
                this[this.tableUsers.Adresse2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodePostalNull() {
                return this.IsNull(this.tableUsers.CodePostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodePostalNull() {
                this[this.tableUsers.CodePostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVilleNull() {
                return this.IsNull(this.tableUsers.VilleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVilleNull() {
                this[this.tableUsers.VilleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tableUsers.TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneNull() {
                this[this.tableUsers.TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNull() {
                return this.IsNull(this.tableUsers.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNull() {
                this[this.tableUsers.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailNull() {
                return this.IsNull(this.tableUsers.EMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailNull() {
                this[this.tableUsers.EMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreatNull() {
                return this.IsNull(this.tableUsers.DateCreatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreatNull() {
                this[this.tableUsers.DateCreatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableUsers.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableUsers.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateNaissanceNull() {
                return this.IsNull(this.tableUsers.DateNaissanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNaissanceNull() {
                this[this.tableUsers.DateNaissanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeureMoisNull() {
                return this.IsNull(this.tableUsers.HeureMoisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeureMoisNull() {
                this[this.tableUsers.HeureMoisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxNormalNull() {
                return this.IsNull(this.tableUsers.TauxNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxNormalNull() {
                this[this.tableUsers.TauxNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup1Null() {
                return this.IsNull(this.tableUsers.TauxSup1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup1Null() {
                this[this.tableUsers.TauxSup1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup2Null() {
                return this.IsNull(this.tableUsers.TauxSup2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup2Null() {
                this[this.tableUsers.TauxSup2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFonctionNull() {
                return this.IsNull(this.tableUsers.FonctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFonctionNull() {
                this[this.tableUsers.FonctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup3Null() {
                return this.IsNull(this.tableUsers.TauxSup3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup3Null() {
                this[this.tableUsers.TauxSup3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSexeNull() {
                return this.IsNull(this.tableUsers.SexeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSexeNull() {
                this[this.tableUsers.SexeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCiviliteNull() {
                return this.IsNull(this.tableUsers.CiviliteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCiviliteNull() {
                this[this.tableUsers.CiviliteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumCINull() {
                return this.IsNull(this.tableUsers.NumCIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumCINull() {
                this[this.tableUsers.NumCIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumSSNull() {
                return this.IsNull(this.tableUsers.NumSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumSSNull() {
                this[this.tableUsers.NumSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumHoraireNull() {
                return this.IsNull(this.tableUsers.NumHoraireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumHoraireNull() {
                this[this.tableUsers.NumHoraireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckAutoDeclarNull() {
                return this.IsNull(this.tableUsers.CheckAutoDeclarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckAutoDeclarNull() {
                this[this.tableUsers.CheckAutoDeclarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBadgeNull() {
                return this.IsNull(this.tableUsers.CheckBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBadgeNull() {
                this[this.tableUsers.CheckBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckEmpreinteNull() {
                return this.IsNull(this.tableUsers.CheckEmpreinteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckEmpreinteNull() {
                this[this.tableUsers.CheckEmpreinteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckPinNull() {
                return this.IsNull(this.tableUsers.CheckPinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckPinNull() {
                this[this.tableUsers.CheckPinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodePinNull() {
                return this.IsNull(this.tableUsers.CodePinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodePinNull() {
                this[this.tableUsers.CodePinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup0Null() {
                return this.IsNull(this.tableUsers.TauxSup0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup0Null() {
                this[this.tableUsers.TauxSup0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTempsNull() {
                return this.IsNull(this.tableUsers.TypeTempsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeTempsNull() {
                this[this.tableUsers.TypeTempsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedNull() {
                return this.IsNull(this.tableUsers.ModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedNull() {
                this[this.tableUsers.ModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBadgeEncodedNull() {
                return this.IsNull(this.tableUsers.BadgeEncodedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBadgeEncodedNull() {
                this[this.tableUsers.BadgeEncodedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumContratNull() {
                return this.IsNull(this.tableUsers.NumContratColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumContratNull() {
                this[this.tableUsers.NumContratColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeUserNull() {
                return this.IsNull(this.tableUsers.TypeUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeUserNull() {
                this[this.tableUsers.TypeUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUser1Null() {
                return this.IsNull(this.tableUsers.IdUser1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUser1Null() {
                this[this.tableUsers.IdUser1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUser2Null() {
                return this.IsNull(this.tableUsers.IdUser2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUser2Null() {
                this[this.tableUsers.IdUser2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUser3Null() {
                return this.IsNull(this.tableUsers.IdUser3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUser3Null() {
                this[this.tableUsers.IdUser3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateLecNowNull() {
                return this.IsNull(this.tableUsers.UpdateLecNowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateLecNowNull() {
                this[this.tableUsers.UpdateLecNowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJourRepos1Null() {
                return this.IsNull(this.tableUsers.JourRepos1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJourRepos1Null() {
                this[this.tableUsers.JourRepos1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJourRepos2Null() {
                return this.IsNull(this.tableUsers.JourRepos2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJourRepos2Null() {
                this[this.tableUsers.JourRepos2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNbJrsCongesAnnuelsNull() {
                return this.IsNull(this.tableUsers.NbJrsCongesAnnuelsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNbJrsCongesAnnuelsNull() {
                this[this.tableUsers.NbJrsCongesAnnuelsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLieuNaissNull() {
                return this.IsNull(this.tableUsers.LieuNaissColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLieuNaissNull() {
                this[this.tableUsers.LieuNaissColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCINull() {
                return this.IsNull(this.tableUsers.DateCIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCINull() {
                this[this.tableUsers.DateCIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumPermisNull() {
                return this.IsNull(this.tableUsers.NumPermisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumPermisNull() {
                this[this.tableUsers.NumPermisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDatePermisNull() {
                return this.IsNull(this.tableUsers.DatePermisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDatePermisNull() {
                this[this.tableUsers.DatePermisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAncienNumBadgeNull() {
                return this.IsNull(this.tableUsers.AncienNumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAncienNumBadgeNull() {
                this[this.tableUsers.AncienNumBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeAdNull() {
                return this.IsNull(this.tableUsers.TypeAdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeAdNull() {
                this[this.tableUsers.TypeAdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMdpNull() {
                return this.IsNull(this.tableUsers.MdpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMdpNull() {
                this[this.tableUsers.MdpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUserLoginNull() {
                return this.IsNull(this.tableUsers.UserLoginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUserLoginNull() {
                this[this.tableUsers.UserLoginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckPointageWebNull() {
                return this.IsNull(this.tableUsers.CheckPointageWebColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckPointageWebNull() {
                this[this.tableUsers.CheckPointageWebColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomServiceNull() {
                return this.IsNull(this.tableUsers.NomServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomServiceNull() {
                this[this.tableUsers.NomServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBioDataNull() {
                return this.IsNull(this.tableUsers.BioDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBioDataNull() {
                this[this.tableUsers.BioDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleDroitNull() {
                return this.IsNull(this.tableUsers.LibelleDroitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleDroitNull() {
                this[this.tableUsers.LibelleDroitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableUsers.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoNull() {
                this[this.tableUsers.PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotifNull() {
                return this.IsNull(this.tableUsers.MotifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotifNull() {
                this[this.tableUsers.MotifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleListeNull() {
                return this.IsNull(this.tableUsers.LibelleListeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleListeNull() {
                this[this.tableUsers.LibelleListeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableUsers.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tableUsers.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObservationsNull() {
                return this.IsNull(this.tableUsers.ObservationsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObservationsNull() {
                this[this.tableUsers.ObservationsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinMichocNull() {
                return this.IsNull(this.tableUsers.DateFinMichocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinMichocNull() {
                this[this.tableUsers.DateFinMichocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBlocageJoursReposNull() {
                return this.IsNull(this.tableUsers.CheckBlocageJoursReposColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBlocageJoursReposNull() {
                this[this.tableUsers.CheckBlocageJoursReposColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckPremierPointageNull() {
                return this.IsNull(this.tableUsers.CheckPremierPointageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckPremierPointageNull() {
                this[this.tableUsers.CheckPremierPointageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class DroitsRow : global::System.Data.DataRow {
            
            private DroitsDataTable tableDroits;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal DroitsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableDroits = ((DroitsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumDroit {
                get {
                    return ((int)(this[this.tableDroits.NumDroitColumn]));
                }
                set {
                    this[this.tableDroits.NumDroitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleDroit {
                get {
                    try {
                        return ((string)(this[this.tableDroits.LibelleDroitColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LibelleDroit\' dans la table \'Droits\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableDroits.LibelleDroitColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IdPenalite {
                get {
                    try {
                        return ((decimal)(this[this.tableDroits.IdPenaliteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdPenalite\' dans la table \'Droits\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableDroits.IdPenaliteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal IdBonification {
                get {
                    try {
                        return ((decimal)(this[this.tableDroits.IdBonificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdBonification\' dans la table \'Droits\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableDroits.IdBonificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleDroitNull() {
                return this.IsNull(this.tableDroits.LibelleDroitColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleDroitNull() {
                this[this.tableDroits.LibelleDroitColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdPenaliteNull() {
                return this.IsNull(this.tableDroits.IdPenaliteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdPenaliteNull() {
                this[this.tableDroits.IdPenaliteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdBonificationNull() {
                return this.IsNull(this.tableDroits.IdBonificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdBonificationNull() {
                this[this.tableDroits.IdBonificationColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class BadgesRow : global::System.Data.DataRow {
            
            private BadgesDataTable tableBadges;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal BadgesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableBadges = ((BadgesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumBadge {
                get {
                    try {
                        return ((string)(this[this.tableBadges.NumBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumBadge\' dans la table \'Badges\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableBadges.NumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FlagAutorise {
                get {
                    try {
                        return ((string)(this[this.tableBadges.FlagAutoriseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'FlagAutorise\' dans la table \'Badges\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableBadges.FlagAutoriseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    try {
                        return ((string)(this[this.tableBadges.NomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Nom\' dans la table \'Badges\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableBadges.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    try {
                        return ((string)(this[this.tableBadges.PrenomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Prenom\' dans la table \'Badges\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableBadges.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Matricule {
                get {
                    try {
                        return ((string)(this[this.tableBadges.MatriculeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Matricule\' dans la table \'Badges\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableBadges.MatriculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total {
                get {
                    try {
                        return ((int)(this[this.tableBadges.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Total\' dans la table \'Badges\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableBadges.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumBadgeNull() {
                return this.IsNull(this.tableBadges.NumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumBadgeNull() {
                this[this.tableBadges.NumBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlagAutoriseNull() {
                return this.IsNull(this.tableBadges.FlagAutoriseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlagAutoriseNull() {
                this[this.tableBadges.FlagAutoriseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableBadges.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableBadges.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableBadges.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableBadges.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMatriculeNull() {
                return this.IsNull(this.tableBadges.MatriculeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMatriculeNull() {
                this[this.tableBadges.MatriculeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableBadges.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tableBadges.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ListesRow : global::System.Data.DataRow {
            
            private ListesDataTable tableListes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ListesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListes = ((ListesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Num {
                get {
                    return ((int)(this[this.tableListes.NumColumn]));
                }
                set {
                    this[this.tableListes.NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Libelle {
                get {
                    try {
                        return ((string)(this[this.tableListes.LibelleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Libelle\' dans la table \'Listes\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListes.LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Abrev {
                get {
                    try {
                        return ((string)(this[this.tableListes.AbrevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Abrev\' dans la table \'Listes\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListes.AbrevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableListes.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Type\' dans la table \'Listes\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListes.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleNull() {
                return this.IsNull(this.tableListes.LibelleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleNull() {
                this[this.tableListes.LibelleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbrevNull() {
                return this.IsNull(this.tableListes.AbrevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbrevNull() {
                this[this.tableListes.AbrevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableListes.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableListes.TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ListesUsersRow : global::System.Data.DataRow {
            
            private ListesUsersDataTable tableListesUsers;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ListesUsersRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableListesUsers = ((ListesUsersDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableListesUsers.IdColumn]));
                }
                set {
                    this[this.tableListesUsers.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumListe {
                get {
                    try {
                        return ((int)(this[this.tableListesUsers.NumListeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumListe\' dans la table \'ListesUsers\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListesUsers.NumListeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser {
                get {
                    try {
                        return ((int)(this[this.tableListesUsers.IdUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser\' dans la table \'ListesUsers\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListesUsers.IdUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdMotif {
                get {
                    try {
                        return ((int)(this[this.tableListesUsers.IdMotifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdMotif\' dans la table \'ListesUsers\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListesUsers.IdMotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Ordre {
                get {
                    try {
                        return ((int)(this[this.tableListesUsers.OrdreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Ordre\' dans la table \'ListesUsers\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableListesUsers.OrdreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumListeNull() {
                return this.IsNull(this.tableListesUsers.NumListeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumListeNull() {
                this[this.tableListesUsers.NumListeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUserNull() {
                return this.IsNull(this.tableListesUsers.IdUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUserNull() {
                this[this.tableListesUsers.IdUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdMotifNull() {
                return this.IsNull(this.tableListesUsers.IdMotifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdMotifNull() {
                this[this.tableListesUsers.IdMotifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOrdreNull() {
                return this.IsNull(this.tableListesUsers.OrdreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOrdreNull() {
                this[this.tableListesUsers.OrdreColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ServicesRow : global::System.Data.DataRow {
            
            private ServicesDataTable tableServices;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ServicesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableServices = ((ServicesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumService {
                get {
                    return ((int)(this[this.tableServices.NumServiceColumn]));
                }
                set {
                    this[this.tableServices.NumServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomService {
                get {
                    try {
                        return ((string)(this[this.tableServices.NomServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NomService\' dans la table \'Services\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableServices.NomServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumDroitAcces {
                get {
                    try {
                        return ((int)(this[this.tableServices.NumDroitAccesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumDroitAcces\' dans la table \'Services\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableServices.NumDroitAccesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumServicePere {
                get {
                    try {
                        return ((int)(this[this.tableServices.NumServicePereColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumServicePere\' dans la table \'Services\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableServices.NumServicePereColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumListSignataires {
                get {
                    try {
                        return ((int)(this[this.tableServices.NumListSignatairesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumListSignataires\' dans la table \'Services\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableServices.NumListSignatairesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomServiceNull() {
                return this.IsNull(this.tableServices.NomServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomServiceNull() {
                this[this.tableServices.NomServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumDroitAccesNull() {
                return this.IsNull(this.tableServices.NumDroitAccesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumDroitAccesNull() {
                this[this.tableServices.NumDroitAccesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumServicePereNull() {
                return this.IsNull(this.tableServices.NumServicePereColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumServicePereNull() {
                this[this.tableServices.NumServicePereColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumListSignatairesNull() {
                return this.IsNull(this.tableServices.NumListSignatairesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumListSignatairesNull() {
                this[this.tableServices.NumListSignatairesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class UsersBioDataRow : global::System.Data.DataRow {
            
            private UsersBioDataDataTable tableUsersBioData;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal UsersBioDataRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableUsersBioData = ((UsersBioDataDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Matricule {
                get {
                    return ((string)(this[this.tableUsersBioData.MatriculeColumn]));
                }
                set {
                    this[this.tableUsersBioData.MatriculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] BioData {
                get {
                    try {
                        return ((byte[])(this[this.tableUsersBioData.BioDataColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'BioData\' dans la table \'UsersBioData\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsersBioData.BioDataColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableUsersBioData.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Photo\' dans la table \'UsersBioData\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableUsersBioData.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBioDataNull() {
                return this.IsNull(this.tableUsersBioData.BioDataColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBioDataNull() {
                this[this.tableUsersBioData.BioDataColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableUsersBioData.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoNull() {
                this[this.tableUsersBioData.PhotoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class OperateursRow : global::System.Data.DataRow {
            
            private OperateursDataTable tableOperateurs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal OperateursRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableOperateurs = ((OperateursDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableOperateurs.IDColumn]));
                }
                set {
                    this[this.tableOperateurs.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.NomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Nom\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.PrenomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Prenom\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperateurs.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreation\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IDCreateur {
                get {
                    try {
                        return ((int)(this[this.tableOperateurs.IDCreateurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IDCreateur\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.IDCreateurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Debut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperateurs.DebutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Debut\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.DebutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Fin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableOperateurs.FinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Fin\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.FinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Profil {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.ProfilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Profil\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.ProfilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Login {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.LoginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Login\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.LoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MotPasse {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.MotPasseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'MotPasse\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.MotPasseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string RefEmpreinte {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.RefEmpreinteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'RefEmpreinte\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.RefEmpreinteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomService {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.NomServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NomService\' dans la table \'Operateurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableOperateurs.NomServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MenusAutorises {
                get {
                    try {
                        return ((string)(this[this.tableOperateurs.MenusAutorisesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'MenusAutorises\' dans la table \'Operateurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableOperateurs.MenusAutorisesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableOperateurs.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableOperateurs.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableOperateurs.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableOperateurs.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableOperateurs.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableOperateurs.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIDCreateurNull() {
                return this.IsNull(this.tableOperateurs.IDCreateurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIDCreateurNull() {
                this[this.tableOperateurs.IDCreateurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDebutNull() {
                return this.IsNull(this.tableOperateurs.DebutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDebutNull() {
                this[this.tableOperateurs.DebutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFinNull() {
                return this.IsNull(this.tableOperateurs.FinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFinNull() {
                this[this.tableOperateurs.FinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfilNull() {
                return this.IsNull(this.tableOperateurs.ProfilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfilNull() {
                this[this.tableOperateurs.ProfilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoginNull() {
                return this.IsNull(this.tableOperateurs.LoginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoginNull() {
                this[this.tableOperateurs.LoginColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotPasseNull() {
                return this.IsNull(this.tableOperateurs.MotPasseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotPasseNull() {
                this[this.tableOperateurs.MotPasseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRefEmpreinteNull() {
                return this.IsNull(this.tableOperateurs.RefEmpreinteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRefEmpreinteNull() {
                this[this.tableOperateurs.RefEmpreinteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomServiceNull() {
                return this.IsNull(this.tableOperateurs.NomServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomServiceNull() {
                this[this.tableOperateurs.NomServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMenusAutorisesNull() {
                return this.IsNull(this.tableOperateurs.MenusAutorisesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMenusAutorisesNull() {
                this[this.tableOperateurs.MenusAutorisesColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LecteursRow : global::System.Data.DataRow {
            
            private LecteursDataTable tableLecteurs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LecteursRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLecteurs = ((LecteursDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomLecteur {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.NomLecteurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NomLecteur\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.NomLecteurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Com {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.ComColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Com\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.ComColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Adresse {
                get {
                    return ((int)(this[this.tableLecteurs.AdresseColumn]));
                }
                set {
                    this[this.tableLecteurs.AdresseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Vitesse {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.VitesseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Vitesse\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.VitesseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumSerie {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.NumSerieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumSerie\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.NumSerieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Version {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.VersionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Version\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.VersionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Type {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Type\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int APB {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.APBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'APB\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.APBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckRights {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckRightsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckRights\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckRightsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateLastEvent {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLecteurs.DateLastEventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateLastEvent\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.DateLastEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdresseIP {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.AdresseIPColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'AdresseIP\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.AdresseIPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Passerelle {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.PasserelleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Passerelle\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.PasserelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Masque {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.MasqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Masque\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.MasqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Empreintes {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.EmpreintesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Empreintes\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.EmpreintesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Badge {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.BadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Badge\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.BadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Code {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Code\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Mode {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.ModeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Mode\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.ModeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Dialog {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.DialogColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Dialog\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.DialogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Etat {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.EtatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Etat\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.EtatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DureeSireneSec {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.DureeSireneSecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DureeSireneSec\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.DureeSireneSecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumHoraireSirene {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.NumHoraireSireneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumHoraireSirene\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.NumHoraireSireneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool SireneSurRelais {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.SireneSurRelaisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'SireneSurRelais\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.SireneSurRelaisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NbMaxUsers {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.NbMaxUsersColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NbMaxUsers\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.NbMaxUsersColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EntreeSortie {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.EntreeSortieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'EntreeSortie\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.EntreeSortieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PortSocket {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.PortSocketColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'PortSocket\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.PortSocketColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBipTouches {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBipTouchesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBipTouches\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBipTouchesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzzer {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzzerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzzer\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzzerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckCodeAcces {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckCodeAccesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckCodeAcces\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckCodeAccesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckCodeAdmin {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckCodeAdminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckCodeAdmin\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckCodeAdminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckDateValidite {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckDateValiditeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckDateValidite\' dans la table \'Lecteurs\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckDateValiditeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckDiplayDateHour {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckDiplayDateHourColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckDiplayDateHour\' dans la table \'Lecteurs\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckDiplayDateHourColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckDisplayName {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckDisplayNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckDisplayName\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckDisplayNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHeureEte {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHeureEteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHeureEte\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHeureEteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHistoActiver {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHistoActiverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHistoActiver\' dans la table \'Lecteurs\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHistoActiverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHistoAlarmes {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHistoAlarmesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHistoAlarmes\' dans la table \'Lecteurs\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHistoAlarmesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHistoAutre {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHistoAutreColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHistoAutre\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHistoAutreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHistoEnroll {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHistoEnrollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHistoEnroll\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHistoEnrollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHistoIdentif {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHistoIdentifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHistoIdentif\' dans la table \'Lecteurs\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHistoIdentifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeAcces {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.CodeAccesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodeAcces\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CodeAccesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeAdmin {
                get {
                    try {
                        return ((string)(this[this.tableLecteurs.CodeAdminColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodeAdmin\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CodeAdminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Langue {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.LangueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Langue\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.LangueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ModeAcces {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.ModeAccesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ModeAcces\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.ModeAccesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Veille {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.VeilleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Veille\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.VeilleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtIdentOk {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtIdentOkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtIdentOk\' dans la table \'Lecteurs\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtIdentOkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtIdentKo {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtIdentKoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtIdentKo\' dans la table \'Lecteurs\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtIdentKoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtEnrol {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtEnrolColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtEnrol\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtEnrolColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtFingPosKo {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtFingPosKoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtFingPosKo\' dans la table \'Lecteurs\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtFingPosKoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtRdCscOk {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtRdCscOkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtRdCscOk\' dans la table \'Lecteurs\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtRdCscOkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtRdCscKo {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtRdCscKoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtRdCscKo\' dans la table \'Lecteurs\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtRdCscKoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBuzEvtOther {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckBuzEvtOtherColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBuzEvtOther\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckBuzEvtOtherColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckHistoIdentifKo {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckHistoIdentifKoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckHistoIdentifKo\' dans la table \'Lecteurs\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckHistoIdentifKoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckDisplayCode {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckDisplayCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckDisplayCode\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckDisplayCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TmoCode {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.TmoCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TmoCode\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.TmoCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int DelaiFinCourseSec {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.DelaiFinCourseSecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DelaiFinCourseSec\' dans la table \'Lecteurs\' est DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableLecteurs.DelaiFinCourseSecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckLogCsc {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckLogCscColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckLogCsc\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckLogCscColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckFinDeCourse {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.CheckFinDeCourseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckFinDeCourse\' dans la table \'Lecteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableLecteurs.CheckFinDeCourseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExpAlarmeLec {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.ExpAlarmeLecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ExpAlarmeLec\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.ExpAlarmeLecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int LecGtCa {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.LecGtCaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LecGtCa\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.LecGtCaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumLastEvent {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.NumLastEventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumLastEvent\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.NumLastEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdLastEventSap {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.IdLastEventSapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdLastEventSap\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.IdLastEventSapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool MajDateLec {
                get {
                    try {
                        return ((bool)(this[this.tableLecteurs.MajDateLecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'MajDateLec\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.MajDateLecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdLastEventApb {
                get {
                    try {
                        return ((int)(this[this.tableLecteurs.IdLastEventApbColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdLastEventApb\' dans la table \'Lecteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLecteurs.IdLastEventApbColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomLecteurNull() {
                return this.IsNull(this.tableLecteurs.NomLecteurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomLecteurNull() {
                this[this.tableLecteurs.NomLecteurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsComNull() {
                return this.IsNull(this.tableLecteurs.ComColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetComNull() {
                this[this.tableLecteurs.ComColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVitesseNull() {
                return this.IsNull(this.tableLecteurs.VitesseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVitesseNull() {
                this[this.tableLecteurs.VitesseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumSerieNull() {
                return this.IsNull(this.tableLecteurs.NumSerieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumSerieNull() {
                this[this.tableLecteurs.NumSerieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionNull() {
                return this.IsNull(this.tableLecteurs.VersionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionNull() {
                this[this.tableLecteurs.VersionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLecteurs.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableLecteurs.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAPBNull() {
                return this.IsNull(this.tableLecteurs.APBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAPBNull() {
                this[this.tableLecteurs.APBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckRightsNull() {
                return this.IsNull(this.tableLecteurs.CheckRightsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckRightsNull() {
                this[this.tableLecteurs.CheckRightsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateLastEventNull() {
                return this.IsNull(this.tableLecteurs.DateLastEventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateLastEventNull() {
                this[this.tableLecteurs.DateLastEventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresseIPNull() {
                return this.IsNull(this.tableLecteurs.AdresseIPColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresseIPNull() {
                this[this.tableLecteurs.AdresseIPColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPasserelleNull() {
                return this.IsNull(this.tableLecteurs.PasserelleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPasserelleNull() {
                this[this.tableLecteurs.PasserelleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMasqueNull() {
                return this.IsNull(this.tableLecteurs.MasqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMasqueNull() {
                this[this.tableLecteurs.MasqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEmpreintesNull() {
                return this.IsNull(this.tableLecteurs.EmpreintesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEmpreintesNull() {
                this[this.tableLecteurs.EmpreintesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBadgeNull() {
                return this.IsNull(this.tableLecteurs.BadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBadgeNull() {
                this[this.tableLecteurs.BadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableLecteurs.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tableLecteurs.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModeNull() {
                return this.IsNull(this.tableLecteurs.ModeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModeNull() {
                this[this.tableLecteurs.ModeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDialogNull() {
                return this.IsNull(this.tableLecteurs.DialogColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDialogNull() {
                this[this.tableLecteurs.DialogColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEtatNull() {
                return this.IsNull(this.tableLecteurs.EtatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEtatNull() {
                this[this.tableLecteurs.EtatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDureeSireneSecNull() {
                return this.IsNull(this.tableLecteurs.DureeSireneSecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDureeSireneSecNull() {
                this[this.tableLecteurs.DureeSireneSecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumHoraireSireneNull() {
                return this.IsNull(this.tableLecteurs.NumHoraireSireneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumHoraireSireneNull() {
                this[this.tableLecteurs.NumHoraireSireneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSireneSurRelaisNull() {
                return this.IsNull(this.tableLecteurs.SireneSurRelaisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSireneSurRelaisNull() {
                this[this.tableLecteurs.SireneSurRelaisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNbMaxUsersNull() {
                return this.IsNull(this.tableLecteurs.NbMaxUsersColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNbMaxUsersNull() {
                this[this.tableLecteurs.NbMaxUsersColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEntreeSortieNull() {
                return this.IsNull(this.tableLecteurs.EntreeSortieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEntreeSortieNull() {
                this[this.tableLecteurs.EntreeSortieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPortSocketNull() {
                return this.IsNull(this.tableLecteurs.PortSocketColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPortSocketNull() {
                this[this.tableLecteurs.PortSocketColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBipTouchesNull() {
                return this.IsNull(this.tableLecteurs.CheckBipTouchesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBipTouchesNull() {
                this[this.tableLecteurs.CheckBipTouchesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzzerNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzzerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzzerNull() {
                this[this.tableLecteurs.CheckBuzzerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckCodeAccesNull() {
                return this.IsNull(this.tableLecteurs.CheckCodeAccesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckCodeAccesNull() {
                this[this.tableLecteurs.CheckCodeAccesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckCodeAdminNull() {
                return this.IsNull(this.tableLecteurs.CheckCodeAdminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckCodeAdminNull() {
                this[this.tableLecteurs.CheckCodeAdminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckDateValiditeNull() {
                return this.IsNull(this.tableLecteurs.CheckDateValiditeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckDateValiditeNull() {
                this[this.tableLecteurs.CheckDateValiditeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckDiplayDateHourNull() {
                return this.IsNull(this.tableLecteurs.CheckDiplayDateHourColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckDiplayDateHourNull() {
                this[this.tableLecteurs.CheckDiplayDateHourColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckDisplayNameNull() {
                return this.IsNull(this.tableLecteurs.CheckDisplayNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckDisplayNameNull() {
                this[this.tableLecteurs.CheckDisplayNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHeureEteNull() {
                return this.IsNull(this.tableLecteurs.CheckHeureEteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHeureEteNull() {
                this[this.tableLecteurs.CheckHeureEteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHistoActiverNull() {
                return this.IsNull(this.tableLecteurs.CheckHistoActiverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHistoActiverNull() {
                this[this.tableLecteurs.CheckHistoActiverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHistoAlarmesNull() {
                return this.IsNull(this.tableLecteurs.CheckHistoAlarmesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHistoAlarmesNull() {
                this[this.tableLecteurs.CheckHistoAlarmesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHistoAutreNull() {
                return this.IsNull(this.tableLecteurs.CheckHistoAutreColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHistoAutreNull() {
                this[this.tableLecteurs.CheckHistoAutreColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHistoEnrollNull() {
                return this.IsNull(this.tableLecteurs.CheckHistoEnrollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHistoEnrollNull() {
                this[this.tableLecteurs.CheckHistoEnrollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHistoIdentifNull() {
                return this.IsNull(this.tableLecteurs.CheckHistoIdentifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHistoIdentifNull() {
                this[this.tableLecteurs.CheckHistoIdentifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeAccesNull() {
                return this.IsNull(this.tableLecteurs.CodeAccesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeAccesNull() {
                this[this.tableLecteurs.CodeAccesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeAdminNull() {
                return this.IsNull(this.tableLecteurs.CodeAdminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeAdminNull() {
                this[this.tableLecteurs.CodeAdminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLangueNull() {
                return this.IsNull(this.tableLecteurs.LangueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLangueNull() {
                this[this.tableLecteurs.LangueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModeAccesNull() {
                return this.IsNull(this.tableLecteurs.ModeAccesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModeAccesNull() {
                this[this.tableLecteurs.ModeAccesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVeilleNull() {
                return this.IsNull(this.tableLecteurs.VeilleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVeilleNull() {
                this[this.tableLecteurs.VeilleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtIdentOkNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtIdentOkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtIdentOkNull() {
                this[this.tableLecteurs.CheckBuzEvtIdentOkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtIdentKoNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtIdentKoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtIdentKoNull() {
                this[this.tableLecteurs.CheckBuzEvtIdentKoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtEnrolNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtEnrolColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtEnrolNull() {
                this[this.tableLecteurs.CheckBuzEvtEnrolColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtFingPosKoNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtFingPosKoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtFingPosKoNull() {
                this[this.tableLecteurs.CheckBuzEvtFingPosKoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtRdCscOkNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtRdCscOkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtRdCscOkNull() {
                this[this.tableLecteurs.CheckBuzEvtRdCscOkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtRdCscKoNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtRdCscKoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtRdCscKoNull() {
                this[this.tableLecteurs.CheckBuzEvtRdCscKoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBuzEvtOtherNull() {
                return this.IsNull(this.tableLecteurs.CheckBuzEvtOtherColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBuzEvtOtherNull() {
                this[this.tableLecteurs.CheckBuzEvtOtherColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckHistoIdentifKoNull() {
                return this.IsNull(this.tableLecteurs.CheckHistoIdentifKoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckHistoIdentifKoNull() {
                this[this.tableLecteurs.CheckHistoIdentifKoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckDisplayCodeNull() {
                return this.IsNull(this.tableLecteurs.CheckDisplayCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckDisplayCodeNull() {
                this[this.tableLecteurs.CheckDisplayCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTmoCodeNull() {
                return this.IsNull(this.tableLecteurs.TmoCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTmoCodeNull() {
                this[this.tableLecteurs.TmoCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelaiFinCourseSecNull() {
                return this.IsNull(this.tableLecteurs.DelaiFinCourseSecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelaiFinCourseSecNull() {
                this[this.tableLecteurs.DelaiFinCourseSecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckLogCscNull() {
                return this.IsNull(this.tableLecteurs.CheckLogCscColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckLogCscNull() {
                this[this.tableLecteurs.CheckLogCscColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckFinDeCourseNull() {
                return this.IsNull(this.tableLecteurs.CheckFinDeCourseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckFinDeCourseNull() {
                this[this.tableLecteurs.CheckFinDeCourseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExpAlarmeLecNull() {
                return this.IsNull(this.tableLecteurs.ExpAlarmeLecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExpAlarmeLecNull() {
                this[this.tableLecteurs.ExpAlarmeLecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLecGtCaNull() {
                return this.IsNull(this.tableLecteurs.LecGtCaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLecGtCaNull() {
                this[this.tableLecteurs.LecGtCaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumLastEventNull() {
                return this.IsNull(this.tableLecteurs.NumLastEventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumLastEventNull() {
                this[this.tableLecteurs.NumLastEventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdLastEventSapNull() {
                return this.IsNull(this.tableLecteurs.IdLastEventSapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdLastEventSapNull() {
                this[this.tableLecteurs.IdLastEventSapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMajDateLecNull() {
                return this.IsNull(this.tableLecteurs.MajDateLecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMajDateLecNull() {
                this[this.tableLecteurs.MajDateLecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdLastEventApbNull() {
                return this.IsNull(this.tableLecteurs.IdLastEventApbColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdLastEventApbNull() {
                this[this.tableLecteurs.IdLastEventApbColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class EventsRow : global::System.Data.DataRow {
            
            private EventsDataTable tableEvents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal EventsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableEvents = ((EventsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumLecteur {
                get {
                    try {
                        return ((int)(this[this.tableEvents.NumLecteurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumLecteur\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.NumLecteurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Instant {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableEvents.InstantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Instant\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.InstantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumEvent {
                get {
                    try {
                        return ((int)(this[this.tableEvents.NumEventColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumEvent\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.NumEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableEvents.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Type\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Sous_Type {
                get {
                    try {
                        return ((int)(this[this.tableEvents.Sous_TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Sous_Type\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.Sous_TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Reference {
                get {
                    if (this.IsReferenceNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.ReferenceColumn]));
                    }
                }
                set {
                    this[this.tableEvents.ReferenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Traite {
                get {
                    try {
                        return ((bool)(this[this.tableEvents.TraiteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Traite\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.TraiteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int EntreeSortie {
                get {
                    try {
                        return ((int)(this[this.tableEvents.EntreeSortieColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'EntreeSortie\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.EntreeSortieColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Valide {
                get {
                    try {
                        return ((bool)(this[this.tableEvents.ValideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Valide\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.ValideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Code {
                get {
                    if (this.IsCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.CodeColumn]));
                    }
                }
                set {
                    this[this.tableEvents.CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumAgrement {
                get {
                    if (this.IsNumAgrementNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.NumAgrementColumn]));
                    }
                }
                set {
                    this[this.tableEvents.NumAgrementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeRefus {
                get {
                    if (this.IsCodeRefusNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.CodeRefusColumn]));
                    }
                }
                set {
                    this[this.tableEvents.CodeRefusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatriculeAdmin {
                get {
                    if (this.IsMatriculeAdminNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.MatriculeAdminColumn]));
                    }
                }
                set {
                    this[this.tableEvents.MatriculeAdminColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumTaxi {
                get {
                    if (this.IsNumTaxiNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.NumTaxiColumn]));
                    }
                }
                set {
                    this[this.tableEvents.NumTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeTaxi {
                get {
                    try {
                        return ((int)(this[this.tableEvents.TypeTaxiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeTaxi\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.TypeTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdEvent {
                get {
                    return ((int)(this[this.tableEvents.IdEventColumn]));
                }
                set {
                    this[this.tableEvents.IdEventColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomAgent {
                get {
                    if (this.IsNomAgentNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableEvents.NomAgentColumn]));
                    }
                }
                set {
                    this[this.tableEvents.NomAgentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrenomAgent {
                get {
                    if (this.IsPrenomAgentNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.PrenomAgentColumn]));
                    }
                }
                set {
                    this[this.tableEvents.PrenomAgentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    if (this.IsNomNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.NomColumn]));
                    }
                }
                set {
                    this[this.tableEvents.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    if (this.IsPrenomNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.PrenomColumn]));
                    }
                }
                set {
                    this[this.tableEvents.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleTypeTaxi {
                get {
                    if (this.IsLibelleTypeTaxiNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.LibelleTypeTaxiColumn]));
                    }
                }
                set {
                    this[this.tableEvents.LibelleTypeTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleCode {
                get {
                    if (this.IsLibelleCodeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.LibelleCodeColumn]));
                    }
                }
                set {
                    this[this.tableEvents.LibelleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeCode {
                get {
                    try {
                        return ((int)(this[this.tableEvents.TypeCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeCode\' dans la table \'Events\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableEvents.TypeCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomLecteur {
                get {
                    if (this.IsNomLecteurNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableEvents.NomLecteurColumn]));
                    }
                }
                set {
                    this[this.tableEvents.NomLecteurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumBadge {
                get {
                    if (this.IsNumBadgeNull()) {
                        return null;
                    }
                    else {
                        return ((string)(this[this.tableEvents.NumBadgeColumn]));
                    }
                }
                set {
                    this[this.tableEvents.NumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Adresse {
                get {
                    return ((int)(this[this.tableEvents.AdresseColumn]));
                }
                set {
                    this[this.tableEvents.AdresseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Plaque {
                get {
                    if (this.IsPlaqueNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableEvents.PlaqueColumn]));
                    }
                }
                set {
                    this[this.tableEvents.PlaqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumLecteurNull() {
                return this.IsNull(this.tableEvents.NumLecteurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumLecteurNull() {
                this[this.tableEvents.NumLecteurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstantNull() {
                return this.IsNull(this.tableEvents.InstantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstantNull() {
                this[this.tableEvents.InstantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumEventNull() {
                return this.IsNull(this.tableEvents.NumEventColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumEventNull() {
                this[this.tableEvents.NumEventColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableEvents.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableEvents.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSous_TypeNull() {
                return this.IsNull(this.tableEvents.Sous_TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSous_TypeNull() {
                this[this.tableEvents.Sous_TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsReferenceNull() {
                return this.IsNull(this.tableEvents.ReferenceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetReferenceNull() {
                this[this.tableEvents.ReferenceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTraiteNull() {
                return this.IsNull(this.tableEvents.TraiteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTraiteNull() {
                this[this.tableEvents.TraiteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEntreeSortieNull() {
                return this.IsNull(this.tableEvents.EntreeSortieColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEntreeSortieNull() {
                this[this.tableEvents.EntreeSortieColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValideNull() {
                return this.IsNull(this.tableEvents.ValideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValideNull() {
                this[this.tableEvents.ValideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeNull() {
                return this.IsNull(this.tableEvents.CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeNull() {
                this[this.tableEvents.CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumAgrementNull() {
                return this.IsNull(this.tableEvents.NumAgrementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumAgrementNull() {
                this[this.tableEvents.NumAgrementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeRefusNull() {
                return this.IsNull(this.tableEvents.CodeRefusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeRefusNull() {
                this[this.tableEvents.CodeRefusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMatriculeAdminNull() {
                return this.IsNull(this.tableEvents.MatriculeAdminColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMatriculeAdminNull() {
                this[this.tableEvents.MatriculeAdminColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumTaxiNull() {
                return this.IsNull(this.tableEvents.NumTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumTaxiNull() {
                this[this.tableEvents.NumTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTaxiNull() {
                return this.IsNull(this.tableEvents.TypeTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeTaxiNull() {
                this[this.tableEvents.TypeTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomAgentNull() {
                return this.IsNull(this.tableEvents.NomAgentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomAgentNull() {
                this[this.tableEvents.NomAgentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomAgentNull() {
                return this.IsNull(this.tableEvents.PrenomAgentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomAgentNull() {
                this[this.tableEvents.PrenomAgentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableEvents.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableEvents.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableEvents.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableEvents.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleTypeTaxiNull() {
                return this.IsNull(this.tableEvents.LibelleTypeTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleTypeTaxiNull() {
                this[this.tableEvents.LibelleTypeTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleCodeNull() {
                return this.IsNull(this.tableEvents.LibelleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleCodeNull() {
                this[this.tableEvents.LibelleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeCodeNull() {
                return this.IsNull(this.tableEvents.TypeCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeCodeNull() {
                this[this.tableEvents.TypeCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomLecteurNull() {
                return this.IsNull(this.tableEvents.NomLecteurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomLecteurNull() {
                this[this.tableEvents.NomLecteurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumBadgeNull() {
                return this.IsNull(this.tableEvents.NumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumBadgeNull() {
                this[this.tableEvents.NumBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaqueNull() {
                return this.IsNull(this.tableEvents.PlaqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaqueNull() {
                this[this.tableEvents.PlaqueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class TypeTaxiRow : global::System.Data.DataRow {
            
            private TypeTaxiDataTable tableTypeTaxi;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal TypeTaxiRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTypeTaxi = ((TypeTaxiDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Num {
                get {
                    try {
                        return ((int)(this[this.tableTypeTaxi.NumColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Num\' dans la table \'TypeTaxi\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableTypeTaxi.NumColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Libelle {
                get {
                    try {
                        return ((string)(this[this.tableTypeTaxi.LibelleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Libelle\' dans la table \'TypeTaxi\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableTypeTaxi.LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumNull() {
                return this.IsNull(this.tableTypeTaxi.NumColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumNull() {
                this[this.tableTypeTaxi.NumColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleNull() {
                return this.IsNull(this.tableTypeTaxi.LibelleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleNull() {
                this[this.tableTypeTaxi.LibelleColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ControleUserRow : global::System.Data.DataRow {
            
            private ControleUserDataTable tableControleUser;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ControleUserRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableControleUser = ((ControleUserDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableControleUser.IdColumn]));
                }
                set {
                    this[this.tableControleUser.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableControleUser.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreation\' dans la table \'ControleUser\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableControleUser.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpCreation {
                get {
                    try {
                        return ((int)(this[this.tableControleUser.IdOpCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpCreation\' dans la table \'ControleUser\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableControleUser.IdOpCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableControleUser.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpModif {
                get {
                    try {
                        return ((int)(this[this.tableControleUser.IdOpModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpModif\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.IdOpModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableControleUser.DateFinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFin\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.DateFinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdLabelControle {
                get {
                    try {
                        return ((int)(this[this.tableControleUser.IdLabelControleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdLabelControle\' dans la table \'ControleUser\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableControleUser.IdLabelControleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Abrev {
                get {
                    try {
                        return ((string)(this[this.tableControleUser.AbrevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Abrev\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.AbrevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser {
                get {
                    try {
                        return ((int)(this[this.tableControleUser.IdUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.IdUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Matricule {
                get {
                    try {
                        return ((string)(this[this.tableControleUser.MatriculeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Matricule\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.MatriculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    try {
                        return ((string)(this[this.tableControleUser.NomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Nom\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    try {
                        return ((string)(this[this.tableControleUser.PrenomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Prenom\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumBadge {
                get {
                    try {
                        return ((string)(this[this.tableControleUser.NumBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumBadge\' dans la table \'ControleUser\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControleUser.NumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableControleUser.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableControleUser.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpCreationNull() {
                return this.IsNull(this.tableControleUser.IdOpCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpCreationNull() {
                this[this.tableControleUser.IdOpCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableControleUser.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableControleUser.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpModifNull() {
                return this.IsNull(this.tableControleUser.IdOpModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpModifNull() {
                this[this.tableControleUser.IdOpModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinNull() {
                return this.IsNull(this.tableControleUser.DateFinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinNull() {
                this[this.tableControleUser.DateFinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdLabelControleNull() {
                return this.IsNull(this.tableControleUser.IdLabelControleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdLabelControleNull() {
                this[this.tableControleUser.IdLabelControleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbrevNull() {
                return this.IsNull(this.tableControleUser.AbrevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbrevNull() {
                this[this.tableControleUser.AbrevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUserNull() {
                return this.IsNull(this.tableControleUser.IdUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUserNull() {
                this[this.tableControleUser.IdUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMatriculeNull() {
                return this.IsNull(this.tableControleUser.MatriculeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMatriculeNull() {
                this[this.tableControleUser.MatriculeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableControleUser.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableControleUser.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableControleUser.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableControleUser.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumBadgeNull() {
                return this.IsNull(this.tableControleUser.NumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumBadgeNull() {
                this[this.tableControleUser.NumBadgeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LabelsControlesRow : global::System.Data.DataRow {
            
            private LabelsControlesDataTable tableLabelsControles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LabelsControlesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLabelsControles = ((LabelsControlesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableLabelsControles.IdColumn]));
                }
                set {
                    this[this.tableLabelsControles.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Abrev {
                get {
                    try {
                        return ((string)(this[this.tableLabelsControles.AbrevColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Abrev\' dans la table \'LabelsControles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLabelsControles.AbrevColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Libelle {
                get {
                    try {
                        return ((string)(this[this.tableLabelsControles.LibelleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Libelle\' dans la table \'LabelsControles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLabelsControles.LibelleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableLabelsControles.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Type\' dans la table \'LabelsControles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLabelsControles.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbrevNull() {
                return this.IsNull(this.tableLabelsControles.AbrevColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbrevNull() {
                this[this.tableLabelsControles.AbrevColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleNull() {
                return this.IsNull(this.tableLabelsControles.LibelleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleNull() {
                this[this.tableLabelsControles.LibelleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLabelsControles.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableLabelsControles.TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ControlesRow : global::System.Data.DataRow {
            
            private ControlesDataTable tableControles;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal ControlesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableControles = ((ControlesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableControles.DateFinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFin\' dans la table \'Controles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControles.DateFinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableControles.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'Controles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControles.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpCreation {
                get {
                    try {
                        return ((int)(this[this.tableControles.IdOpCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpCreation\' dans la table \'Controles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControles.IdOpCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableControles.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreation\' dans la table \'Controles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControles.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableControles.IdColumn]));
                }
                set {
                    this[this.tableControles.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpModif {
                get {
                    try {
                        return ((int)(this[this.tableControles.IdOpModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpModif\' dans la table \'Controles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControles.IdOpModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdVehicule {
                get {
                    try {
                        return ((int)(this[this.tableControles.IdVehiculeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdVehicule\' dans la table \'Controles\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableControles.IdVehiculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeTaxi {
                get {
                    if (this.IsTypeTaxiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableControles.TypeTaxiColumn]));
                    }
                }
                set {
                    this[this.tableControles.TypeTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumTaxi {
                get {
                    if (this.IsNumTaxiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableControles.NumTaxiColumn]));
                    }
                }
                set {
                    this[this.tableControles.NumTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdLabelControle {
                get {
                    try {
                        return ((int)(this[this.tableControles.IdLabelControleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdLabelControle\' dans la table \'Controles\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableControles.IdLabelControleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleControle {
                get {
                    try {
                        return ((string)(this[this.tableControles.LibelleControleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LibelleControle\' dans la table \'Controles\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableControles.LibelleControleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Plaque {
                get {
                    if (this.IsPlaqueNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableControles.PlaqueColumn]));
                    }
                }
                set {
                    this[this.tableControles.PlaqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinNull() {
                return this.IsNull(this.tableControles.DateFinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinNull() {
                this[this.tableControles.DateFinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableControles.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableControles.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpCreationNull() {
                return this.IsNull(this.tableControles.IdOpCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpCreationNull() {
                this[this.tableControles.IdOpCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableControles.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableControles.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpModifNull() {
                return this.IsNull(this.tableControles.IdOpModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpModifNull() {
                this[this.tableControles.IdOpModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdVehiculeNull() {
                return this.IsNull(this.tableControles.IdVehiculeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdVehiculeNull() {
                this[this.tableControles.IdVehiculeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTaxiNull() {
                return this.IsNull(this.tableControles.TypeTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeTaxiNull() {
                this[this.tableControles.TypeTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumTaxiNull() {
                return this.IsNull(this.tableControles.NumTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumTaxiNull() {
                this[this.tableControles.NumTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdLabelControleNull() {
                return this.IsNull(this.tableControles.IdLabelControleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdLabelControleNull() {
                this[this.tableControles.IdLabelControleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleControleNull() {
                return this.IsNull(this.tableControles.LibelleControleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleControleNull() {
                this[this.tableControles.LibelleControleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaqueNull() {
                return this.IsNull(this.tableControles.PlaqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaqueNull() {
                this[this.tableControles.PlaqueColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VehiculesRow : global::System.Data.DataRow {
            
            private VehiculesDataTable tableVehicules;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VehiculesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVehicules = ((VehiculesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableVehicules.IdColumn]));
                }
                set {
                    this[this.tableVehicules.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVehicules.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreation\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpCreation {
                get {
                    try {
                        return ((int)(this[this.tableVehicules.IdOpCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpCreation\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.IdOpCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVehicules.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpModif {
                get {
                    try {
                        return ((int)(this[this.tableVehicules.IdOpModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpModif\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.IdOpModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Immat {
                get {
                    try {
                        return ((string)(this[this.tableVehicules.ImmatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Immat\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.ImmatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    try {
                        return ((string)(this[this.tableVehicules.NomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Nom\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    try {
                        return ((string)(this[this.tableVehicules.PrenomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Prenom\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cin {
                get {
                    try {
                        return ((string)(this[this.tableVehicules.CinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Cin\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.CinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateMec {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVehicules.DateMecColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateMec\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.DateMecColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateImmat {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVehicules.DateImmatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateImmat\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.DateImmatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Marque {
                get {
                    try {
                        return ((string)(this[this.tableVehicules.MarqueColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Marque\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.MarqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Modele {
                get {
                    try {
                        return ((string)(this[this.tableVehicules.ModeleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Modele\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.ModeleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public uint Total {
                get {
                    try {
                        return ((uint)(this[this.tableVehicules.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Total\' dans la table \'Vehicules\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVehicules.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableVehicules.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableVehicules.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpCreationNull() {
                return this.IsNull(this.tableVehicules.IdOpCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpCreationNull() {
                this[this.tableVehicules.IdOpCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableVehicules.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableVehicules.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpModifNull() {
                return this.IsNull(this.tableVehicules.IdOpModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpModifNull() {
                this[this.tableVehicules.IdOpModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImmatNull() {
                return this.IsNull(this.tableVehicules.ImmatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImmatNull() {
                this[this.tableVehicules.ImmatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableVehicules.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableVehicules.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableVehicules.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableVehicules.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCinNull() {
                return this.IsNull(this.tableVehicules.CinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCinNull() {
                this[this.tableVehicules.CinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateMecNull() {
                return this.IsNull(this.tableVehicules.DateMecColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateMecNull() {
                this[this.tableVehicules.DateMecColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateImmatNull() {
                return this.IsNull(this.tableVehicules.DateImmatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateImmatNull() {
                this[this.tableVehicules.DateImmatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarqueNull() {
                return this.IsNull(this.tableVehicules.MarqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarqueNull() {
                this[this.tableVehicules.MarqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModeleNull() {
                return this.IsNull(this.tableVehicules.ModeleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModeleNull() {
                this[this.tableVehicules.ModeleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableVehicules.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tableVehicules.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AgrementRow : global::System.Data.DataRow {
            
            private AgrementDataTable tableAgrement;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AgrementRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAgrement = ((AgrementDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableAgrement.IdColumn]));
                }
                set {
                    this[this.tableAgrement.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgrement.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreation\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpCreation {
                get {
                    try {
                        return ((int)(this[this.tableAgrement.IdOpCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpCreation\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.IdOpCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgrement.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpModif {
                get {
                    try {
                        return ((int)(this[this.tableAgrement.IdOpModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpModif\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.IdOpModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateDebut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgrement.DateDebutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateDebut\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.DateDebutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAgrement.DateFinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFin\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.DateFinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumAgrement {
                get {
                    if (this.IsNumAgrementNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.NumAgrementColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.NumAgrementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Valide {
                get {
                    try {
                        return ((bool)(this[this.tableAgrement.ValideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Valide\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.ValideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    if (this.IsNomNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.NomColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    if (this.IsPrenomNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.PrenomColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Plaque {
                get {
                    if (this.IsPlaqueNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.PlaqueColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.PlaqueColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PointAttache {
                get {
                    if (this.IsPointAttacheNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.PointAttacheColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.PointAttacheColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumTaxi {
                get {
                    if (this.IsNumTaxiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.NumTaxiColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.NumTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdVehicule {
                get {
                    try {
                        return ((int)(this[this.tableAgrement.IdVehiculeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdVehicule\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.IdVehiculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom_Prem {
                get {
                    if (this.IsNom_PremNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.Nom_PremColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.Nom_PremColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom_Prem {
                get {
                    if (this.IsPrenom_PremNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.Prenom_PremColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.Prenom_PremColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom_Dern {
                get {
                    if (this.IsNom_DernNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.Nom_DernColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.Nom_DernColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom_Dern {
                get {
                    if (this.IsPrenom_DernNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.Prenom_DernColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.Prenom_DernColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Commune {
                get {
                    if (this.IsCommuneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.CommuneColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.CommuneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TypeTaxi {
                get {
                    if (this.IsTypeTaxiNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAgrement.TypeTaxiColumn]));
                    }
                }
                set {
                    this[this.tableAgrement.TypeTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Cin {
                get {
                    try {
                        return ((string)(this[this.tableAgrement.CinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Cin\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.CinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tableAgrement.TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Telephone\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adresse {
                get {
                    try {
                        return ((string)(this[this.tableAgrement.AdresseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Adresse\' dans la table \'Agrement\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAgrement.AdresseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableAgrement.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableAgrement.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpCreationNull() {
                return this.IsNull(this.tableAgrement.IdOpCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpCreationNull() {
                this[this.tableAgrement.IdOpCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableAgrement.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableAgrement.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpModifNull() {
                return this.IsNull(this.tableAgrement.IdOpModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpModifNull() {
                this[this.tableAgrement.IdOpModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDebutNull() {
                return this.IsNull(this.tableAgrement.DateDebutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDebutNull() {
                this[this.tableAgrement.DateDebutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinNull() {
                return this.IsNull(this.tableAgrement.DateFinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinNull() {
                this[this.tableAgrement.DateFinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumAgrementNull() {
                return this.IsNull(this.tableAgrement.NumAgrementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumAgrementNull() {
                this[this.tableAgrement.NumAgrementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValideNull() {
                return this.IsNull(this.tableAgrement.ValideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValideNull() {
                this[this.tableAgrement.ValideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableAgrement.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableAgrement.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableAgrement.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableAgrement.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPlaqueNull() {
                return this.IsNull(this.tableAgrement.PlaqueColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPlaqueNull() {
                this[this.tableAgrement.PlaqueColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPointAttacheNull() {
                return this.IsNull(this.tableAgrement.PointAttacheColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPointAttacheNull() {
                this[this.tableAgrement.PointAttacheColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumTaxiNull() {
                return this.IsNull(this.tableAgrement.NumTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumTaxiNull() {
                this[this.tableAgrement.NumTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdVehiculeNull() {
                return this.IsNull(this.tableAgrement.IdVehiculeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdVehiculeNull() {
                this[this.tableAgrement.IdVehiculeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNom_PremNull() {
                return this.IsNull(this.tableAgrement.Nom_PremColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNom_PremNull() {
                this[this.tableAgrement.Nom_PremColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenom_PremNull() {
                return this.IsNull(this.tableAgrement.Prenom_PremColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenom_PremNull() {
                this[this.tableAgrement.Prenom_PremColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNom_DernNull() {
                return this.IsNull(this.tableAgrement.Nom_DernColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNom_DernNull() {
                this[this.tableAgrement.Nom_DernColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenom_DernNull() {
                return this.IsNull(this.tableAgrement.Prenom_DernColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenom_DernNull() {
                this[this.tableAgrement.Prenom_DernColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCommuneNull() {
                return this.IsNull(this.tableAgrement.CommuneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCommuneNull() {
                this[this.tableAgrement.CommuneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTaxiNull() {
                return this.IsNull(this.tableAgrement.TypeTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeTaxiNull() {
                this[this.tableAgrement.TypeTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCinNull() {
                return this.IsNull(this.tableAgrement.CinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCinNull() {
                this[this.tableAgrement.CinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tableAgrement.TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneNull() {
                this[this.tableAgrement.TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresseNull() {
                return this.IsNull(this.tableAgrement.AdresseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresseNull() {
                this[this.tableAgrement.AdresseColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CommunesRow : global::System.Data.DataRow {
            
            private CommunesDataTable tableCommunes;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CommunesRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCommunes = ((CommunesDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdCommune {
                get {
                    return ((int)(this[this.tableCommunes.IdCommuneColumn]));
                }
                set {
                    this[this.tableCommunes.IdCommuneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomCommune {
                get {
                    try {
                        return ((string)(this[this.tableCommunes.NomCommuneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NomCommune\' dans la table \'Communes\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCommunes.NomCommuneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomCommuneNull() {
                return this.IsNull(this.tableCommunes.NomCommuneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomCommuneNull() {
                this[this.tableCommunes.NomCommuneColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class MotifsRow : global::System.Data.DataRow {
            
            private MotifsDataTable tableMotifs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal MotifsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableMotifs = ((MotifsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdMotif {
                get {
                    return ((int)(this[this.tableMotifs.IdMotifColumn]));
                }
                set {
                    this[this.tableMotifs.IdMotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AbrevMotif {
                get {
                    try {
                        return ((string)(this[this.tableMotifs.AbrevMotifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'AbrevMotif\' dans la table \'Motifs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableMotifs.AbrevMotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleMotif {
                get {
                    try {
                        return ((string)(this[this.tableMotifs.LibelleMotifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LibelleMotif\' dans la table \'Motifs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableMotifs.LibelleMotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbrevMotifNull() {
                return this.IsNull(this.tableMotifs.AbrevMotifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbrevMotifNull() {
                this[this.tableMotifs.AbrevMotifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleMotifNull() {
                return this.IsNull(this.tableMotifs.LibelleMotifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleMotifNull() {
                this[this.tableMotifs.LibelleMotifColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class VisiteursRow : global::System.Data.DataRow {
            
            private VisiteursDataTable tableVisiteurs;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal VisiteursRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableVisiteurs = ((VisiteursDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser {
                get {
                    return ((int)(this[this.tableVisiteurs.IdUserColumn]));
                }
                set {
                    this[this.tableVisiteurs.IdUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Matricule {
                get {
                    return ((string)(this[this.tableVisiteurs.MatriculeColumn]));
                }
                set {
                    this[this.tableVisiteurs.MatriculeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.NomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Nom\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.PrenomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Prenom\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumService {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.NumServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumService\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Tel {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.TelColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Tel\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fax {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.FaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Fax\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.FaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FlagAutorise {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.FlagAutoriseColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'FlagAutorise\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.FlagAutoriseColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateDebut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVisiteurs.DateDebutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateDebut\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.DateDebutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVisiteurs.DateFinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFin\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.DateFinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumDroitAcces {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.NumDroitAccesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumDroitAcces\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumDroitAccesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumBadge {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.NumBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumBadge\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NbEmpreintes {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.NbEmpreintesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NbEmpreintes\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NbEmpreintesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adresse1 {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.Adresse1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Adresse1\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.Adresse1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Adresse2 {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.Adresse2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Adresse2\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.Adresse2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodePostal {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.CodePostalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodePostal\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CodePostalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ville {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.VilleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Ville\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.VilleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Telephone {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.TelephoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Telephone\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TelephoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mobile {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.MobileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Mobile\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EMail {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.EMailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'EMail\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.EMailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreat {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVisiteurs.DateCreatColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreat\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.DateCreatColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableVisiteurs.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DateNaissance {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.DateNaissanceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateNaissance\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.DateNaissanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HeureMois {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.HeureMoisColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'HeureMois\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.HeureMoisColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxNormal {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TauxNormalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxNormal\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TauxNormalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup1 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TauxSup1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup1\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TauxSup1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup2 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TauxSup2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup2\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TauxSup2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Fonction {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.FonctionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Fonction\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.FonctionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup3 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TauxSup3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup3\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TauxSup3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Sexe {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.SexeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Sexe\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.SexeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Civilite {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.CiviliteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Civilite\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CiviliteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumCI {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.NumCIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumCI\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumCIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumSS {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.NumSSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumSS\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumSSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumHoraire {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.NumHoraireColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumHoraire\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumHoraireColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CodePin {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.CodePinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodePin\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CodePinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckEmpreinte {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.CheckEmpreinteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckEmpreinte\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CheckEmpreinteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckBadge {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.CheckBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckBadge\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CheckBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckPin {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.CheckPinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckPin\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CheckPinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool CheckAutoDeclar {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.CheckAutoDeclarColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CheckAutoDeclar\' dans la table \'Visiteurs\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.CheckAutoDeclarColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TauxSup0 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TauxSup0Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TauxSup0\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TauxSup0Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeTemps {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TypeTempsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeTemps\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TypeTempsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Modified {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.ModifiedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Modified\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.ModifiedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool BadgeEncoded {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.BadgeEncodedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'BadgeEncoded\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.BadgeEncodedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumContrat {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.NumContratColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumContrat\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.NumContratColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeUser {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.TypeUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'TypeUser\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TypeUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser1 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.IdUser1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser1\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.IdUser1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser2 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.IdUser2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser2\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.IdUser2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdUser3 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.IdUser3Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdUser3\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.IdUser3Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool UpdateLecNow {
                get {
                    try {
                        return ((bool)(this[this.tableVisiteurs.UpdateLecNowColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'UpdateLecNow\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.UpdateLecNowColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JourRepos1 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.JourRepos1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'JourRepos1\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.JourRepos1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int JourRepos2 {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.JourRepos2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'JourRepos2\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.JourRepos2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Motif {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.MotifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Motif\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.MotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdMotif {
                get {
                    try {
                        return ((int)(this[this.tableVisiteurs.IdMotifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdMotif\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.IdMotifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Total {
                get {
                    try {
                        return ((string)(this[this.tableVisiteurs.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Total\' dans la table \'Visiteurs\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableVisiteurs.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableVisiteurs.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableVisiteurs.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableVisiteurs.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableVisiteurs.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumServiceNull() {
                return this.IsNull(this.tableVisiteurs.NumServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumServiceNull() {
                this[this.tableVisiteurs.NumServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelNull() {
                return this.IsNull(this.tableVisiteurs.TelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelNull() {
                this[this.tableVisiteurs.TelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaxNull() {
                return this.IsNull(this.tableVisiteurs.FaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaxNull() {
                this[this.tableVisiteurs.FaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFlagAutoriseNull() {
                return this.IsNull(this.tableVisiteurs.FlagAutoriseColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFlagAutoriseNull() {
                this[this.tableVisiteurs.FlagAutoriseColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDebutNull() {
                return this.IsNull(this.tableVisiteurs.DateDebutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDebutNull() {
                this[this.tableVisiteurs.DateDebutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinNull() {
                return this.IsNull(this.tableVisiteurs.DateFinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinNull() {
                this[this.tableVisiteurs.DateFinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumDroitAccesNull() {
                return this.IsNull(this.tableVisiteurs.NumDroitAccesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumDroitAccesNull() {
                this[this.tableVisiteurs.NumDroitAccesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumBadgeNull() {
                return this.IsNull(this.tableVisiteurs.NumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumBadgeNull() {
                this[this.tableVisiteurs.NumBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNbEmpreintesNull() {
                return this.IsNull(this.tableVisiteurs.NbEmpreintesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNbEmpreintesNull() {
                this[this.tableVisiteurs.NbEmpreintesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresse1Null() {
                return this.IsNull(this.tableVisiteurs.Adresse1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresse1Null() {
                this[this.tableVisiteurs.Adresse1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAdresse2Null() {
                return this.IsNull(this.tableVisiteurs.Adresse2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAdresse2Null() {
                this[this.tableVisiteurs.Adresse2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodePostalNull() {
                return this.IsNull(this.tableVisiteurs.CodePostalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodePostalNull() {
                this[this.tableVisiteurs.CodePostalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVilleNull() {
                return this.IsNull(this.tableVisiteurs.VilleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVilleNull() {
                this[this.tableVisiteurs.VilleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTelephoneNull() {
                return this.IsNull(this.tableVisiteurs.TelephoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTelephoneNull() {
                this[this.tableVisiteurs.TelephoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNull() {
                return this.IsNull(this.tableVisiteurs.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNull() {
                this[this.tableVisiteurs.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEMailNull() {
                return this.IsNull(this.tableVisiteurs.EMailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEMailNull() {
                this[this.tableVisiteurs.EMailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreatNull() {
                return this.IsNull(this.tableVisiteurs.DateCreatColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreatNull() {
                this[this.tableVisiteurs.DateCreatColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableVisiteurs.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableVisiteurs.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateNaissanceNull() {
                return this.IsNull(this.tableVisiteurs.DateNaissanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNaissanceNull() {
                this[this.tableVisiteurs.DateNaissanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeureMoisNull() {
                return this.IsNull(this.tableVisiteurs.HeureMoisColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeureMoisNull() {
                this[this.tableVisiteurs.HeureMoisColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxNormalNull() {
                return this.IsNull(this.tableVisiteurs.TauxNormalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxNormalNull() {
                this[this.tableVisiteurs.TauxNormalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup1Null() {
                return this.IsNull(this.tableVisiteurs.TauxSup1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup1Null() {
                this[this.tableVisiteurs.TauxSup1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup2Null() {
                return this.IsNull(this.tableVisiteurs.TauxSup2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup2Null() {
                this[this.tableVisiteurs.TauxSup2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFonctionNull() {
                return this.IsNull(this.tableVisiteurs.FonctionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFonctionNull() {
                this[this.tableVisiteurs.FonctionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup3Null() {
                return this.IsNull(this.tableVisiteurs.TauxSup3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup3Null() {
                this[this.tableVisiteurs.TauxSup3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSexeNull() {
                return this.IsNull(this.tableVisiteurs.SexeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSexeNull() {
                this[this.tableVisiteurs.SexeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCiviliteNull() {
                return this.IsNull(this.tableVisiteurs.CiviliteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCiviliteNull() {
                this[this.tableVisiteurs.CiviliteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumCINull() {
                return this.IsNull(this.tableVisiteurs.NumCIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumCINull() {
                this[this.tableVisiteurs.NumCIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumSSNull() {
                return this.IsNull(this.tableVisiteurs.NumSSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumSSNull() {
                this[this.tableVisiteurs.NumSSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumHoraireNull() {
                return this.IsNull(this.tableVisiteurs.NumHoraireColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumHoraireNull() {
                this[this.tableVisiteurs.NumHoraireColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodePinNull() {
                return this.IsNull(this.tableVisiteurs.CodePinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodePinNull() {
                this[this.tableVisiteurs.CodePinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckEmpreinteNull() {
                return this.IsNull(this.tableVisiteurs.CheckEmpreinteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckEmpreinteNull() {
                this[this.tableVisiteurs.CheckEmpreinteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckBadgeNull() {
                return this.IsNull(this.tableVisiteurs.CheckBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckBadgeNull() {
                this[this.tableVisiteurs.CheckBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckPinNull() {
                return this.IsNull(this.tableVisiteurs.CheckPinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckPinNull() {
                this[this.tableVisiteurs.CheckPinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCheckAutoDeclarNull() {
                return this.IsNull(this.tableVisiteurs.CheckAutoDeclarColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCheckAutoDeclarNull() {
                this[this.tableVisiteurs.CheckAutoDeclarColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTauxSup0Null() {
                return this.IsNull(this.tableVisiteurs.TauxSup0Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTauxSup0Null() {
                this[this.tableVisiteurs.TauxSup0Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeTempsNull() {
                return this.IsNull(this.tableVisiteurs.TypeTempsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeTempsNull() {
                this[this.tableVisiteurs.TypeTempsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsModifiedNull() {
                return this.IsNull(this.tableVisiteurs.ModifiedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetModifiedNull() {
                this[this.tableVisiteurs.ModifiedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBadgeEncodedNull() {
                return this.IsNull(this.tableVisiteurs.BadgeEncodedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBadgeEncodedNull() {
                this[this.tableVisiteurs.BadgeEncodedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumContratNull() {
                return this.IsNull(this.tableVisiteurs.NumContratColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumContratNull() {
                this[this.tableVisiteurs.NumContratColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeUserNull() {
                return this.IsNull(this.tableVisiteurs.TypeUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeUserNull() {
                this[this.tableVisiteurs.TypeUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUser1Null() {
                return this.IsNull(this.tableVisiteurs.IdUser1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUser1Null() {
                this[this.tableVisiteurs.IdUser1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUser2Null() {
                return this.IsNull(this.tableVisiteurs.IdUser2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUser2Null() {
                this[this.tableVisiteurs.IdUser2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdUser3Null() {
                return this.IsNull(this.tableVisiteurs.IdUser3Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdUser3Null() {
                this[this.tableVisiteurs.IdUser3Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsUpdateLecNowNull() {
                return this.IsNull(this.tableVisiteurs.UpdateLecNowColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetUpdateLecNowNull() {
                this[this.tableVisiteurs.UpdateLecNowColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJourRepos1Null() {
                return this.IsNull(this.tableVisiteurs.JourRepos1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJourRepos1Null() {
                this[this.tableVisiteurs.JourRepos1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsJourRepos2Null() {
                return this.IsNull(this.tableVisiteurs.JourRepos2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetJourRepos2Null() {
                this[this.tableVisiteurs.JourRepos2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMotifNull() {
                return this.IsNull(this.tableVisiteurs.MotifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMotifNull() {
                this[this.tableVisiteurs.MotifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdMotifNull() {
                return this.IsNull(this.tableVisiteurs.IdMotifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdMotifNull() {
                this[this.tableVisiteurs.IdMotifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableVisiteurs.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tableVisiteurs.TotalColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class AutoQpuRow : global::System.Data.DataRow {
            
            private AutoQpuDataTable tableAutoQpu;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal AutoQpuRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableAutoQpu = ((AutoQpuDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Id {
                get {
                    return ((int)(this[this.tableAutoQpu.IdColumn]));
                }
                set {
                    this[this.tableAutoQpu.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateCreation {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoQpu.DateCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateCreation\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.DateCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpCreation {
                get {
                    try {
                        return ((int)(this[this.tableAutoQpu.IdOpCreationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpCreation\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.IdOpCreationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateModif {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoQpu.DateModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateModif\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.DateModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOpModif {
                get {
                    try {
                        return ((int)(this[this.tableAutoQpu.IdOpModifColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOpModif\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.IdOpModifColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateDebut {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoQpu.DateDebutColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateDebut\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.DateDebutColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DateFin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableAutoQpu.DateFinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'DateFin\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.DateFinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MatriculeUser {
                get {
                    if (this.IsMatriculeUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.MatriculeUserColumn]));
                    }
                }
                set {
                    this[this.tableAutoQpu.MatriculeUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Valide {
                get {
                    try {
                        return ((bool)(this[this.tableAutoQpu.ValideColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Valide\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.ValideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumAuto {
                get {
                    if (this.IsNumAutoNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.NumAutoColumn]));
                    }
                }
                set {
                    this[this.tableAutoQpu.NumAutoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumAgrement {
                get {
                    if (this.IsNumAgrementNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.NumAgrementColumn]));
                    }
                }
                set {
                    this[this.tableAutoQpu.NumAgrementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Destination {
                get {
                    if (this.IsDestinationNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.DestinationColumn]));
                    }
                }
                set {
                    this[this.tableAutoQpu.DestinationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdAgrement {
                get {
                    try {
                        return ((int)(this[this.tableAutoQpu.IdAgrementColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdAgrement\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.IdAgrementColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomPassager1 {
                get {
                    if (this.IsNomPassager1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.NomPassager1Column]));
                    }
                }
                set {
                    this[this.tableAutoQpu.NomPassager1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrenomPassager1 {
                get {
                    if (this.IsPrenomPassager1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.PrenomPassager1Column]));
                    }
                }
                set {
                    this[this.tableAutoQpu.PrenomPassager1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CinPassager1 {
                get {
                    if (this.IsCinPassager1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.CinPassager1Column]));
                    }
                }
                set {
                    this[this.tableAutoQpu.CinPassager1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomPassager2 {
                get {
                    if (this.IsNomPassager2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.NomPassager2Column]));
                    }
                }
                set {
                    this[this.tableAutoQpu.NomPassager2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrenomPassager2 {
                get {
                    if (this.IsPrenomPassager2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.PrenomPassager2Column]));
                    }
                }
                set {
                    this[this.tableAutoQpu.PrenomPassager2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CinPassager2 {
                get {
                    if (this.IsCinPassager2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.CinPassager2Column]));
                    }
                }
                set {
                    this[this.tableAutoQpu.CinPassager2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomUser {
                get {
                    if (this.IsNomUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.NomUserColumn]));
                    }
                }
                set {
                    this[this.tableAutoQpu.NomUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrenomUser {
                get {
                    if (this.IsPrenomUserNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tableAutoQpu.PrenomUserColumn]));
                    }
                }
                set {
                    this[this.tableAutoQpu.PrenomUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumListe {
                get {
                    try {
                        return ((int)(this[this.tableAutoQpu.NumListeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumListe\' dans la table \'AutoQpu\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableAutoQpu.NumListeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateCreationNull() {
                return this.IsNull(this.tableAutoQpu.DateCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateCreationNull() {
                this[this.tableAutoQpu.DateCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpCreationNull() {
                return this.IsNull(this.tableAutoQpu.IdOpCreationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpCreationNull() {
                this[this.tableAutoQpu.IdOpCreationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateModifNull() {
                return this.IsNull(this.tableAutoQpu.DateModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateModifNull() {
                this[this.tableAutoQpu.DateModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOpModifNull() {
                return this.IsNull(this.tableAutoQpu.IdOpModifColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOpModifNull() {
                this[this.tableAutoQpu.IdOpModifColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateDebutNull() {
                return this.IsNull(this.tableAutoQpu.DateDebutColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateDebutNull() {
                this[this.tableAutoQpu.DateDebutColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateFinNull() {
                return this.IsNull(this.tableAutoQpu.DateFinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateFinNull() {
                this[this.tableAutoQpu.DateFinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMatriculeUserNull() {
                return this.IsNull(this.tableAutoQpu.MatriculeUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMatriculeUserNull() {
                this[this.tableAutoQpu.MatriculeUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValideNull() {
                return this.IsNull(this.tableAutoQpu.ValideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValideNull() {
                this[this.tableAutoQpu.ValideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumAutoNull() {
                return this.IsNull(this.tableAutoQpu.NumAutoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumAutoNull() {
                this[this.tableAutoQpu.NumAutoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumAgrementNull() {
                return this.IsNull(this.tableAutoQpu.NumAgrementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumAgrementNull() {
                this[this.tableAutoQpu.NumAgrementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDestinationNull() {
                return this.IsNull(this.tableAutoQpu.DestinationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDestinationNull() {
                this[this.tableAutoQpu.DestinationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdAgrementNull() {
                return this.IsNull(this.tableAutoQpu.IdAgrementColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdAgrementNull() {
                this[this.tableAutoQpu.IdAgrementColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomPassager1Null() {
                return this.IsNull(this.tableAutoQpu.NomPassager1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomPassager1Null() {
                this[this.tableAutoQpu.NomPassager1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomPassager1Null() {
                return this.IsNull(this.tableAutoQpu.PrenomPassager1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomPassager1Null() {
                this[this.tableAutoQpu.PrenomPassager1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCinPassager1Null() {
                return this.IsNull(this.tableAutoQpu.CinPassager1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCinPassager1Null() {
                this[this.tableAutoQpu.CinPassager1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomPassager2Null() {
                return this.IsNull(this.tableAutoQpu.NomPassager2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomPassager2Null() {
                this[this.tableAutoQpu.NomPassager2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomPassager2Null() {
                return this.IsNull(this.tableAutoQpu.PrenomPassager2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomPassager2Null() {
                this[this.tableAutoQpu.PrenomPassager2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCinPassager2Null() {
                return this.IsNull(this.tableAutoQpu.CinPassager2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCinPassager2Null() {
                this[this.tableAutoQpu.CinPassager2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomUserNull() {
                return this.IsNull(this.tableAutoQpu.NomUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomUserNull() {
                this[this.tableAutoQpu.NomUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomUserNull() {
                return this.IsNull(this.tableAutoQpu.PrenomUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomUserNull() {
                this[this.tableAutoQpu.PrenomUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumListeNull() {
                return this.IsNull(this.tableAutoQpu.NumListeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumListeNull() {
                this[this.tableAutoQpu.NumListeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class LogRow : global::System.Data.DataRow {
            
            private LogDataTable tableLog;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal LogRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLog = ((LogDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdLog {
                get {
                    return ((int)(this[this.tableLog.IdLogColumn]));
                }
                set {
                    this[this.tableLog.IdLogColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableLog.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Type\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime Instant {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableLog.InstantColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Instant\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.InstantColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IdOperateur {
                get {
                    try {
                        return ((int)(this[this.tableLog.IdOperateurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IdOperateur\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.IdOperateurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nom {
                get {
                    try {
                        return ((string)(this[this.tableLog.NomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Nom\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.NomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Prenom {
                get {
                    try {
                        return ((string)(this[this.tableLog.PrenomColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Prenom\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.PrenomColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Profil {
                get {
                    try {
                        return ((string)(this[this.tableLog.ProfilColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Profil\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.ProfilColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NomService {
                get {
                    try {
                        return ((string)(this[this.tableLog.NomServiceColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NomService\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.NomServiceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Login {
                get {
                    try {
                        return ((string)(this[this.tableLog.LoginColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Login\' dans la table \'Log\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableLog.LoginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableLog.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableLog.TypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsInstantNull() {
                return this.IsNull(this.tableLog.InstantColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetInstantNull() {
                this[this.tableLog.InstantColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIdOperateurNull() {
                return this.IsNull(this.tableLog.IdOperateurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIdOperateurNull() {
                this[this.tableLog.IdOperateurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomNull() {
                return this.IsNull(this.tableLog.NomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomNull() {
                this[this.tableLog.NomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrenomNull() {
                return this.IsNull(this.tableLog.PrenomColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrenomNull() {
                this[this.tableLog.PrenomColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsProfilNull() {
                return this.IsNull(this.tableLog.ProfilColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetProfilNull() {
                this[this.tableLog.ProfilColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNomServiceNull() {
                return this.IsNull(this.tableLog.NomServiceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNomServiceNull() {
                this[this.tableLog.NomServiceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoginNull() {
                return this.IsNull(this.tableLog.LoginColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoginNull() {
                this[this.tableLog.LoginColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class CodesMissionsRow : global::System.Data.DataRow {
            
            private CodesMissionsDataTable tableCodesMissions;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal CodesMissionsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCodesMissions = ((CodesMissionsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NumCode {
                get {
                    return ((int)(this[this.tableCodesMissions.NumCodeColumn]));
                }
                set {
                    this[this.tableCodesMissions.NumCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ValeurCode {
                get {
                    try {
                        return ((string)(this[this.tableCodesMissions.ValeurCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'ValeurCode\' dans la table \'CodesMissions\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodesMissions.ValeurCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LibelleCode {
                get {
                    try {
                        return ((string)(this[this.tableCodesMissions.LibelleCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'LibelleCode\' dans la table \'CodesMissions\' est DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableCodesMissions.LibelleCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CodeSap {
                get {
                    try {
                        return ((string)(this[this.tableCodesMissions.CodeSapColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodeSap\' dans la table \'CodesMissions\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodesMissions.CodeSapColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Lecteur {
                get {
                    try {
                        return ((int)(this[this.tableCodesMissions.LecteurColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Lecteur\' dans la table \'CodesMissions\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodesMissions.LecteurColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Type {
                get {
                    try {
                        return ((int)(this[this.tableCodesMissions.TypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'Type\' dans la table \'CodesMissions\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableCodesMissions.TypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsValeurCodeNull() {
                return this.IsNull(this.tableCodesMissions.ValeurCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetValeurCodeNull() {
                this[this.tableCodesMissions.ValeurCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLibelleCodeNull() {
                return this.IsNull(this.tableCodesMissions.LibelleCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLibelleCodeNull() {
                this[this.tableCodesMissions.LibelleCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeSapNull() {
                return this.IsNull(this.tableCodesMissions.CodeSapColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeSapNull() {
                this[this.tableCodesMissions.CodeSapColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLecteurNull() {
                return this.IsNull(this.tableCodesMissions.LecteurColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLecteurNull() {
                this[this.tableCodesMissions.LecteurColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeNull() {
                return this.IsNull(this.tableCodesMissions.TypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeNull() {
                this[this.tableCodesMissions.TypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SyntheseRow : global::System.Data.DataRow {
            
            private SyntheseDataTable tableSynthese;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SyntheseRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSynthese = ((SyntheseDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumTaxi {
                get {
                    try {
                        return ((string)(this[this.tableSynthese.NumTaxiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumTaxi\' dans la table \'Synthese\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableSynthese.NumTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumBadge {
                get {
                    try {
                        return ((string)(this[this.tableSynthese.NumBadgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumBadge\' dans la table \'Synthese\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableSynthese.NumBadgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime instant1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSynthese.instant1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'instant1\' dans la table \'Synthese\' est DBNull.", e);
                    }
                }
                set {
                    this[this.tableSynthese.instant1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumTaxiNull() {
                return this.IsNull(this.tableSynthese.NumTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumTaxiNull() {
                this[this.tableSynthese.NumTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumBadgeNull() {
                return this.IsNull(this.tableSynthese.NumBadgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumBadgeNull() {
                this[this.tableSynthese.NumBadgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinstant1Null() {
                return this.IsNull(this.tableSynthese.instant1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinstant1Null() {
                this[this.tableSynthese.instant1Column] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class SyntheseTaxiAbsentsRow : global::System.Data.DataRow {
            
            private SyntheseTaxiAbsentsDataTable tableSyntheseTaxiAbsents;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SyntheseTaxiAbsentsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableSyntheseTaxiAbsents = ((SyntheseTaxiAbsentsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NumTaxi {
                get {
                    try {
                        return ((string)(this[this.tableSyntheseTaxiAbsents.NumTaxiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'NumTaxi\' dans la table \'SyntheseTaxiAbsents\' est DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableSyntheseTaxiAbsents.NumTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime instant1 {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableSyntheseTaxiAbsents.instant1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'instant1\' dans la table \'SyntheseTaxiAbsents\' est DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableSyntheseTaxiAbsents.instant1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int IndexTaxi {
                get {
                    try {
                        return ((int)(this[this.tableSyntheseTaxiAbsents.IndexTaxiColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'IndexTaxi\' dans la table \'SyntheseTaxiAbsents\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSyntheseTaxiAbsents.IndexTaxiColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int CodeRefus {
                get {
                    try {
                        return ((int)(this[this.tableSyntheseTaxiAbsents.CodeRefusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("La valeur pour la colonne \'CodeRefus\' dans la table \'SyntheseTaxiAbsents\' est DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableSyntheseTaxiAbsents.CodeRefusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNumTaxiNull() {
                return this.IsNull(this.tableSyntheseTaxiAbsents.NumTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNumTaxiNull() {
                this[this.tableSyntheseTaxiAbsents.NumTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isinstant1Null() {
                return this.IsNull(this.tableSyntheseTaxiAbsents.instant1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setinstant1Null() {
                this[this.tableSyntheseTaxiAbsents.instant1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIndexTaxiNull() {
                return this.IsNull(this.tableSyntheseTaxiAbsents.IndexTaxiColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIndexTaxiNull() {
                this[this.tableSyntheseTaxiAbsents.IndexTaxiColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCodeRefusNull() {
                return this.IsNull(this.tableSyntheseTaxiAbsents.CodeRefusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCodeRefusNull() {
                this[this.tableSyntheseTaxiAbsents.CodeRefusColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UsersRowChangeEvent : global::System.EventArgs {
            
            private UsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersRowChangeEvent(UsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class DroitsRowChangeEvent : global::System.EventArgs {
            
            private DroitsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsRowChangeEvent(DroitsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public DroitsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class BadgesRowChangeEvent : global::System.EventArgs {
            
            private BadgesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BadgesRowChangeEvent(BadgesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public BadgesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ListesRowChangeEvent : global::System.EventArgs {
            
            private ListesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesRowChangeEvent(ListesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ListesUsersRowChangeEvent : global::System.EventArgs {
            
            private ListesUsersRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersRowChangeEvent(ListesUsersRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ListesUsersRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ServicesRowChangeEvent : global::System.EventArgs {
            
            private ServicesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRowChangeEvent(ServicesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ServicesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class UsersBioDataRowChangeEvent : global::System.EventArgs {
            
            private UsersBioDataRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataRowChangeEvent(UsersBioDataRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public UsersBioDataRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class OperateursRowChangeEvent : global::System.EventArgs {
            
            private OperateursRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OperateursRowChangeEvent(OperateursRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public OperateursRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LecteursRowChangeEvent : global::System.EventArgs {
            
            private LecteursRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LecteursRowChangeEvent(LecteursRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LecteursRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class EventsRowChangeEvent : global::System.EventArgs {
            
            private EventsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRowChangeEvent(EventsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public EventsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class TypeTaxiRowChangeEvent : global::System.EventArgs {
            
            private TypeTaxiRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TypeTaxiRowChangeEvent(TypeTaxiRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public TypeTaxiRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ControleUserRowChangeEvent : global::System.EventArgs {
            
            private ControleUserRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControleUserRowChangeEvent(ControleUserRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControleUserRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LabelsControlesRowChangeEvent : global::System.EventArgs {
            
            private LabelsControlesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LabelsControlesRowChangeEvent(LabelsControlesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LabelsControlesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class ControlesRowChangeEvent : global::System.EventArgs {
            
            private ControlesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControlesRowChangeEvent(ControlesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public ControlesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VehiculesRowChangeEvent : global::System.EventArgs {
            
            private VehiculesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VehiculesRowChangeEvent(VehiculesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VehiculesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AgrementRowChangeEvent : global::System.EventArgs {
            
            private AgrementRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementRowChangeEvent(AgrementRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AgrementRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CommunesRowChangeEvent : global::System.EventArgs {
            
            private CommunesRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CommunesRowChangeEvent(CommunesRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CommunesRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class MotifsRowChangeEvent : global::System.EventArgs {
            
            private MotifsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MotifsRowChangeEvent(MotifsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public MotifsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class VisiteursRowChangeEvent : global::System.EventArgs {
            
            private VisiteursRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursRowChangeEvent(VisiteursRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public VisiteursRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class AutoQpuRowChangeEvent : global::System.EventArgs {
            
            private AutoQpuRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoQpuRowChangeEvent(AutoQpuRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public AutoQpuRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class LogRowChangeEvent : global::System.EventArgs {
            
            private LogRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRowChangeEvent(LogRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public LogRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class CodesMissionsRowChangeEvent : global::System.EventArgs {
            
            private CodesMissionsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsRowChangeEvent(CodesMissionsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public CodesMissionsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SyntheseRowChangeEvent : global::System.EventArgs {
            
            private SyntheseRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseRowChangeEvent(SyntheseRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class SyntheseTaxiAbsentsRowChangeEvent : global::System.EventArgs {
            
            private SyntheseTaxiAbsentsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseTaxiAbsentsRowChangeEvent(SyntheseTaxiAbsentsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public SyntheseTaxiAbsentsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace DataLockTooTaxi.MyDataSetTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Users";
            tableMapping.ColumnMappings.Add("IdUser", "IdUser");
            tableMapping.ColumnMappings.Add("Matricule", "Matricule");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("NumService", "NumService");
            tableMapping.ColumnMappings.Add("Tel", "Tel");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("FlagAutorise", "FlagAutorise");
            tableMapping.ColumnMappings.Add("DateDebut", "DateDebut");
            tableMapping.ColumnMappings.Add("DateFin", "DateFin");
            tableMapping.ColumnMappings.Add("NumDroitAcces", "NumDroitAcces");
            tableMapping.ColumnMappings.Add("NumBadge", "NumBadge");
            tableMapping.ColumnMappings.Add("NumCode", "NumCode");
            tableMapping.ColumnMappings.Add("NbEmpreintes", "NbEmpreintes");
            tableMapping.ColumnMappings.Add("Adresse1", "Adresse1");
            tableMapping.ColumnMappings.Add("Adresse2", "Adresse2");
            tableMapping.ColumnMappings.Add("CodePostal", "CodePostal");
            tableMapping.ColumnMappings.Add("Ville", "Ville");
            tableMapping.ColumnMappings.Add("Telephone", "Telephone");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("DateCreat", "DateCreat");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("DateNaissance", "DateNaissance");
            tableMapping.ColumnMappings.Add("HeureMois", "HeureMois");
            tableMapping.ColumnMappings.Add("TauxNormal", "TauxNormal");
            tableMapping.ColumnMappings.Add("TauxSup1", "TauxSup1");
            tableMapping.ColumnMappings.Add("TauxSup2", "TauxSup2");
            tableMapping.ColumnMappings.Add("Fonction", "Fonction");
            tableMapping.ColumnMappings.Add("TauxSup3", "TauxSup3");
            tableMapping.ColumnMappings.Add("Sexe", "Sexe");
            tableMapping.ColumnMappings.Add("Civilite", "Civilite");
            tableMapping.ColumnMappings.Add("NumCI", "NumCI");
            tableMapping.ColumnMappings.Add("NumSS", "NumSS");
            tableMapping.ColumnMappings.Add("NumHoraire", "NumHoraire");
            tableMapping.ColumnMappings.Add("CheckAutoDeclar", "CheckAutoDeclar");
            tableMapping.ColumnMappings.Add("CheckBadge", "CheckBadge");
            tableMapping.ColumnMappings.Add("CheckEmpreinte", "CheckEmpreinte");
            tableMapping.ColumnMappings.Add("CheckPin", "CheckPin");
            tableMapping.ColumnMappings.Add("CodePin", "CodePin");
            tableMapping.ColumnMappings.Add("TauxSup0", "TauxSup0");
            tableMapping.ColumnMappings.Add("TypeTemps", "TypeTemps");
            tableMapping.ColumnMappings.Add("Modified", "Modified");
            tableMapping.ColumnMappings.Add("BadgeEncoded", "BadgeEncoded");
            tableMapping.ColumnMappings.Add("NumContrat", "NumContrat");
            tableMapping.ColumnMappings.Add("TypeUser", "TypeUser");
            tableMapping.ColumnMappings.Add("IdUser1", "IdUser1");
            tableMapping.ColumnMappings.Add("IdUser2", "IdUser2");
            tableMapping.ColumnMappings.Add("IdUser3", "IdUser3");
            tableMapping.ColumnMappings.Add("UpdateLecNow", "UpdateLecNow");
            tableMapping.ColumnMappings.Add("JourRepos1", "JourRepos1");
            tableMapping.ColumnMappings.Add("JourRepos2", "JourRepos2");
            tableMapping.ColumnMappings.Add("NbJrsCongesAnnuels", "NbJrsCongesAnnuels");
            tableMapping.ColumnMappings.Add("LieuNaiss", "LieuNaiss");
            tableMapping.ColumnMappings.Add("DateCI", "DateCI");
            tableMapping.ColumnMappings.Add("NumPermis", "NumPermis");
            tableMapping.ColumnMappings.Add("DatePermis", "DatePermis");
            tableMapping.ColumnMappings.Add("AncienNumBadge", "AncienNumBadge");
            tableMapping.ColumnMappings.Add("TypeAd", "TypeAd");
            tableMapping.ColumnMappings.Add("Mdp", "Mdp");
            tableMapping.ColumnMappings.Add("UserLogin", "UserLogin");
            tableMapping.ColumnMappings.Add("CheckPointageWeb", "CheckPointageWeb");
            tableMapping.ColumnMappings.Add("NomService", "NomService");
            tableMapping.ColumnMappings.Add("BioData", "BioData");
            tableMapping.ColumnMappings.Add("LibelleDroit", "LibelleDroit");
            tableMapping.ColumnMappings.Add("Photo", "Photo");
            tableMapping.ColumnMappings.Add("Motif", "Motif");
            tableMapping.ColumnMappings.Add("Observations", "Observations");
            tableMapping.ColumnMappings.Add("DateFinMichoc", "DateFinMichoc");
            tableMapping.ColumnMappings.Add("CheckBlocageJoursRepos", "CheckBlocageJoursRepos");
            tableMapping.ColumnMappings.Add("CheckPremierPointage", "CheckPremierPointage");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[27];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT     Users.IdUser, Users.Matricule, Users.Nom, Users.Prenom, Users.NumServi" +
                "ce, Users.Tel, Users.Fax, Users.FlagAutorise, Users.DateDebut, Users.DateFin, \r\n" +
                "                      Users.NumDroitAcces, RIGHT(\'000000\' + Convert(varchar,User" +
                "s.NumBadge ), 6) as NumBadge , Users.NumCode, Users.NbEmpreintes, Users.Adresse1" +
                ", Users.Adresse2, Users.CodePostal, Users.Ville, Users.Telephone, \r\n            " +
                "          Users.Mobile, Users.EMail, Users.DateCreat, Users.DateModif, Users.Dat" +
                "eNaissance, Users.HeureMois, Users.TauxNormal, Users.TauxSup1, Users.TauxSup2, \r" +
                "\n                      Users.Fonction, Users.TauxSup3, Users.Sexe, Users.Civilit" +
                "e, Users.NumCI, Users.NumSS, Users.NumHoraire, Users.CheckAutoDeclar, Users.Chec" +
                "kBadge, \r\n                      Users.CheckEmpreinte, Users.CheckPin, Users.Code" +
                "Pin, Users.TauxSup0, Users.TypeTemps, Users.Modified, Users.BadgeEncoded, Users." +
                "NumContrat, \r\n                      Users.TypeUser, Users.IdUser1, Users.IdUser2" +
                ", Users.IdUser3, Users.UpdateLecNow, Users.JourRepos1, Users.JourRepos2, Users.N" +
                "bJrsCongesAnnuels, \r\n                      Users.LieuNaiss, Users.DateCI, Users." +
                "NumPermis, Users.DatePermis, Users.AncienNumBadge, Users.TypeAd, Users.Mdp, User" +
                "s.UserLogin, \r\n                      Users.CheckPointageWeb, Users.Observations," +
                " Users.DateFinMichoc, Users.CheckBlocageJoursRepos, Users.CheckPremierPointage, " +
                "UsersBioData.BioData, \r\n                      dbo.UsersBioData.Photo, dbo.Servic" +
                "es.NomService, dbo.Droits.LibelleDroit\r\nFROM         dbo.Users LEFT OUTER JOIN\r\n" +
                "                      dbo.Services ON Users.NumService = dbo.Services.NumService" +
                " LEFT OUTER JOIN\r\n                      dbo.Droits ON Users.NumDroitAcces = dbo." +
                "Droits.NumDroit LEFT OUTER JOIN\r\n                      dbo.UsersBioData ON Users" +
                ".Matricule = dbo.UsersBioData.Matricule\r\n\r\nwhere dbo.Users.Matricule=?\r\nORDER BY" +
                " dbo.Users.DateCreat DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE Users where Matricule=?";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"
Declare @DateDebut DateTime
Declare @DateFin DateTime
Declare @numPermis NVarChar(30)
Declare @matricule NVarChar(30)
Declare @nom NVarChar(30)
Declare @prenom NVarChar(30)


set @dateDebut  = ?
set @dateFin  = ?
set @numPermis = ?
set @matricule = ?
set @nom = ?
set @prenom = ?


        
SELECT u.IdUser,u.Matricule,u.Nom,u.Prenom,RIGHT('000000' + Convert(varchar,u.NumBadge ), 6) as NumBadge, e.Reference from dbo.Users u left join (select  Reference from Events where Instant between @dateDebut   and @dateFin  
group by  Reference) e  on  u.Matricule= e.Reference
where e.Reference is null
 

AND 1 = CASE  
              WHEN @numPermis  IS NULL THEN 1 
              WHEN u.NumBadge  LIKE  +@numPermis+ '%'    THEN 1 
              ELSE 0 
       END
 AND 1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN u.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN u.Nom  LIKE  +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @prenom  IS NULL THEN 1 
              WHEN u.Prenom  LIKE  +@prenom+ '%'    THEN 1 
              ELSE 0 
       END 

                                         
    ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"
SELECT 

           Users.IdUser ,Users.Matricule, Users.Nom, Users.Prenom, Users.NumService, Users.FlagAutorise, Users.DateDebut , Users.DateFin, Users.NumDroitAcces, 
                    RIGHT('000000' + Convert(varchar,Users.NumBadge ), 6) as NumBadge, Users.Ville, Users.Telephone, Users.BadgeEncoded, Users.NumPermis,Users.AncienNumBadge,
                         Droits.LibelleDroit
            
          
    
            
                                                                               
           FROM    dbo.Users LEFT OUTER JOIN
                         dbo.Droits ON dbo.Users.NumDroitAcces = dbo.Droits.NumDroit 
          
        

";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "\r\nDeclare @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDeclare @prenom NVa" +
                "rChar(30)\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @rbautoriseValue NVarChar(5)" +
                "\r\nDeclare @rbEnroler  NVarChar(30)\r\nDeclare @rbCoderValue Int\r\n\r\n\r\n\r\n\r\n\r\nset @ma" +
                "tricule = ?\r\nset @nom = ?\r\nset @prenom = ?\r\nset @numPermis = ?\r\nset @rbautoriseV" +
                "alue = ?\r\nset @rbEnroler  = ?\r\nset @rbCoderValue = ?\r\n\r\n\r\n     \r\nSELECT \r\n\r\n    " +
                "       Users.IdUser ,Users.Matricule, Users.Nom, Users.Prenom, Users.NumService," +
                " Users.FlagAutorise, Users.DateDebut , Users.DateFin, Users.NumDroitAcces, \r\n   " +
                "                RIGHT(\'000000\' + Convert(varchar,Users.NumBadge ), 6) as NumBadg" +
                "e   , Users.Ville, Users.Telephone, Users.BadgeEncoded, Users.NumPermis,Users.An" +
                "cienNumBadge,\r\n                         Droits.LibelleDroit\r\n            \r\n     " +
                "     \r\n    \r\n            \r\n                                                     " +
                "                          \r\n           FROM    dbo.Users LEFT OUTER JOIN\r\n      " +
                "                   dbo.Droits ON Users.NumDroitAcces = dbo.Droits.NumDroit \r\n   " +
                "                       LEFT OUTER JOIN dbo.UsersBioData ON dbo.Users.Matricule =" +
                " dbo.UsersBioData.Matricule \r\n          \r\n        \r\nWHERE \r\n 1 = CASE\r\n         " +
                "       WHEN @rbEnroler  = -1  THEN 1 \r\n                  WHEN  @rbEnroler  = 1 T" +
                "HEN case WHEN  dbo.UsersBioData.BioData is not null THEN 1\r\n               ELSE " +
                "0\r\n               END\r\n              WHEN  @rbEnroler  = 0  THEN case WHEN   dbo" +
                ".UsersBioData.BioData is null THEN 1\r\n               ELSE 0\r\n               END\r" +
                "\n              ELSE 0\r\n       END \r\n\r\n AND 1 = CASE  \r\n              WHEN @matri" +
                "cule  IS NULL THEN 1 \r\n              WHEN dbo.Users.Matricule  LIKE  +@matricule" +
                "+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END        \r\n  AND  1 = CASE  \r\n" +
                "              WHEN @nom  IS NULL THEN 1 \r\n              WHEN dbo.Users.Nom  LIKE" +
                "  +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n" +
                "              WHEN @prenom  IS NULL THEN 1 \r\n              WHEN dbo.Users.Prenom" +
                "  LIKE  +@prenom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND  1 =" +
                " CASE  \r\n              WHEN @numPermis  IS NULL THEN 1 \r\n              WHEN dbo." +
                "Users.NumBadge  LIKE  +@numPermis+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n      " +
                " END\r\n  AND  1 = CASE  \r\n              WHEN @rbautoriseValue  IS NULL THEN 1 \r\n " +
                "             WHEN dbo.Users.FlagAutorise  =@rbautoriseValue THEN 1 \r\n           " +
                "   ELSE 0 \r\n       END\r\n\r\n  AND  1 = CASE  \r\n              WHEN @rbCoderValue IS" +
                " NULL THEN 1 \r\n              WHEN dbo.Users.BadgeEncoded=@rbCoderValue     THEN " +
                "1 \r\n              ELSE 0 \r\n       END                                           " +
                "      \r\n\r\n";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbEnroler", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbCoderValue", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "Declare @Index Int\r\nDeclare @DateDebut DateTime\r\nDeclare @DateFin DateTime\r\nDecla" +
                "re @numPermis NVarChar(30)\r\nDeclare @matricule NVarChar(30)\r\nDeclare @nom NVarCh" +
                "ar(30)\r\nDeclare @prenom NVarChar(30)\r\n\r\nset @Index = ?\r\nset @dateDebut  = ?\r\nset" +
                " @dateFin  = ?\r\nset @numPermis = ?\r\nset @matricule = ?\r\nset @nom = ?\r\nset @preno" +
                "m = ?\r\n\r\n\r\nselect * from (          \r\nSELECT \r\nROW_NUMBER() OVER (ORDER BY u.Dat" +
                "eCreat DESC ) AS RowNum, u.IdUser,u.Matricule,u.Nom,u.Prenom,RIGHT(\'000000\' + Co" +
                "nvert(varchar,u.NumBadge ), 6) as NumBadge  , e.Reference from dbo.Users u left " +
                "join (select  Reference from Events where Instant between @dateDebut   and @date" +
                "Fin  \r\ngroup by  Reference) e  on  u.Matricule= e.Reference\r\nwhere e.Reference i" +
                "s null\r\n \r\n\r\nAND 1 = CASE  \r\n              WHEN @numPermis  IS NULL THEN 1 \r\n   " +
                "           WHEN u.NumBadge  LIKE  +@numPermis+ \'%\'    THEN 1 \r\n              ELS" +
                "E 0 \r\n       END\r\n AND 1 = CASE  \r\n              WHEN @matricule  IS NULL THEN 1" +
                " \r\n              WHEN u.Matricule  LIKE  +@matricule+ \'%\'    THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END        \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS " +
                "NULL THEN 1 \r\n              WHEN u.Nom  LIKE  +@nom+ \'%\'    THEN 1 \r\n           " +
                "   ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n              WHEN @prenom  IS NULL " +
                "THEN 1 \r\n              WHEN u.Prenom  LIKE  +@prenom+ \'%\'    THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END \r\n\r\n                                         \r\n    ) as " +
                "TableUsersAbsents\r\n\r\nWHERE ( TableUsersAbsents.RowNum   BETWEEN  (@Index*15)-14 " +
                " AND (@Index * 15))";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = @"select u.IdUser,u.NumBadge,  u.Matricule,u.Nom,u.Prenom,u.NumService,
	(	select Min(Instant) 
	) as DateDebut
	,
	(	select Max(Instant)
	where  Min(Instant)!=Max(Instant)
		
	) as DateFin
from Events as e right join Users as u on e.Reference=u.Matricule and e.Instant Between  ? and ? 

group by u.IdUser, u.NumBadge, u.Matricule,u.Nom,u.Prenom,u.NumService";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Param1", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Param2", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT IdUser From Users Where Matricule=?";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "Declare @NumListe  Int\r\nDeclare @numPermis Nvarchar(30)\r\nDeclare @matricule  Nvar" +
                "char(30)\r\nDeclare @nom  Nvarchar(30)\r\nDeclare @prenom  Nvarchar(30)\r\nDeclare @mo" +
                "tif  Nvarchar(30)\r\n\r\nset @NumListe  = ?\r\nset @numPermis = ?\r\nset @matricule = ?\r" +
                "\nset @nom  = ?\r\nset @prenom  = ?\r\nset @motif  =?\r\n\r\n\r\nSELECT    row_number() OVE" +
                "R (ORDER BY Users.IdUser DESC) IdUser  , Users.Matricule,\r\nRIGHT(\'000000\' + Conv" +
                "ert(varchar,Users.NumBadge ), 6) as NumBadge, Users.Nom, Users.Prenom, Listes.Li" +
                "belle AS LibelleListe, Motifs.LibelleMotif AS Motif\r\nFROM         dbo.ListesUser" +
                "s \r\n               LEFT OUTER JOIN\r\n                      dbo.Listes ON dbo.List" +
                "esUsers.NumListe = Listes.Num \r\n               LEFT OUTER JOIN\r\n                " +
                "      dbo.Users ON dbo.ListesUsers.IdUser = Users.IdUser\r\n               LEFT OU" +
                "TER JOIN\r\n                      dbo.Motifs ON dbo.ListesUsers.IdMotif = Motifs.I" +
                "dMotif\r\n\r\n\r\nWHERE   (dbo.ListesUsers.NumListe = @NumListe ) \r\n\r\nAND   1 = CASE  " +
                "\r\n              WHEN @numPermis IS NULL THEN 1 \r\n              WHEN dbo.Users.Nu" +
                "mBadge  LIKE  +@numPermis + \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n" +
                "\r\nAND   1 = CASE  \r\n              WHEN @matricule  IS NULL THEN 1 \r\n            " +
                "  WHEN dbo.Users.Matricule  LIKE  +@matricule+ \'%\'    THEN 1 \r\n              ELS" +
                "E 0 \r\n       END        \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS NULL TH" +
                "EN 1 \r\n              WHEN dbo.Users.Nom  LIKE  +@nom+ \'%\'    THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n              WHEN @prenom  IS NULL" +
                " THEN 1 \r\n              WHEN dbo.Users.Prenom  LIKE  +@prenom+ \'%\'    THEN 1 \r\n " +
                "             ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n              WHEN @motif  " +
                "IS NULL THEN 1 \r\n              WHEN dbo.Motifs.LibelleMotif  LIKE  +@motif+ \'%\' " +
                "   THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("motif", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = @"Declare @NumListe  Int
Declare @matricule  Nvarchar(30)
Declare @nom  Nvarchar(30)
Declare @prenom  Nvarchar(30)
Declare @motif  Nvarchar(30)

set @NumListe  = ?
set @matricule = ?
set @nom  = ?
set @prenom  = ?
set @motif  =?


Select Operateurs.ID as IdUser,Operateurs.ID as Matricule,Operateurs.Nom,Operateurs.Prenom,Listes.Libelle AS LibelleListe, Motifs.LibelleMotif AS Motif
  from ListesUsers
  Left outer join Listes ON ListesUsers.NumListe= Listes.Num
   LEFT OUTER JOIN Motifs ON ListesUsers.IdMotif = Motifs.IdMotif
  Left outer join Operateurs ON ListesUsers.IdUser=Operateurs.ID
  
  Where (ListesUsers.NumListe=@NumListe)
AND   1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Operateurs.ID  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Operateurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @prenom  IS NULL THEN 1 
              WHEN Operateurs.Prenom  LIKE +@prenom+ '%'    THEN 1 
              ELSE 0 
       END
  AND  1 = CASE  
              WHEN @motif  IS NULL THEN 1 
              WHEN Motifs.LibelleMotif  LIKE  +@motif+ '%'    THEN 1 
              ELSE 0 
       END";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("motif", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = @"Declare @NumListe  Int
Declare @matricule  Nvarchar(30)
Declare @nom  Nvarchar(30)
Declare @prenom  Nvarchar(30)
Declare @motif  Nvarchar(30)

set @NumListe = ?
set @matricule = ?
set @nom  = ?
set @prenom  = ?
set @motif  = ?

SELECT    row_number() OVER (ORDER BY Visiteurs.IdUser DESC) IdUser  , Visiteurs.Matricule, Visiteurs.Nom, Visiteurs.Prenom, Listes.Libelle AS LibelleListe, Motifs.LibelleMotif AS Motif
FROM         ListesUsers 
               LEFT OUTER JOIN
                      Listes ON ListesUsers.NumListe = Listes.Num 
               LEFT OUTER JOIN
                      Visiteurs ON ListesUsers.IdUser = Visiteurs.IdUser
               LEFT OUTER JOIN
                      Motifs ON ListesUsers.IdMotif = Motifs.IdMotif

WHERE     (ListesUsers.NumListe =@NumListe) 
AND   1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE  +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @prenom  IS NULL THEN 1 
              WHEN Visiteurs.Prenom  LIKE  +@prenom+ '%'    THEN 1 
              ELSE 0 
       END
  AND  1 = CASE  
              WHEN @motif  IS NULL THEN 1 
              WHEN Motifs.LibelleMotif  LIKE  +@motif+ '%'    THEN 1 
              ELSE 0 
       END

";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("motif", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "select Matricule from Users where NumBadge=?";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "SELECT        MAX(IdUser)  AS MaxId\r\nFROM            Users";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = "select *  from Users where Matricule =?";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[14].Connection = this.Connection;
            this._commandCollection[14].CommandText = "SELECT        Users.IdUser, Users.Matricule, Users.Nom, Users.Prenom, RIGHT(\'0000" +
                "00\' + Convert(varchar,Users.NumBadge ), 6) as NumBadge\r\nFROM             Users\r\n" +
                "Order By Users.Nom,Users.Prenom";
            this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[15] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[15].Connection = this.Connection;
            this._commandCollection[15].CommandText = "select RIGHT(\'000000\' + Convert(varchar,NumBadge ), 6) as NumBadge from Users whe" +
                "re Matricule=?";
            this._commandCollection[15].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[16].Connection = this.Connection;
            this._commandCollection[16].CommandText = "select count(*) from Users";
            this._commandCollection[16].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[17] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[17].Connection = this.Connection;
            this._commandCollection[17].CommandText = "SELECT        COUNT(*) AS Total\r\n from Users u left join (select  Reference from " +
                "Events where Instant between ?   and ? \r\ngroup by  Reference) e  on  u.Matricule" +
                "= e.Reference\r\nwhere e.Reference is null\r\n ";
            this._commandCollection[17].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[18].Connection = this.Connection;
            this._commandCollection[18].CommandText = @"
Declare @DateDebut DateTime
Declare @DateFin DateTime
Declare @numPermis NVarChar(30)
Declare @matricule NVarChar(30)
Declare @nom NVarChar(30)
Declare @prenom NVarChar(30)


set @dateDebut  = ?
set @dateFin  = ?
set @numPermis = ?
set @matricule = ?
set @nom = ?
set @prenom = ?



SELECT        COUNT(*) AS Total
 from Users u left join (select  Reference from Events where Instant between @dateDebut   and @dateFin  
group by  Reference) e  on  u.Matricule= e.Reference
where e.Reference is null
 

AND 1 = CASE  
              WHEN @numPermis  IS NULL THEN 1 
              WHEN u.NumBadge  LIKE  +@numPermis+ '%'    THEN 1 
              ELSE 0 
       END
 AND 1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN u.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN u.Nom  LIKE  +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @prenom  IS NULL THEN 1 
              WHEN u.Prenom  LIKE  +@prenom+ '%'    THEN 1 
              ELSE 0 
       END 

                                         
   ";
            this._commandCollection[18].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[19].Connection = this.Connection;
            this._commandCollection[19].CommandText = "Declare @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDeclare @prenom NVarC" +
                "har(30)\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @rbautoriseValue NVarChar(5)\r\n" +
                "Declare @rbEnroler  NVarChar(30)\r\nDeclare @rbCoderValue Int\r\n\r\nset @matricule = " +
                "?\r\nset @nom = ?\r\nset @prenom = ?\r\nset @numPermis = ?\r\nset @rbautoriseValue = ?\r\n" +
                "set @rbEnroler  = ?\r\nset @rbCoderValue = ?\r\n\r\n\r\nSELECT        COUNT(*) AS Total\r" +
                "\n\r\nFROM           Users  LEFT OUTER JOIN UsersBioData ON Users.Matricule = Users" +
                "BioData.Matricule \r\n\r\nWHERE  1 = CASE\r\n                WHEN @rbEnroler  = -1  TH" +
                "EN 1 \r\n                  WHEN  @rbEnroler  = 1 THEN case WHEN  UsersBioData.BioD" +
                "ata is not null THEN 1\r\n               ELSE 0\r\n               END\r\n             " +
                " WHEN  @rbEnroler  = 0  THEN case WHEN   UsersBioData.BioData is null THEN 1\r\n  " +
                "             ELSE 0\r\n               END\r\n              ELSE 0\r\n       END \r\n\r\n A" +
                "ND 1 = CASE  \r\n              WHEN @matricule  IS NULL THEN 1 \r\n              WHE" +
                "N Users.Matricule  LIKE  +@matricule+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n   " +
                "    END        \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n  " +
                "            WHEN Users.Nom  LIKE +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n " +
                "      END \r\n  AND  1 = CASE  \r\n              WHEN @prenom  IS NULL THEN 1 \r\n    " +
                "          WHEN Users.Prenom  LIKE +@prenom+ \'%\'    THEN 1 \r\n              ELSE 0" +
                " \r\n       END \r\n  AND  1 = CASE  \r\n              WHEN @numPermis  IS NULL THEN 1" +
                " \r\n              WHEN Users.NumBadge  LIKE  +@numPermis+ \'%\'    THEN 1 \r\n       " +
                "       ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n              WHEN @rbautoriseVal" +
                "ue  IS NULL THEN 1 \r\n              WHEN Users.FlagAutorise =@rbautoriseValue   T" +
                "HEN 1 \r\n              ELSE 0 \r\n       END\r\n AND  1 = CASE  \r\n              WHEN " +
                "@rbCoderValue IS NULL THEN 1 \r\n              WHEN Users.BadgeEncoded=@rbCoderVal" +
                "ue     THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n\r\n\r\n\r\n\r\n\r\n";
            this._commandCollection[19].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbEnroler", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbCoderValue", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[20].Connection = this.Connection;
            this._commandCollection[20].CommandText = "Declare @Index Int\r\nDeclare @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nD" +
                "eclare @prenom NVarChar(30)\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @rbautoris" +
                "eValue NVarChar(5)\r\n\r\nDeclare @rbCoderValue Int\r\n\r\n\r\n\r\n\r\n\r\nset @Index = ?\r\nset @" +
                "matricule = ?\r\nset @nom = ?\r\nset @prenom = ?\r\nset @numPermis = ?\r\nset @rbautoris" +
                "eValue = ?\r\n\r\nset @rbCoderValue = ?\r\n\r\n\r\nselect * from (          \r\nSELECT \r\nROW" +
                "_NUMBER() OVER (ORDER BY Users.DateCreat DESC ) AS RowNum,\r\n           Users.IdU" +
                "ser ,Users.Matricule, Users.Nom, Users.Prenom, Users.NumService, Users.FlagAutor" +
                "ise, Users.DateDebut , Users.DateFin, Users.NumDroitAcces,  RIGHT(\'000000\' + Con" +
                "vert(varchar,Users.NumBadge ), 6) as NumBadge , Users.Ville, Users.Telephone, Us" +
                "ers.BadgeEncoded, Users.NumPermis,Users.AncienNumBadge,\r\n                       " +
                "  Droits.LibelleDroit\r\n            \r\n          \r\n    \r\n            \r\n           " +
                "                                                                    \r\n          " +
                " FROM    dbo.Users LEFT OUTER JOIN\r\n                         dbo.Droits ON dbo.U" +
                "sers.NumDroitAcces = dbo.Droits.NumDroit \r\n          \r\n        \r\nWHERE \r\n 1 = CA" +
                "SE  \r\n              WHEN @matricule  IS NULL THEN 1 \r\n              WHEN Users.M" +
                "atricule  LIKE  +@matricule+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END  " +
                "      \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n           " +
                "   WHEN Users.Nom  LIKE  +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       EN" +
                "D \r\n  AND  1 = CASE  \r\n              WHEN @prenom  IS NULL THEN 1 \r\n            " +
                "  WHEN Users.Prenom  LIKE  +@prenom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n    " +
                "   END \r\n  AND  1 = CASE  \r\n              WHEN @numPermis  IS NULL THEN 1 \r\n    " +
                "          WHEN Users.NumBadge  LIKE  +@numPermis+ \'%\'    THEN 1 \r\n              " +
                "ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n              WHEN @rbautoriseValue  IS " +
                "NULL THEN 1 \r\n              WHEN Users.FlagAutorise  =@rbautoriseValue THEN 1 \r\n" +
                "              ELSE 0 \r\n       END\r\n\r\n  AND  1 = CASE  \r\n              WHEN @rbCo" +
                "derValue IS NULL THEN 1 \r\n              WHEN Users.BadgeEncoded=@rbCoderValue   " +
                "  THEN 1 \r\n              ELSE 0 \r\n       END                                    " +
                "             \r\n    ) as TableUsers\r\n    \r\n WHERE ( TableUsers.RowNum   BETWEEN  " +
                "(@Index*15)-14  AND (@Index * 15))\r\n";
            this._commandCollection[20].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbCoderValue", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[21].Connection = this.Connection;
            this._commandCollection[21].CommandText = "Declare @Index Int\r\nDeclare @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nD" +
                "eclare @prenom NVarChar(30)\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @rbautoris" +
                "eValue NVarChar(5)\r\nDeclare @rbEnroler  NVarChar(30)\r\nDeclare @rbCoderValue Int\r" +
                "\n\r\n\r\n\r\n\r\n\r\nset @Index = ?\r\nset @matricule = ?\r\nset @nom = ?\r\nset @prenom = ?\r\nse" +
                "t @numPermis = ?\r\nset @rbautoriseValue = ?\r\nset @rbEnroler  = ?\r\nset @rbCoderVal" +
                "ue = ?\r\n\r\n\r\nselect * from (          \r\nSELECT \r\nROW_NUMBER() OVER (ORDER BY User" +
                "s.DateCreat DESC ) AS RowNum,\r\n           Users.IdUser ,Users.Matricule, Users.N" +
                "om, Users.Prenom, Users.NumService, Users.FlagAutorise, Users.DateDebut , Users." +
                "DateFin, Users.NumDroitAcces, \r\n                      Users.NumBadge, Users.Vill" +
                "e, Users.Telephone, Users.BadgeEncoded, Users.NumPermis,Users.AncienNumBadge,\r\n " +
                "                        Droits.LibelleDroit\r\n            \r\n          \r\n    \r\n   " +
                "         \r\n                                                                     " +
                "          \r\n           FROM    Users LEFT OUTER JOIN\r\n                         D" +
                "roits ON Users.NumDroitAcces = Droits.NumDroit \r\n          LEFT OUTER JOIN Users" +
                "BioData ON Users.Matricule = UsersBioData.Matricule \r\n        \r\nWHERE  1 = CASE\r" +
                "\n                WHEN @rbEnroler  = -1  THEN 1 \r\n                  WHEN  @rbEnro" +
                "ler  = 1 THEN case WHEN  UsersBioData.BioData is not null THEN 1\r\n              " +
                " ELSE 0\r\n               END\r\n              WHEN  @rbEnroler  = 0  THEN case WHEN" +
                "   UsersBioData.BioData is null THEN 1\r\n               ELSE 0\r\n               EN" +
                "D\r\n              ELSE 0\r\n       END \r\n\r\n AND 1 = CASE  \r\n              WHEN @mat" +
                "ricule  IS NULL THEN 1 \r\n              WHEN Users.Matricule  LIKE  +@matricule+ " +
                "\'%\'    THEN 1 \r\n              ELSE 0 \r\n       END        \r\n  AND  1 = CASE  \r\n  " +
                "            WHEN @nom  IS NULL THEN 1 \r\n              WHEN Users.Nom  LIKE  +@no" +
                "m+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n      " +
                "        WHEN @prenom  IS NULL THEN 1 \r\n              WHEN Users.Prenom  LIKE  +@" +
                "prenom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n  " +
                "            WHEN @numPermis  IS NULL THEN 1 \r\n              WHEN Users.NumBadge " +
                " LIKE  +@numPermis+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END\r\n  AND  1 " +
                "= CASE  \r\n              WHEN @rbautoriseValue  IS NULL THEN 1 \r\n              WH" +
                "EN Users.FlagAutorise  =@rbautoriseValue THEN 1 \r\n              ELSE 0 \r\n       " +
                "END\r\n\r\n  AND  1 = CASE  \r\n              WHEN @rbCoderValue IS NULL THEN 1 \r\n    " +
                "          WHEN Users.BadgeEncoded=@rbCoderValue     THEN 1 \r\n              ELSE " +
                "0 \r\n       END                                                 \r\n    ) as TableU" +
                "sers\r\n    \r\n WHERE ( TableUsers.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * " +
                "15))\r\n";
            this._commandCollection[21].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbEnroler", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbCoder", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[22].Connection = this.Connection;
            this._commandCollection[22].CommandText = @"INSERT INTO Users
                         (IdUser, Matricule, Nom, Prenom, NumService, Tel, Fax, FlagAutorise, DateDebut, DateFin, NumDroitAcces, NumBadge, NumCode, NbEmpreintes, Adresse1, 
                         Adresse2, CodePostal, Ville, Telephone, Mobile, EMail, DateCreat, DateModif, DateNaissance, HeureMois, TauxNormal, TauxSup1, TauxSup2, Fonction, TauxSup3, 
                         Sexe, Civilite, NumCI, NumSS, NumHoraire, CheckAutoDeclar, CheckBadge, CheckEmpreinte, CheckPin, CodePin, TauxSup0, TypeTemps, Modified, BadgeEncoded, 
                         NumContrat, TypeUser, IdUser1, IdUser2, IdUser3, UpdateLecNow, JourRepos1, JourRepos2, NbJrsCongesAnnuels, LieuNaiss, DateCI, NumPermis, DatePermis, 
                         AncienNumBadge, TypeAd, Mdp, UserLogin, CheckPointageWeb, Observations, DateFinMichoc, CheckBlocageJoursRepos, CheckPremierPointage)
VALUES        (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            this._commandCollection[22].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumService", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Tel", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tel", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fax", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fax", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumDroitAcces", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumDroitAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCode", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCode", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbEmpreintes", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbEmpreintes", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse1", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse2", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePostal", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePostal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Ville", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ville", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Telephone", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Telephone", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mobile", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mobile", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("EMail", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMail", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateNaissance", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateNaissance", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("HeureMois", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeureMois", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxNormal", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxNormal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fonction", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fonction", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Sexe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sexe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Civilite", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Civilite", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCI", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCI", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumSS", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumSS", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumHoraire", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumHoraire", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckAutoDeclar", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckAutoDeclar", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBadge", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckEmpreinte", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPin", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePin", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup0", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup0", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTemps", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTemps", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modified", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modified", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("BadgeEncoded", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BadgeEncoded", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumContrat", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumContrat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("UpdateLecNow", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UpdateLecNow", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbJrsCongesAnnuels", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbJrsCongesAnnuels", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LieuNaiss", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LieuNaiss", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCI", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCI", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumPermis", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumPermis", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DatePermis", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DatePermis", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("AncienNumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AncienNumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeAd", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeAd", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mdp", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mdp", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("UserLogin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UserLogin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPointageWeb", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPointageWeb", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Observations", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Observations", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFinMichoc", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFinMichoc", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBlocageJoursRepos", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBlocageJoursRepos", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPremierPointage", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPremierPointage", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[23] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[23].Connection = this.Connection;
            this._commandCollection[23].CommandText = "Select count (*) from Users where Matricule=?";
            this._commandCollection[23].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[23].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[24].Connection = this.Connection;
            this._commandCollection[24].CommandText = "UPDATE Users Set FlagAutorise=?, Modified=1\r\nWhere Matricule=? ";
            this._commandCollection[24].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[25] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[25].Connection = this.Connection;
            this._commandCollection[25].CommandText = "UPDATE       Users\r\nSET                UpdateLecNow = 1, Modified=1\r\nwhere  Matri" +
                "cule = ?";
            this._commandCollection[25].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[25].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[26] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[26].Connection = this.Connection;
            this._commandCollection[26].CommandText = @"UPDATE       Users
SET             
 Nom =?, Prenom=?, NumService =?, Tel =?, Fax =?, FlagAutorise=?, DateDebut=?, DateFin=?, NumDroitAcces=?, NumBadge=?, NumCode=?, NbEmpreintes=?, Adresse1=?, Adresse2=?, 
                      CodePostal=?, Ville=?, Telephone=?, Mobile=?, EMail=?, DateCreat=?, DateModif=?, DateNaissance=?, HeureMois=?, TauxNormal=?, TauxSup1=?, TauxSup2=?, Fonction=?, TauxSup3=?, Sexe=?, 
                      Civilite=?, NumCI=?, NumSS=?, NumHoraire=?, CheckAutoDeclar=?, CheckBadge=?, CheckEmpreinte=?, CheckPin=?, CodePin=?, TauxSup0=?, TypeTemps=?, Modified=?, BadgeEncoded=?, 
                      NumContrat=?, TypeUser=?, IdUser1=?, IdUser2=?, IdUser3=?, UpdateLecNow=?, JourRepos1=?, JourRepos2=?, NbJrsCongesAnnuels=?, LieuNaiss=?, DateCI=?, NumPermis=?, DatePermis=?, 
                      AncienNumBadge=?, TypeAd=?, Mdp=?, UserLogin=?, CheckPointageWeb=?, Observations=?, DateFinMichoc=?, CheckBlocageJoursRepos=?, CheckPremierPointage=?


where Matricule =?";
            this._commandCollection[26].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumService", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Tel", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tel", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fax", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fax", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumDroitAcces", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumDroitAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCode", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCode", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbEmpreintes", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbEmpreintes", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse1", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse2", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePostal", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePostal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Ville", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ville", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Telephone", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Telephone", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mobile", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mobile", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("EMail", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMail", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateNaissance", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateNaissance", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("HeureMois", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeureMois", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxNormal", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxNormal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fonction", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fonction", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Sexe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sexe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Civilite", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Civilite", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCI", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCI", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumSS", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumSS", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumHoraire", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumHoraire", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckAutoDeclar", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckAutoDeclar", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBadge", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckEmpreinte", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPin", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePin", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup0", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup0", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTemps", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTemps", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modified", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modified", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("BadgeEncoded", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BadgeEncoded", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumContrat", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumContrat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("UpdateLecNow", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UpdateLecNow", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbJrsCongesAnnuels", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbJrsCongesAnnuels", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LieuNaiss", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LieuNaiss", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCI", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCI", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumPermis", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumPermis", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DatePermis", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DatePermis", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("AncienNumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AncienNumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeAd", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeAd", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mdp", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mdp", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("UserLogin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UserLogin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPointageWeb", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPointageWeb", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Observations", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Observations", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFinMichoc", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFinMichoc", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBlocageJoursRepos", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBlocageJoursRepos", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPremierPointage", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPremierPointage", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.UsersDataTable GetUserByMatricule(string Matricule) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Matricule == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Matricule));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetAllChauffeursAbsents(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string numPermis, string matricule, string nom, string prenom) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((dateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(prenom));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetAllUsers() {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetAllUsersByFiltre(string matricule, string nom, string prenom, string numPermis, string rbautoriseValue, string rbEnroler, global::System.Nullable<int> rbCoderValue) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(prenom));
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(numPermis));
            }
            if ((rbautoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(rbautoriseValue));
            }
            if ((rbEnroler == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(rbEnroler));
            }
            if ((rbCoderValue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(rbCoderValue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetChauffeursAbsents(global::System.Nullable<int> Index, global::System.Nullable<global::System.DateTime> DateDebut, global::System.Nullable<global::System.DateTime> DateFin, string numPermis, string matricule, string nom, string prenom) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(prenom));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetIdentificationsPeriode(System.DateTime Param1, System.DateTime Param2) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Param1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Param2));
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetListesByNumList(int NumListe, string numPermis, string matricule, string nom, string prenom, string motif) {
            this.Adapter.SelectCommand = this.CommandCollection[8];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(NumListe));
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(prenom));
            }
            if ((motif == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(motif));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetListesOperateurByNumList(int NumListe, string matricule, string nom, string prenom, string motif) {
            this.Adapter.SelectCommand = this.CommandCollection[9];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(NumListe));
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prenom));
            }
            if ((motif == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(motif));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetListesVisiteurByNumList(int NumListe, string matricule, string nom, string prenom, string motif) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(NumListe));
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prenom));
            }
            if ((motif == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(motif));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetNomByMatricule(string Matricule) {
            this.Adapter.SelectCommand = this.CommandCollection[13];
            if ((Matricule == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Matricule));
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetNomsComplets() {
            this.Adapter.SelectCommand = this.CommandCollection[14];
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetUsers(global::System.Nullable<int> Index, string matricule, string nom, string prenom, string numPermis, string rbautoriseValue, global::System.Nullable<int> rbCoderValue) {
            this.Adapter.SelectCommand = this.CommandCollection[20];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prenom));
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(numPermis));
            }
            if ((rbautoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(rbautoriseValue));
            }
            if ((rbCoderValue.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(rbCoderValue.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.UsersDataTable GetUsersEnroler(global::System.Nullable<int> Index, string matricule, string nom, string prenom, string numPermis, string rbautoriseValue, string rbEnroler, global::System.Nullable<int> rbCoder) {
            this.Adapter.SelectCommand = this.CommandCollection[21];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prenom));
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(numPermis));
            }
            if ((rbautoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(rbautoriseValue));
            }
            if ((rbEnroler == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(rbEnroler));
            }
            if ((rbCoder.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(rbCoder.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            MyDataSet.UsersDataTable dataTable = new MyDataSet.UsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUnUser(string Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((Matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetIdUser(string Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            if ((Matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GetMatricule(string NumBadge) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[11];
            if ((NumBadge == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumBadge));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetMaxIdUser() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[12];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetNumPermis(string Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[15];
            if ((Matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTotalUsers() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[16];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalUsersAbsents(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[17];
            if ((dateDebut.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalUsersAbsentsByFiltre(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string numPermis, string matricule, string nom, string prenom) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[18];
            if ((dateDebut.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numPermis == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(prenom));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalUsersByFiltre(string matricule, string nom, string prenom, string numPermis, string rbautoriseValue, string rbEnroler, global::System.Nullable<int> rbCoderValue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[19];
            if ((matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(prenom));
            }
            if ((numPermis == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(numPermis));
            }
            if ((rbautoriseValue == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(rbautoriseValue));
            }
            if ((rbEnroler == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(rbEnroler));
            }
            if ((rbCoderValue.HasValue == true)) {
                command.Parameters[6].Value = ((int)(rbCoderValue.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertUser(
                    int IdUser, 
                    string Matricule, 
                    string Nom, 
                    string Prenom, 
                    global::System.Nullable<int> NumService, 
                    string Tel, 
                    string Fax, 
                    string FlagAutorise, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    global::System.Nullable<int> NumDroitAcces, 
                    string NumBadge, 
                    string NumCode, 
                    global::System.Nullable<int> NbEmpreintes, 
                    string Adresse1, 
                    string Adresse2, 
                    string CodePostal, 
                    string Ville, 
                    string Telephone, 
                    string Mobile, 
                    string EMail, 
                    global::System.Nullable<global::System.DateTime> DateCreat, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    string DateNaissance, 
                    global::System.Nullable<int> HeureMois, 
                    global::System.Nullable<int> TauxNormal, 
                    global::System.Nullable<int> TauxSup1, 
                    global::System.Nullable<int> TauxSup2, 
                    string Fonction, 
                    global::System.Nullable<int> TauxSup3, 
                    global::System.Nullable<int> Sexe, 
                    global::System.Nullable<int> Civilite, 
                    string NumCI, 
                    string NumSS, 
                    global::System.Nullable<int> NumHoraire, 
                    global::System.Nullable<bool> CheckAutoDeclar, 
                    global::System.Nullable<bool> CheckBadge, 
                    global::System.Nullable<bool> CheckEmpreinte, 
                    global::System.Nullable<bool> CheckPin, 
                    global::System.Nullable<int> CodePin, 
                    global::System.Nullable<int> TauxSup0, 
                    global::System.Nullable<int> TypeTemps, 
                    global::System.Nullable<bool> Modified, 
                    global::System.Nullable<bool> BadgeEncoded, 
                    global::System.Nullable<int> NumContrat, 
                    global::System.Nullable<int> TypeUser, 
                    global::System.Nullable<int> IdUser1, 
                    global::System.Nullable<int> IdUser2, 
                    global::System.Nullable<int> IdUser3, 
                    global::System.Nullable<bool> UpdateLecNow, 
                    global::System.Nullable<int> JourRepos1, 
                    global::System.Nullable<int> JourRepos2, 
                    global::System.Nullable<int> NbJrsCongesAnnuels, 
                    string LieuNaiss, 
                    string DateCI, 
                    string NumPermis, 
                    string DatePermis, 
                    string AncienNumBadge, 
                    global::System.Nullable<int> TypeAd, 
                    string Mdp, 
                    string UserLogin, 
                    global::System.Nullable<bool> CheckPointageWeb, 
                    string Observations, 
                    global::System.Nullable<global::System.DateTime> DateFinMichoc, 
                    global::System.Nullable<bool> CheckBlocageJoursRepos, 
                    global::System.Nullable<bool> CheckPremierPointage) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[22];
            command.Parameters[0].Value = ((int)(IdUser));
            if ((Matricule == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Matricule));
            }
            if ((Nom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Prenom));
            }
            if ((NumService.HasValue == true)) {
                command.Parameters[4].Value = ((int)(NumService.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Tel == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Tel));
            }
            if ((Fax == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Fax));
            }
            if ((FlagAutorise == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(FlagAutorise));
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[8].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NumDroitAcces.HasValue == true)) {
                command.Parameters[10].Value = ((int)(NumDroitAcces.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NumBadge == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NumBadge));
            }
            if ((NumCode == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NumCode));
            }
            if ((NbEmpreintes.HasValue == true)) {
                command.Parameters[13].Value = ((int)(NbEmpreintes.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Adresse1 == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(Adresse1));
            }
            if ((Adresse2 == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Adresse2));
            }
            if ((CodePostal == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(CodePostal));
            }
            if ((Ville == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Ville));
            }
            if ((Telephone == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Telephone));
            }
            if ((Mobile == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(Mobile));
            }
            if ((EMail == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(EMail));
            }
            if ((DateCreat.HasValue == true)) {
                command.Parameters[21].Value = ((System.DateTime)(DateCreat.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[22].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((DateNaissance == null)) {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[23].Value = ((string)(DateNaissance));
            }
            if ((HeureMois.HasValue == true)) {
                command.Parameters[24].Value = ((int)(HeureMois.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((TauxNormal.HasValue == true)) {
                command.Parameters[25].Value = ((int)(TauxNormal.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((TauxSup1.HasValue == true)) {
                command.Parameters[26].Value = ((int)(TauxSup1.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((TauxSup2.HasValue == true)) {
                command.Parameters[27].Value = ((int)(TauxSup2.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Fonction == null)) {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[28].Value = ((string)(Fonction));
            }
            if ((TauxSup3.HasValue == true)) {
                command.Parameters[29].Value = ((int)(TauxSup3.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Sexe.HasValue == true)) {
                command.Parameters[30].Value = ((int)(Sexe.Value));
            }
            else {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((Civilite.HasValue == true)) {
                command.Parameters[31].Value = ((int)(Civilite.Value));
            }
            else {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((NumCI == null)) {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[32].Value = ((string)(NumCI));
            }
            if ((NumSS == null)) {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[33].Value = ((string)(NumSS));
            }
            if ((NumHoraire.HasValue == true)) {
                command.Parameters[34].Value = ((int)(NumHoraire.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CheckAutoDeclar.HasValue == true)) {
                command.Parameters[35].Value = ((bool)(CheckAutoDeclar.Value));
            }
            else {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CheckBadge.HasValue == true)) {
                command.Parameters[36].Value = ((bool)(CheckBadge.Value));
            }
            else {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CheckEmpreinte.HasValue == true)) {
                command.Parameters[37].Value = ((bool)(CheckEmpreinte.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((CheckPin.HasValue == true)) {
                command.Parameters[38].Value = ((bool)(CheckPin.Value));
            }
            else {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((CodePin.HasValue == true)) {
                command.Parameters[39].Value = ((int)(CodePin.Value));
            }
            else {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((TauxSup0.HasValue == true)) {
                command.Parameters[40].Value = ((int)(TauxSup0.Value));
            }
            else {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((TypeTemps.HasValue == true)) {
                command.Parameters[41].Value = ((int)(TypeTemps.Value));
            }
            else {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((Modified.HasValue == true)) {
                command.Parameters[42].Value = ((bool)(Modified.Value));
            }
            else {
                command.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((BadgeEncoded.HasValue == true)) {
                command.Parameters[43].Value = ((bool)(BadgeEncoded.Value));
            }
            else {
                command.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((NumContrat.HasValue == true)) {
                command.Parameters[44].Value = ((int)(NumContrat.Value));
            }
            else {
                command.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((TypeUser.HasValue == true)) {
                command.Parameters[45].Value = ((int)(TypeUser.Value));
            }
            else {
                command.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((IdUser1.HasValue == true)) {
                command.Parameters[46].Value = ((int)(IdUser1.Value));
            }
            else {
                command.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((IdUser2.HasValue == true)) {
                command.Parameters[47].Value = ((int)(IdUser2.Value));
            }
            else {
                command.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((IdUser3.HasValue == true)) {
                command.Parameters[48].Value = ((int)(IdUser3.Value));
            }
            else {
                command.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((UpdateLecNow.HasValue == true)) {
                command.Parameters[49].Value = ((bool)(UpdateLecNow.Value));
            }
            else {
                command.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((JourRepos1.HasValue == true)) {
                command.Parameters[50].Value = ((int)(JourRepos1.Value));
            }
            else {
                command.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((JourRepos2.HasValue == true)) {
                command.Parameters[51].Value = ((int)(JourRepos2.Value));
            }
            else {
                command.Parameters[51].Value = global::System.DBNull.Value;
            }
            if ((NbJrsCongesAnnuels.HasValue == true)) {
                command.Parameters[52].Value = ((int)(NbJrsCongesAnnuels.Value));
            }
            else {
                command.Parameters[52].Value = global::System.DBNull.Value;
            }
            if ((LieuNaiss == null)) {
                command.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[53].Value = ((string)(LieuNaiss));
            }
            if ((DateCI == null)) {
                command.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[54].Value = ((string)(DateCI));
            }
            if ((NumPermis == null)) {
                command.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[55].Value = ((string)(NumPermis));
            }
            if ((DatePermis == null)) {
                command.Parameters[56].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[56].Value = ((string)(DatePermis));
            }
            if ((AncienNumBadge == null)) {
                command.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[57].Value = ((string)(AncienNumBadge));
            }
            if ((TypeAd.HasValue == true)) {
                command.Parameters[58].Value = ((int)(TypeAd.Value));
            }
            else {
                command.Parameters[58].Value = global::System.DBNull.Value;
            }
            if ((Mdp == null)) {
                command.Parameters[59].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[59].Value = ((string)(Mdp));
            }
            if ((UserLogin == null)) {
                command.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[60].Value = ((string)(UserLogin));
            }
            if ((CheckPointageWeb.HasValue == true)) {
                command.Parameters[61].Value = ((bool)(CheckPointageWeb.Value));
            }
            else {
                command.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((Observations == null)) {
                command.Parameters[62].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[62].Value = ((string)(Observations));
            }
            if ((DateFinMichoc.HasValue == true)) {
                command.Parameters[63].Value = ((System.DateTime)(DateFinMichoc.Value));
            }
            else {
                command.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((CheckBlocageJoursRepos.HasValue == true)) {
                command.Parameters[64].Value = ((bool)(CheckBlocageJoursRepos.Value));
            }
            else {
                command.Parameters[64].Value = global::System.DBNull.Value;
            }
            if ((CheckPremierPointage.HasValue == true)) {
                command.Parameters[65].Value = ((bool)(CheckPremierPointage.Value));
            }
            else {
                command.Parameters[65].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object MatriculeExiste(string Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[23];
            if ((Matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int SetFlagAutorise(string FlagAutorise, string Original_Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[24];
            if ((FlagAutorise == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FlagAutorise));
            }
            if ((Original_Matricule == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Original_Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateLecteurNow(string Original_Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[25];
            if ((Original_Matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Original_Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateUser(
                    string Nom, 
                    string Prenom, 
                    global::System.Nullable<int> NumService, 
                    string Tel, 
                    string Fax, 
                    string FlagAutorise, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    global::System.Nullable<int> NumDroitAcces, 
                    string NumBadge, 
                    string NumCode, 
                    global::System.Nullable<int> NbEmpreintes, 
                    string Adresse1, 
                    string Adresse2, 
                    string CodePostal, 
                    string Ville, 
                    string Telephone, 
                    string Mobile, 
                    string EMail, 
                    global::System.Nullable<global::System.DateTime> DateCreat, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    string DateNaissance, 
                    global::System.Nullable<int> HeureMois, 
                    global::System.Nullable<int> TauxNormal, 
                    global::System.Nullable<int> TauxSup1, 
                    global::System.Nullable<int> TauxSup2, 
                    string Fonction, 
                    global::System.Nullable<int> TauxSup3, 
                    global::System.Nullable<int> Sexe, 
                    global::System.Nullable<int> Civilite, 
                    string NumCI, 
                    string NumSS, 
                    global::System.Nullable<int> NumHoraire, 
                    global::System.Nullable<bool> CheckAutoDeclar, 
                    global::System.Nullable<bool> CheckBadge, 
                    global::System.Nullable<bool> CheckEmpreinte, 
                    global::System.Nullable<bool> CheckPin, 
                    global::System.Nullable<int> CodePin, 
                    global::System.Nullable<int> TauxSup0, 
                    global::System.Nullable<int> TypeTemps, 
                    global::System.Nullable<bool> Modified, 
                    global::System.Nullable<bool> BadgeEncoded, 
                    global::System.Nullable<int> NumContrat, 
                    global::System.Nullable<int> TypeUser, 
                    global::System.Nullable<int> IdUser1, 
                    global::System.Nullable<int> IdUser2, 
                    global::System.Nullable<int> IdUser3, 
                    global::System.Nullable<bool> UpdateLecNow, 
                    global::System.Nullable<int> JourRepos1, 
                    global::System.Nullable<int> JourRepos2, 
                    global::System.Nullable<int> NbJrsCongesAnnuels, 
                    string LieuNaiss, 
                    string DateCI, 
                    string NumPermis, 
                    string DatePermis, 
                    string AncienNumBadge, 
                    global::System.Nullable<int> TypeAd, 
                    string Mdp, 
                    string UserLogin, 
                    global::System.Nullable<bool> CheckPointageWeb, 
                    string Observations, 
                    global::System.Nullable<global::System.DateTime> DateFinMichoc, 
                    global::System.Nullable<bool> CheckBlocageJoursRepos, 
                    global::System.Nullable<bool> CheckPremierPointage, 
                    string Original_Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[26];
            if ((Nom == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Prenom));
            }
            if ((NumService.HasValue == true)) {
                command.Parameters[2].Value = ((int)(NumService.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Tel == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Tel));
            }
            if ((Fax == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Fax));
            }
            if ((FlagAutorise == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(FlagAutorise));
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[7].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NumDroitAcces.HasValue == true)) {
                command.Parameters[8].Value = ((int)(NumDroitAcces.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NumBadge == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(NumBadge));
            }
            if ((NumCode == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(NumCode));
            }
            if ((NbEmpreintes.HasValue == true)) {
                command.Parameters[11].Value = ((int)(NbEmpreintes.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Adresse1 == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Adresse1));
            }
            if ((Adresse2 == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Adresse2));
            }
            if ((CodePostal == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(CodePostal));
            }
            if ((Ville == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Ville));
            }
            if ((Telephone == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Telephone));
            }
            if ((Mobile == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Mobile));
            }
            if ((EMail == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(EMail));
            }
            if ((DateCreat.HasValue == true)) {
                command.Parameters[19].Value = ((System.DateTime)(DateCreat.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[20].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((DateNaissance == null)) {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[21].Value = ((string)(DateNaissance));
            }
            if ((HeureMois.HasValue == true)) {
                command.Parameters[22].Value = ((int)(HeureMois.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TauxNormal.HasValue == true)) {
                command.Parameters[23].Value = ((int)(TauxNormal.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TauxSup1.HasValue == true)) {
                command.Parameters[24].Value = ((int)(TauxSup1.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((TauxSup2.HasValue == true)) {
                command.Parameters[25].Value = ((int)(TauxSup2.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((Fonction == null)) {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[26].Value = ((string)(Fonction));
            }
            if ((TauxSup3.HasValue == true)) {
                command.Parameters[27].Value = ((int)(TauxSup3.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Sexe.HasValue == true)) {
                command.Parameters[28].Value = ((int)(Sexe.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Civilite.HasValue == true)) {
                command.Parameters[29].Value = ((int)(Civilite.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((NumCI == null)) {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[30].Value = ((string)(NumCI));
            }
            if ((NumSS == null)) {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[31].Value = ((string)(NumSS));
            }
            if ((NumHoraire.HasValue == true)) {
                command.Parameters[32].Value = ((int)(NumHoraire.Value));
            }
            else {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CheckAutoDeclar.HasValue == true)) {
                command.Parameters[33].Value = ((bool)(CheckAutoDeclar.Value));
            }
            else {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CheckBadge.HasValue == true)) {
                command.Parameters[34].Value = ((bool)(CheckBadge.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CheckEmpreinte.HasValue == true)) {
                command.Parameters[35].Value = ((bool)(CheckEmpreinte.Value));
            }
            else {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CheckPin.HasValue == true)) {
                command.Parameters[36].Value = ((bool)(CheckPin.Value));
            }
            else {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CodePin.HasValue == true)) {
                command.Parameters[37].Value = ((int)(CodePin.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((TauxSup0.HasValue == true)) {
                command.Parameters[38].Value = ((int)(TauxSup0.Value));
            }
            else {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((TypeTemps.HasValue == true)) {
                command.Parameters[39].Value = ((int)(TypeTemps.Value));
            }
            else {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((Modified.HasValue == true)) {
                command.Parameters[40].Value = ((bool)(Modified.Value));
            }
            else {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((BadgeEncoded.HasValue == true)) {
                command.Parameters[41].Value = ((bool)(BadgeEncoded.Value));
            }
            else {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((NumContrat.HasValue == true)) {
                command.Parameters[42].Value = ((int)(NumContrat.Value));
            }
            else {
                command.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((TypeUser.HasValue == true)) {
                command.Parameters[43].Value = ((int)(TypeUser.Value));
            }
            else {
                command.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((IdUser1.HasValue == true)) {
                command.Parameters[44].Value = ((int)(IdUser1.Value));
            }
            else {
                command.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((IdUser2.HasValue == true)) {
                command.Parameters[45].Value = ((int)(IdUser2.Value));
            }
            else {
                command.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((IdUser3.HasValue == true)) {
                command.Parameters[46].Value = ((int)(IdUser3.Value));
            }
            else {
                command.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((UpdateLecNow.HasValue == true)) {
                command.Parameters[47].Value = ((bool)(UpdateLecNow.Value));
            }
            else {
                command.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((JourRepos1.HasValue == true)) {
                command.Parameters[48].Value = ((int)(JourRepos1.Value));
            }
            else {
                command.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((JourRepos2.HasValue == true)) {
                command.Parameters[49].Value = ((int)(JourRepos2.Value));
            }
            else {
                command.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((NbJrsCongesAnnuels.HasValue == true)) {
                command.Parameters[50].Value = ((int)(NbJrsCongesAnnuels.Value));
            }
            else {
                command.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((LieuNaiss == null)) {
                command.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[51].Value = ((string)(LieuNaiss));
            }
            if ((DateCI == null)) {
                command.Parameters[52].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[52].Value = ((string)(DateCI));
            }
            if ((NumPermis == null)) {
                command.Parameters[53].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[53].Value = ((string)(NumPermis));
            }
            if ((DatePermis == null)) {
                command.Parameters[54].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[54].Value = ((string)(DatePermis));
            }
            if ((AncienNumBadge == null)) {
                command.Parameters[55].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[55].Value = ((string)(AncienNumBadge));
            }
            if ((TypeAd.HasValue == true)) {
                command.Parameters[56].Value = ((int)(TypeAd.Value));
            }
            else {
                command.Parameters[56].Value = global::System.DBNull.Value;
            }
            if ((Mdp == null)) {
                command.Parameters[57].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[57].Value = ((string)(Mdp));
            }
            if ((UserLogin == null)) {
                command.Parameters[58].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[58].Value = ((string)(UserLogin));
            }
            if ((CheckPointageWeb.HasValue == true)) {
                command.Parameters[59].Value = ((bool)(CheckPointageWeb.Value));
            }
            else {
                command.Parameters[59].Value = global::System.DBNull.Value;
            }
            if ((Observations == null)) {
                command.Parameters[60].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[60].Value = ((string)(Observations));
            }
            if ((DateFinMichoc.HasValue == true)) {
                command.Parameters[61].Value = ((System.DateTime)(DateFinMichoc.Value));
            }
            else {
                command.Parameters[61].Value = global::System.DBNull.Value;
            }
            if ((CheckBlocageJoursRepos.HasValue == true)) {
                command.Parameters[62].Value = ((bool)(CheckBlocageJoursRepos.Value));
            }
            else {
                command.Parameters[62].Value = global::System.DBNull.Value;
            }
            if ((CheckPremierPointage.HasValue == true)) {
                command.Parameters[63].Value = ((bool)(CheckPremierPointage.Value));
            }
            else {
                command.Parameters[63].Value = global::System.DBNull.Value;
            }
            if ((Original_Matricule == null)) {
                command.Parameters[64].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[64].Value = ((string)(Original_Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class DroitsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DroitsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Droits";
            tableMapping.ColumnMappings.Add("NumDroit", "NumDroit");
            tableMapping.ColumnMappings.Add("LibelleDroit", "LibelleDroit");
            tableMapping.ColumnMappings.Add("IdPenalite", "IdPenalite");
            tableMapping.ColumnMappings.Add("IdBonification", "IdBonification");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Droits] ([NumDroit], [LibelleDroit], [IdPenalite], [IdBonification])" +
                " VALUES (?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumDroit", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumDroit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LibelleDroit", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleDroit", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdPenalite", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(0)), "IdPenalite", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdBonification", global::System.Data.Odbc.OdbcType.Numeric, 0, global::System.Data.ParameterDirection.Input, ((byte)(18)), ((byte)(0)), "IdBonification", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        NumDroit, LibelleDroit, IdPenalite, IdBonification\r\nFROM           " +
                " Droits";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.DroitsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.DroitsDataTable GetDroits() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.DroitsDataTable dataTable = new MyDataSet.DroitsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.DroitsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Droits");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class BadgesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public BadgesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Badges";
            tableMapping.ColumnMappings.Add("NumBadge", "NumBadge");
            tableMapping.ColumnMappings.Add("FlagAutorise", "FlagAutorise");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("Matricule", "Matricule");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[11];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT      RIGHT('000000' + Convert(varchar,Badges.NumBadge ), 6) as NumBadge, Badges.FlagAutorise, Users.Nom, Users.Prenom, Users.Matricule
FROM         Badges LEFT OUTER JOIN
                      Users on  Badges.NumBadge = Users.NumBadge
        order by   Badges.NumBadge desc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "Select count (*) from Badges where NumBadge=? ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE Badges where NumBadge = ?";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "Declare  @numBadge  NVarchar(30)\r\nDeclare  @rbautoriseValue NVarchar(30)\r\nDeclare" +
                "  @nom NVarchar(30)\r\nDeclare  @prenom NVarchar(30)\r\nDeclare  @matricule  NVarcha" +
                "r(30)\r\nDeclare @rbAttribue NVarchar(30)\r\n\r\n\r\nSET  @numBadge =  ?\r\nSET  @rbautori" +
                "seValue = ?\r\nSET  @nom = ?\r\nSET  @prenom = ?\r\nSET  @matricule = ?\r\nSET @rbAttrib" +
                "ue = ?\r\n\r\nSELECT   RIGHT(\'000000\' + Convert(varchar,Badges.NumBadge ), 6) as Num" +
                "Badge, Badges.FlagAutorise, Users.Nom, Users.Prenom, Users.Matricule\r\n\r\nFROM    " +
                "     dbo.Badges LEFT OUTER JOIN\r\n                      dbo.Users ON dbo.Badges.N" +
                "umBadge = dbo.Users.NumBadge\r\n    \r\n            \r\nWhere  \r\n1 = CASE\r\n           " +
                "  WHEN @rbAttribue  = -1  THEN 1 \r\n             WHEN  @rbAttribue  = 1 THEN case" +
                " WHEN   dbo.Users.Matricule is NOT null THEN 1\r\n                    ELSE 0\r\n    " +
                "               END\r\n              WHEN  @rbAttribue  = 0  THEN case WHEN   dbo.U" +
                "sers.Matricule is  null THEN 1\r\n                             ELSE 0\r\n           " +
                "         END\r\n              ELSE 0\r\n       END \r\n\r\n  AND  1 = CASE  \r\n          " +
                "    WHEN @numBadge  IS NULL THEN 1 \r\n              WHEN dbo.Badges.NumBadge  LIK" +
                "E +@numBadge+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n   AND  1 = CA" +
                "SE  \r\n              WHEN @rbautoriseValue  IS NULL THEN 1 \r\n              WHEN d" +
                "bo.Badges.FlagAutorise  =@rbautoriseValue   THEN 1 \r\n              ELSE 0 \r\n    " +
                "   END      \r\n              \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS NUL" +
                "L THEN 1 \r\n              WHEN dbo.Users.Nom  LIKE +@nom+ \'%\'    THEN 1 \r\n       " +
                "       ELSE 0 \r\n       END \r\n       \r\n  AND  1 = CASE  \r\n              WHEN @pre" +
                "nom  IS NULL THEN 1 \r\n              WHEN dbo.Users.Prenom LIKE +@prenom+ \'%\'    " +
                "THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND 1 = CASE  \r\n              WHE" +
                "N @matricule  IS NULL THEN 1 \r\n              WHEN dbo.Users.Matricule LIKE  +@ma" +
                "tricule+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n\r\norder by   dbo.Ba" +
                "dges.Id desc\r\n\r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numBadge", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbAttribue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "Declare  @Index int\r\nDeclare  @numBadge  NVarchar(30)\r\nDeclare  @rbautoriseValue " +
                "NVarchar(30)\r\nDeclare  @nom NVarchar(30)\r\nDeclare  @prenom NVarchar(30)\r\nDeclare" +
                "  @matricule  NVarchar(30)\r\nDeclare @rbAttribue NVarchar(30)\r\n\r\nSET  @Index = ?\r" +
                "\nSET  @numBadge =  ?\r\nSET  @rbautoriseValue = ?\r\nSET  @nom = ?\r\nSET  @prenom = ?" +
                "\r\nSET  @matricule = ?\r\nSET @rbAttribue = ?\r\n\r\nselect * from (\r\nSELECT ROW_NUMBER" +
                "() OVER (ORDER BY Badges.Id DESC ) AS Id,\r\n RIGHT(\'000000\' + Convert(varchar,Bad" +
                "ges.NumBadge ), 6) as NumBadge ,Badges.FlagAutorise, Users.Nom, Users.Prenom, Us" +
                "ers.Matricule\r\nFROM         dbo.Badges LEFT OUTER JOIN\r\n                      db" +
                "o.Users ON dbo.Badges.NumBadge = dbo.Users.NumBadge\r\n    \r\n                 \r\nWh" +
                "ere   \r\n\r\n1 = CASE\r\n               WHEN @rbAttribue  = -1  THEN 1 \r\n            " +
                "   WHEN  @rbAttribue  = 1 THEN case WHEN   Users.Matricule is NOT null THEN 1\r\n " +
                "              ELSE 0\r\n               END\r\n              WHEN  @rbAttribue  = 0  " +
                "THEN case WHEN   Users.Matricule is  null THEN 1\r\n               ELSE 0\r\n       " +
                "        END\r\n              ELSE 0\r\n       END \r\n\r\nAND  1 = CASE  \r\n             " +
                " WHEN @numBadge  IS NULL THEN 1 \r\n              WHEN Badges.NumBadge  LIKE +@num" +
                "Badge+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n   AND  1 = CASE  \r\n " +
                "             WHEN @rbautoriseValue  IS NULL THEN 1 \r\n              WHEN Badges.F" +
                "lagAutorise  =@rbautoriseValue   THEN 1 \r\n              ELSE 0 \r\n       END     " +
                " \r\n              \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n" +
                "              WHEN Users.Nom  LIKE +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r" +
                "\n       END \r\n       \r\n  AND  1 = CASE  \r\n              WHEN @prenom  IS NULL TH" +
                "EN 1 \r\n              WHEN Users.Prenom LIKE +@prenom+ \'%\'    THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END \r\n  AND 1 = CASE  \r\n              WHEN @matricule  IS NU" +
                "LL THEN 1 \r\n              WHEN Users.Matricule LIKE  +@matricule+ \'%\'    THEN 1 " +
                "\r\n              ELSE 0 \r\n       END \r\n )     as TableBadges     \r\n\r\nWHERE  Table" +
                "Badges.Id    BETWEEN  (@Index*15)-14  AND (@Index * 15)\r\n\r\n\r\n";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numBadge", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbAttribue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "Select  RIGHT(\'000000\' + Convert(varchar,b.NumBadge ), 6) as NumBadge,b.FlagAutor" +
                "ise as FlagAutorise\r\nfrom Badges as b Left join Users as u on b.NumBadge=u.NumBa" +
                "dge\r\nwhere b.FlagAutorise=\'Y\' and  u.NumBadge is null";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        MAX(NumBadge)  AS MaxId\r\nFROM            Badges";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "select count(*) from Badges";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "Declare  @numBadge  NVarchar(30)\r\nDeclare  @rbautoriseValue NVarchar(30)\r\nDeclare" +
                "  @nom NVarchar(30)\r\nDeclare  @prenom NVarchar(30)\r\nDeclare  @matricule  NVarcha" +
                "r(30)\r\nDeclare @rbAttribue NVarchar(30)\r\n\r\n\r\nSET  @numBadge =  ?\r\nSET  @rbautori" +
                "seValue = ?\r\nSET  @nom = ?\r\nSET  @prenom = ?\r\nSET  @matricule = ?\r\nSET @rbAttrib" +
                "ue = ?\r\n\r\n\r\nSELECT  COUNT(*) As Total\r\n\r\nFROM         Badges LEFT OUTER JOIN\r\n  " +
                "                    Users ON Badges.NumBadge = Users.NumBadge\r\n    \r\n           " +
                " \r\nWhere  \r\n1 = CASE\r\n             WHEN @rbAttribue  = -1  THEN 1 \r\n            " +
                " WHEN  @rbAttribue  = 1 THEN case WHEN   Users.Matricule is NOT null THEN 1\r\n   " +
                "                 ELSE 0\r\n                   END\r\n              WHEN  @rbAttribue" +
                "  = 0  THEN case WHEN   Users.Matricule is  null THEN 1\r\n                       " +
                "      ELSE 0\r\n                    END\r\n              ELSE 0\r\n       END \r\n\r\n  AN" +
                "D  1 = CASE  \r\n              WHEN @numBadge  IS NULL THEN 1 \r\n              WHEN" +
                " Badges.NumBadge  LIKE +@numBadge+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n      " +
                " END \r\n   AND  1 = CASE  \r\n              WHEN @rbautoriseValue  IS NULL THEN 1 \r" +
                "\n              WHEN Badges.FlagAutorise  =@rbautoriseValue   THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END      \r\n              \r\n  AND  1 = CASE  \r\n              " +
                "WHEN @nom  IS NULL THEN 1 \r\n              WHEN Users.Nom  LIKE +@nom+ \'%\'    THE" +
                "N 1 \r\n              ELSE 0 \r\n       END \r\n       \r\n  AND  1 = CASE  \r\n          " +
                "    WHEN @prenom  IS NULL THEN 1 \r\n              WHEN Users.Prenom LIKE +@prenom" +
                "+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND 1 = CASE  \r\n        " +
                "      WHEN @matricule  IS NULL THEN 1 \r\n              WHEN Users.Matricule LIKE " +
                " +@matricule+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n\r\n\r\n\r\n";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numBadge", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbAttribue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "INSERT INTO Badges\r\n                         ( NumBadge, FlagAutorise)\r\nVALUES   " +
                "     (?,?)";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE Badges Set FlagAutorise=?\r\nWhere NumBadge=?";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.BadgesDataTable GetAllBadges() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.BadgesDataTable dataTable = new MyDataSet.BadgesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.BadgesDataTable GetAllBadgesByFiltre(string numBadge, string rbautoriseValue, string nom, string prenom, string matricule, string rbAttribue) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((numBadge == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(numBadge));
            }
            if ((rbautoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(rbautoriseValue));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prenom));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(matricule));
            }
            if ((rbAttribue == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(rbAttribue));
            }
            MyDataSet.BadgesDataTable dataTable = new MyDataSet.BadgesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.BadgesDataTable GetBadges(global::System.Nullable<int> Index, string numBadge, string rbautoriseValue, string nom, string prenom, string matricule, string rbAttribue) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((numBadge == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(numBadge));
            }
            if ((rbautoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(rbautoriseValue));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(prenom));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(matricule));
            }
            if ((rbAttribue == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(rbAttribue));
            }
            MyDataSet.BadgesDataTable dataTable = new MyDataSet.BadgesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.BadgesDataTable GetBadgesAutorise() {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            MyDataSet.BadgesDataTable dataTable = new MyDataSet.BadgesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> BadgeExiste(string NumBadge) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((NumBadge == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumBadge));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUnBadge(string NumBadge) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            if ((NumBadge == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumBadge));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GetMaxIdBadge() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[6];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTotalBadges() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalBadgesByFiltre(string numBadge, string rbautoriseValue, string nom, string prenom, string matricule, string rbAttribue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((numBadge == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(numBadge));
            }
            if ((rbautoriseValue == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(rbautoriseValue));
            }
            if ((nom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(prenom));
            }
            if ((matricule == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(matricule));
            }
            if ((rbAttribue == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(rbAttribue));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertBadge(string NumBadge, string FlagAutorise) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            if ((NumBadge == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumBadge));
            }
            if ((FlagAutorise == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(FlagAutorise));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int SetFlagAutorise(string FlagAutorise, string Original_NumBadge) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[10];
            if ((FlagAutorise == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FlagAutorise));
            }
            if ((Original_NumBadge == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Original_NumBadge));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ListesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ListesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Listes";
            tableMapping.ColumnMappings.Add("Num", "Num");
            tableMapping.ColumnMappings.Add("Libelle", "Libelle");
            tableMapping.ColumnMappings.Add("Abrev", "Abrev");
            tableMapping.ColumnMappings.Add("Type", "Type");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[8];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Num, Libelle, Abrev, Type\r\nFROM            Listes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM Listes where Num=?";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Num", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Num", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Num, Libelle, Abrev, Type\r\nFROM            Listes\r\nwhere Num = ?";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Num", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Num", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        Num, Libelle, Abrev, Type\r\nFROM            Listes\r\nwhere Type= ?";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT MAX(Num) FROM Listes";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "INSERT INTO [Listes] ([Libelle], [Abrev], [Type]) VALUES (?, ?, ?)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Abrev", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Abrev", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "Select count (*) from Listes where Libelle=? and Abrev=? ";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Abrev", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Abrev", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "UPDATE       Listes\r\nSET                Abrev = ?,Libelle = ?, Type = ?\r\nwhere  N" +
                "um = ?";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Abrev", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Abrev", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Num", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Num", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.ListesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.ListesDataTable GetListes() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.ListesDataTable dataTable = new MyDataSet.ListesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.ListesDataTable GetListeByNum(int Num) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Num));
            MyDataSet.ListesDataTable dataTable = new MyDataSet.ListesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.ListesDataTable GetListesByType(global::System.Nullable<int> Type) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            MyDataSet.ListesDataTable dataTable = new MyDataSet.ListesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteListe(int Num) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(Num));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetMaxNumListe() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[4];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertListe(string Libelle, string Abrev, global::System.Nullable<int> Type) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[5];
            if ((Libelle == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Libelle));
            }
            if ((Abrev == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Abrev));
            }
            if ((Type.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Type.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> ListeExiste(string Libelle, string Abrev) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[6];
            if ((Libelle == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Libelle));
            }
            if ((Abrev == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Abrev));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateListe(string Abrev, string Libelle, global::System.Nullable<int> Type, int Original_Num) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            if ((Abrev == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Abrev));
            }
            if ((Libelle == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Libelle));
            }
            if ((Type.HasValue == true)) {
                command.Parameters[2].Value = ((int)(Type.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            command.Parameters[3].Value = ((int)(Original_Num));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ListesUsersTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ListesUsersTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ListesUsers";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("NumListe", "NumListe");
            tableMapping.ColumnMappings.Add("IdUser", "IdUser");
            tableMapping.ColumnMappings.Add("IdMotif", "IdMotif");
            tableMapping.ColumnMappings.Add("Ordre", "Ordre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [ListesUsers] ([NumListe], [IdUser], [IdMotif], [Ordre]) VALUES (?, ?" +
                ", ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListe", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdMotif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdMotif", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Ordre", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ordre", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[4];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Id, NumListe, IdUser, IdMotif, Ordre\r\nFROM            ListesUsers";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM ListesUsers\r\nWHERE       (IdUser = ?) AND  (NumListe = ?) ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListe", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT COUNT(*) FROM ListesUsers where IdUser =? AND NumListe =?";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "INSERT INTO [ListesUsers] ([NumListe], [IdUser], [IdMotif], [Ordre]) VALUES (?, ?" +
                ", ?, ?)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdMotif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdMotif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Ordre", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ordre", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.ListesUsersDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.ListesUsersDataTable GetListesUsers() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.ListesUsersDataTable dataTable = new MyDataSet.ListesUsersDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.ListesUsersDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "ListesUsers");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteFromList(global::System.Nullable<int> IdUser, global::System.Nullable<int> NumListe) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((IdUser.HasValue == true)) {
                command.Parameters[0].Value = ((int)(IdUser.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((NumListe.HasValue == true)) {
                command.Parameters[1].Value = ((int)(NumListe.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ExistInList(global::System.Nullable<int> IdUser, global::System.Nullable<int> NumListe) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            if ((IdUser.HasValue == true)) {
                command.Parameters[0].Value = ((int)(IdUser.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((NumListe.HasValue == true)) {
                command.Parameters[1].Value = ((int)(NumListe.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertUserToList(global::System.Nullable<int> NumListe, global::System.Nullable<int> IdUser, global::System.Nullable<int> IdMotif, global::System.Nullable<int> Ordre) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[3];
            if ((NumListe.HasValue == true)) {
                command.Parameters[0].Value = ((int)(NumListe.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdUser.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdUser.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IdMotif.HasValue == true)) {
                command.Parameters[2].Value = ((int)(IdMotif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Ordre.HasValue == true)) {
                command.Parameters[3].Value = ((int)(Ordre.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ServicesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ServicesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Services";
            tableMapping.ColumnMappings.Add("NumService", "NumService");
            tableMapping.ColumnMappings.Add("NomService", "NomService");
            tableMapping.ColumnMappings.Add("NumDroitAcces", "NumDroitAcces");
            tableMapping.ColumnMappings.Add("NumServicePere", "NumServicePere");
            tableMapping.ColumnMappings.Add("NumListSignataires", "NumListSignataires");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Services] ([NumService], [NomService], [NumDroitAcces], [NumServiceP" +
                "ere], [NumListSignataires]) VALUES (?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumService", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumService", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomService", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomService", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumDroitAcces", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumDroitAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumServicePere", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumServicePere", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumListSignataires", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumListSignataires", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        NumService, NomService, NumDroitAcces, NumServicePere, NumListSigna" +
                "taires\r\nFROM            Services";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.ServicesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.ServicesDataTable GetServices() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.ServicesDataTable dataTable = new MyDataSet.ServicesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.ServicesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Services");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class UsersBioDataTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UsersBioDataTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "UsersBioData";
            tableMapping.ColumnMappings.Add("Matricule", "Matricule");
            tableMapping.ColumnMappings.Add("BioData", "BioData");
            tableMapping.ColumnMappings.Add("Photo", "Photo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [UsersBioData] WHERE (([Matricule] = ?))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [UsersBioData] ([Matricule], [BioData], [Photo]) VALUES (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("BioData", global::System.Data.Odbc.OdbcType.Image, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BioData", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Photo", global::System.Data.Odbc.OdbcType.Image, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Photo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [UsersBioData] SET [Matricule] = ?, [BioData] = ?, [Photo] = ? WHERE (([Ma" +
                "tricule] = ?))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("BioData", global::System.Data.Odbc.OdbcType.Image, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BioData", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Photo", global::System.Data.Odbc.OdbcType.Image, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Photo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Matricule, BioData, Photo\r\nFROM            UsersBioData";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.UsersBioDataDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.UsersBioDataDataTable GetUsersBioData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.UsersBioDataDataTable dataTable = new MyDataSet.UsersBioDataDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.UsersBioDataDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "UsersBioData");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class OperateursTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public OperateursTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Operateurs";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("IDCreateur", "IDCreateur");
            tableMapping.ColumnMappings.Add("Debut", "Debut");
            tableMapping.ColumnMappings.Add("Fin", "Fin");
            tableMapping.ColumnMappings.Add("Profil", "Profil");
            tableMapping.ColumnMappings.Add("Login", "Login");
            tableMapping.ColumnMappings.Add("MotPasse", "MotPasse");
            tableMapping.ColumnMappings.Add("RefEmpreinte", "RefEmpreinte");
            tableMapping.ColumnMappings.Add("NomService", "NomService");
            tableMapping.ColumnMappings.Add("MenusAutorises", "MenusAutorises");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Operateurs] ([ID], [Nom], [Prenom], [DateCreation], [IDCreateur], [D" +
                "ebut], [Fin], [Profil], [Login], [MotPasse], [RefEmpreinte], [NomService], [Menu" +
                "sAutorises]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ID", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IDCreateur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IDCreateur", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Debut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Debut", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fin", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Profil", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Profil", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Login", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Login", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MotPasse", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MotPasse", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("RefEmpreinte", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RefEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomService", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomService", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MenusAutorises", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MenusAutorises", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[11];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        ID, Nom, Prenom, DateCreation, IDCreateur, Debut, Fin, Profil, Logi" +
                "n, MotPasse, RefEmpreinte, NomService, MenusAutorises\r\nFROM            Operateur" +
                "s";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE Operateurs where ID=?";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ID", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        ID, Nom, Prenom, DateCreation, IDCreateur, Debut, Fin, Profil, Logi" +
                "n, MotPasse, RefEmpreinte, NomService, MenusAutorises\r\nFROM            Operateur" +
                "s\r\nWhere Login=?";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Login", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Login", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        MAX(ID)  AS MaxId\r\nFROM            Operateurs";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        ID, Nom, Prenom, DateCreation, IDCreateur, Debut, Fin, Profil, Logi" +
                "n, MotPasse, RefEmpreinte, NomService, MenusAutorises\r\nFROM            Operateur" +
                "s\r\nwhere ID = ?";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ID", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "Declare @Index Int\r\nDeclare @nom NVarChar(30)\r\nDeclare @Prenom NVarChar(30)\r\nDecl" +
                "are @ddlprofilValue NVarChar(30)\r\nDeclare @ddlserviceValue NVarChar(30)\r\nDeclare" +
                " @sortColonne NVarChar(30)\r\nDeclare @sortOrder NVarChar(30)\r\n\r\nset @Index = ?\r\ns" +
                "et @nom = ?\r\nset @Prenom = ?\r\nset @ddlprofilValue = ?\r\nset @ddlserviceValue = ?\r" +
                "\nset @sortColonne =  ?\r\nset @sortOrder =  ?\r\n\r\nselect * from (\r\n\r\nselect   ID, N" +
                "om, Prenom, DateCreation, IDCreateur, Debut, Fin, Profil, Login, MotPasse, RefEm" +
                "preinte, NomService, MenusAutorises ,ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sor" +
                "tOrder = \'asc\' THEN\r\n        CASE \r\n           \r\n           WHEN @SortColonne = " +
                "\'Nom\' THEN Operateurs.Nom \r\n           WHEN @SortColonne = \'Prenom\' THEN Operate" +
                "urs.Prenom \r\n           WHEN @SortColonne = \'Profil\' THEN  Operateurs.Profil \r\n " +
                "          WHEN @SortColonne = \'Groupe\' THEN Operateurs.NomService \r\n        \r\n  " +
                "      END\r\n       \r\n    END ASC\r\n    , CASE WHEN @sortOrder = \'desc\' THEN\r\n     " +
                "   CASE \r\n           WHEN @SortColonne = \'Nom\' THEN Operateurs.Nom \r\n           " +
                "WHEN @SortColonne = \'Prenom\' THEN Operateurs.Prenom \r\n           WHEN @SortColon" +
                "ne = \'Profil\' THEN Operateurs.Profil \r\n           WHEN @SortColonne = \'Groupe\' T" +
                "HEN Operateurs.NomService \r\n       \r\n                 \r\n        END\r\n    END DES" +
                "C) AS RowNum\r\n    \r\n    from Operateurs\r\n\r\nWHERE   1 = CASE  \r\n              WHE" +
                "N @nom  IS NULL THEN 1 \r\n              WHEN Operateurs.Nom  LIKE +@nom+ \'%\'    T" +
                "HEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND   1 = CASE  \r\n              WH" +
                "EN @Prenom  IS NULL THEN 1 \r\n              WHEN Operateurs.Prenom  LIKE +@Prenom" +
                "+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n       " +
                "       WHEN @ddlprofilValue  IS NULL THEN 1 \r\n              WHEN Operateurs.Prof" +
                "il = @ddlprofilValue   THEN 1 \r\n              ELSE 0 \r\n       END\r\n AND  1 = CAS" +
                "E  \r\n              WHEN @ddlserviceValue IS NULL THEN 1 \r\n              WHEN Ope" +
                "rateurs.NomService = @ddlserviceValue     THEN 1 \r\n              ELSE 0 \r\n      " +
                " END\r\n\r\n ) as     TableOperateurs\r\n\r\n WHERE ( TableOperateurs.RowNum   BETWEEN  " +
                "(@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlprofilValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlserviceValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sortColonne", global::System.Data.Odbc.OdbcType.NVarChar, 30, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sortOrder", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "\r\nDeclare @nom NVarChar(30)\r\nDeclare @Prenom NVarChar(30)\r\nDeclare @ddlprofilValu" +
                "e NVarChar(30)\r\nDeclare @ddlserviceValue NVarChar(30)\r\nDeclare @sortColonne NVar" +
                "Char(30)\r\nDeclare @sortOrder NVarChar(30)\r\n\r\n\r\nset @nom = ?\r\nset @Prenom = ?\r\nse" +
                "t @ddlprofilValue = ?\r\nset @ddlserviceValue = ?\r\nset @sortColonne =  ?\r\nset @sor" +
                "tOrder =  ?\r\n\r\n\r\nselect   ID, Nom, Prenom, DateCreation, IDCreateur, Debut, Fin," +
                " Profil, Login, MotPasse, RefEmpreinte, NomService, MenusAutorises ,ROW_NUMBER()" +
                " OVER (ORDER BY  CASE WHEN @sortOrder = \'asc\' THEN\r\n        CASE \r\n           \r\n" +
                "  \r\n           WHEN @SortColonne = \'Profil\' THEN Operateurs.Profil \r\n       \r\n  " +
                "      END\r\n       \r\n    END ASC\r\n    , CASE WHEN @sortOrder = \'desc\' THEN\r\n     " +
                "   CASE \r\n      \r\n           WHEN @SortColonne = \'Profil\' THEN Operateurs.Profil" +
                " \r\n        \r\n                 \r\n        END\r\n    END DESC) AS RowNum\r\n    \r\n    " +
                "from Operateurs\r\n\r\nWHERE   1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r" +
                "\n              WHEN Operateurs.Nom  LIKE +@nom+ \'%\'    THEN 1 \r\n              EL" +
                "SE 0 \r\n       END \r\n  AND   1 = CASE  \r\n              WHEN @Prenom  IS NULL THEN" +
                " 1 \r\n              WHEN Operateurs.Prenom  LIKE +@Prenom+ \'%\'    THEN 1 \r\n      " +
                "        ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n              WHEN @ddlprofilVa" +
                "lue  IS NULL THEN 1 \r\n              WHEN Operateurs.Profil = @ddlprofilValue   T" +
                "HEN 1 \r\n              ELSE 0 \r\n       END\r\n AND  1 = CASE  \r\n              WHEN " +
                "@ddlserviceValue IS NULL THEN 1 \r\n              WHEN Operateurs.NomService = @dd" +
                "lserviceValue     THEN 1 \r\n              ELSE 0 \r\n       END\r\n";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlprofilValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlserviceValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sortColonne", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sortOrder", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT COUNT(*) FROM Operateurs";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = @"
Declare @nom NVarChar(30)
Declare @Prenom NVarChar(30)
Declare @ddlprofilValue NVarChar(30)
Declare @ddlserviceValue NVarChar(30)



set @nom = ?
set @Prenom = ?
set @ddlprofilValue = ?
set @ddlserviceValue = ?


select   count(*) as Total
    
    from Operateurs

WHERE   1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Operateurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND   1 = CASE  
              WHEN @Prenom  IS NULL THEN 1 
              WHEN Operateurs.Prenom  LIKE +@Prenom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @ddlprofilValue  IS NULL THEN 1 
              WHEN Operateurs.Profil = @ddlprofilValue   THEN 1 
              ELSE 0 
       END
 AND  1 = CASE  
              WHEN @ddlserviceValue IS NULL THEN 1 
              WHEN Operateurs.NomService = @ddlserviceValue     THEN 1 
              ELSE 0 
       END
";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlprofilValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlserviceValue", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "INSERT INTO [Operateurs] ([ID], [Nom], [Prenom], [DateCreation], [IDCreateur], [D" +
                "ebut], [Fin], [Profil], [Login], [MotPasse], [RefEmpreinte], [NomService], [Menu" +
                "sAutorises]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ID", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IDCreateur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IDCreateur", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Debut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Debut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Profil", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Profil", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Login", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Login", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MotPasse", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MotPasse", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("RefEmpreinte", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RefEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomService", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MenusAutorises", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MenusAutorises", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE Operateurs\r\n\r\nset  Nom = ? , Prenom = ?, DateCreation = ?, IDCreateur = ?," +
                " Debut = ?, Fin = ?, Profil = ?, Login = ?,\r\n                 MotPasse = ?, RefE" +
                "mpreinte = ?, NomService = ?, MenusAutorises = ?\r\n\r\nWHERE ID=?";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IDCreateur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IDCreateur", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Debut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Debut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Profil", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Profil", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Login", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Login", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MotPasse", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MotPasse", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("RefEmpreinte", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "RefEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomService", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MenusAutorises", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MenusAutorises", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ID", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ID", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.OperateursDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.OperateursDataTable GetOperateurs() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.OperateursDataTable dataTable = new MyDataSet.OperateursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillByLogin(MyDataSet.OperateursDataTable dataTable, string Login) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Login == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Login));
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.OperateursDataTable GetOperateurByLogin(string Login) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((Login == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Login));
            }
            MyDataSet.OperateursDataTable dataTable = new MyDataSet.OperateursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.OperateursDataTable GetOperateurByID(global::System.Nullable<int> ID) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ID.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ID.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            MyDataSet.OperateursDataTable dataTable = new MyDataSet.OperateursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.OperateursDataTable GetOperateursByFiltre(global::System.Nullable<int> Index, string nom, string prenom, string ddlprofilValue, string ddlserviceValue, string sortColonne, string sortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(prenom));
            }
            if ((ddlprofilValue == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(ddlprofilValue));
            }
            if ((ddlserviceValue == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(ddlserviceValue));
            }
            if ((sortColonne == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(sortColonne));
            }
            if ((sortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(sortOrder));
            }
            MyDataSet.OperateursDataTable dataTable = new MyDataSet.OperateursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.OperateursDataTable GetOperateursToExport(string nom, string prenom, string ddlprofilValue, string ddlserviceValue, string sortColonne, string sortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(prenom));
            }
            if ((ddlprofilValue == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(ddlprofilValue));
            }
            if ((ddlserviceValue == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(ddlserviceValue));
            }
            if ((sortColonne == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(sortColonne));
            }
            if ((sortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(sortOrder));
            }
            MyDataSet.OperateursDataTable dataTable = new MyDataSet.OperateursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.OperateursDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Operateurs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUnOperateur(int ID) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            command.Parameters[0].Value = ((int)(ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetMaxIdOperateur() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[3];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTotalOperateurs() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalOperateursByFiltre(string nom, string prenom, string ddlprofilValue, string ddlserviceValue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((nom == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(prenom));
            }
            if ((ddlprofilValue == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(ddlprofilValue));
            }
            if ((ddlserviceValue == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(ddlserviceValue));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertOperateur(int ID, string Nom, string Prenom, global::System.Nullable<global::System.DateTime> DateCreation, global::System.Nullable<int> IDCreateur, global::System.Nullable<global::System.DateTime> Debut, global::System.Nullable<global::System.DateTime> Fin, string Profil, string Login, string MotPasse, string RefEmpreinte, string NomService, string MenusAutorises) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            command.Parameters[0].Value = ((int)(ID));
            if ((Nom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Prenom));
            }
            if ((DateCreation.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IDCreateur.HasValue == true)) {
                command.Parameters[4].Value = ((int)(IDCreateur.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Debut.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(Debut.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Fin.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(Fin.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Profil == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Profil));
            }
            if ((Login == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Login));
            }
            if ((MotPasse == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(MotPasse));
            }
            if ((RefEmpreinte == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(RefEmpreinte));
            }
            if ((NomService == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NomService));
            }
            if ((MenusAutorises == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(MenusAutorises));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateOperateur(string Nom, string Prenom, global::System.Nullable<global::System.DateTime> DateCreation, global::System.Nullable<int> IDCreateur, global::System.Nullable<global::System.DateTime> Debut, global::System.Nullable<global::System.DateTime> Fin, string Profil, string Login, string MotPasse, string RefEmpreinte, string NomService, string MenusAutorises, int Original_ID) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[10];
            if ((Nom == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Prenom));
            }
            if ((DateCreation.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IDCreateur.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IDCreateur.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Debut.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(Debut.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Fin.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(Fin.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Profil == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Profil));
            }
            if ((Login == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Login));
            }
            if ((MotPasse == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(MotPasse));
            }
            if ((RefEmpreinte == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(RefEmpreinte));
            }
            if ((NomService == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(NomService));
            }
            if ((MenusAutorises == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(MenusAutorises));
            }
            command.Parameters[12].Value = ((int)(Original_ID));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LecteursTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LecteursTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Lecteurs";
            tableMapping.ColumnMappings.Add("NomLecteur", "NomLecteur");
            tableMapping.ColumnMappings.Add("Com", "Com");
            tableMapping.ColumnMappings.Add("Adresse", "Adresse");
            tableMapping.ColumnMappings.Add("Vitesse", "Vitesse");
            tableMapping.ColumnMappings.Add("NumSerie", "NumSerie");
            tableMapping.ColumnMappings.Add("Version", "Version");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("APB", "APB");
            tableMapping.ColumnMappings.Add("CheckRights", "CheckRights");
            tableMapping.ColumnMappings.Add("DateLastEvent", "DateLastEvent");
            tableMapping.ColumnMappings.Add("AdresseIP", "AdresseIP");
            tableMapping.ColumnMappings.Add("Passerelle", "Passerelle");
            tableMapping.ColumnMappings.Add("Masque", "Masque");
            tableMapping.ColumnMappings.Add("Empreintes", "Empreintes");
            tableMapping.ColumnMappings.Add("Badge", "Badge");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("Mode", "Mode");
            tableMapping.ColumnMappings.Add("Dialog", "Dialog");
            tableMapping.ColumnMappings.Add("Etat", "Etat");
            tableMapping.ColumnMappings.Add("DureeSireneSec", "DureeSireneSec");
            tableMapping.ColumnMappings.Add("NumHoraireSirene", "NumHoraireSirene");
            tableMapping.ColumnMappings.Add("SireneSurRelais", "SireneSurRelais");
            tableMapping.ColumnMappings.Add("NbMaxUsers", "NbMaxUsers");
            tableMapping.ColumnMappings.Add("EntreeSortie", "EntreeSortie");
            tableMapping.ColumnMappings.Add("PortSocket", "PortSocket");
            tableMapping.ColumnMappings.Add("CheckBipTouches", "CheckBipTouches");
            tableMapping.ColumnMappings.Add("CheckBuzzer", "CheckBuzzer");
            tableMapping.ColumnMappings.Add("CheckCodeAcces", "CheckCodeAcces");
            tableMapping.ColumnMappings.Add("CheckCodeAdmin", "CheckCodeAdmin");
            tableMapping.ColumnMappings.Add("CheckDateValidite", "CheckDateValidite");
            tableMapping.ColumnMappings.Add("CheckDiplayDateHour", "CheckDiplayDateHour");
            tableMapping.ColumnMappings.Add("CheckDisplayName", "CheckDisplayName");
            tableMapping.ColumnMappings.Add("CheckHeureEte", "CheckHeureEte");
            tableMapping.ColumnMappings.Add("CheckHistoActiver", "CheckHistoActiver");
            tableMapping.ColumnMappings.Add("CheckHistoAlarmes", "CheckHistoAlarmes");
            tableMapping.ColumnMappings.Add("CheckHistoAutre", "CheckHistoAutre");
            tableMapping.ColumnMappings.Add("CheckHistoEnroll", "CheckHistoEnroll");
            tableMapping.ColumnMappings.Add("CheckHistoIdentif", "CheckHistoIdentif");
            tableMapping.ColumnMappings.Add("CodeAcces", "CodeAcces");
            tableMapping.ColumnMappings.Add("CodeAdmin", "CodeAdmin");
            tableMapping.ColumnMappings.Add("Langue", "Langue");
            tableMapping.ColumnMappings.Add("ModeAcces", "ModeAcces");
            tableMapping.ColumnMappings.Add("Veille", "Veille");
            tableMapping.ColumnMappings.Add("CheckBuzEvtIdentOk", "CheckBuzEvtIdentOk");
            tableMapping.ColumnMappings.Add("CheckBuzEvtIdentKo", "CheckBuzEvtIdentKo");
            tableMapping.ColumnMappings.Add("CheckBuzEvtEnrol", "CheckBuzEvtEnrol");
            tableMapping.ColumnMappings.Add("CheckBuzEvtFingPosKo", "CheckBuzEvtFingPosKo");
            tableMapping.ColumnMappings.Add("CheckBuzEvtRdCscOk", "CheckBuzEvtRdCscOk");
            tableMapping.ColumnMappings.Add("CheckBuzEvtRdCscKo", "CheckBuzEvtRdCscKo");
            tableMapping.ColumnMappings.Add("CheckBuzEvtOther", "CheckBuzEvtOther");
            tableMapping.ColumnMappings.Add("CheckHistoIdentifKo", "CheckHistoIdentifKo");
            tableMapping.ColumnMappings.Add("CheckDisplayCode", "CheckDisplayCode");
            tableMapping.ColumnMappings.Add("TmoCode", "TmoCode");
            tableMapping.ColumnMappings.Add("DelaiFinCourseSec", "DelaiFinCourseSec");
            tableMapping.ColumnMappings.Add("CheckLogCsc", "CheckLogCsc");
            tableMapping.ColumnMappings.Add("CheckFinDeCourse", "CheckFinDeCourse");
            tableMapping.ColumnMappings.Add("ExpAlarmeLec", "ExpAlarmeLec");
            tableMapping.ColumnMappings.Add("LecGtCa", "LecGtCa");
            tableMapping.ColumnMappings.Add("NumLastEvent", "NumLastEvent");
            tableMapping.ColumnMappings.Add("IdLastEventSap", "IdLastEventSap");
            tableMapping.ColumnMappings.Add("MajDateLec", "MajDateLec");
            tableMapping.ColumnMappings.Add("IdLastEventApb", "IdLastEventApb");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [Lecteurs] ([NomLecteur], [Com], [Adresse], [Vitesse], [NumSerie], [Version], [Type], [APB], [CheckRights], [DateLastEvent], [AdresseIP], [Passerelle], [Masque], [Empreintes], [Badge], [Code], [Mode], [Dialog], [Etat], [DureeSireneSec], [NumHoraireSirene], [SireneSurRelais], [NbMaxUsers], [EntreeSortie], [PortSocket], [CheckBipTouches], [CheckBuzzer], [CheckCodeAcces], [CheckCodeAdmin], [CheckDateValidite], [CheckDiplayDateHour], [CheckDisplayName], [CheckHeureEte], [CheckHistoActiver], [CheckHistoAlarmes], [CheckHistoAutre], [CheckHistoEnroll], [CheckHistoIdentif], [CodeAcces], [CodeAdmin], [Langue], [ModeAcces], [Veille], [CheckBuzEvtIdentOk], [CheckBuzEvtIdentKo], [CheckBuzEvtEnrol], [CheckBuzEvtFingPosKo], [CheckBuzEvtRdCscOk], [CheckBuzEvtRdCscKo], [CheckBuzEvtOther], [CheckHistoIdentifKo], [CheckDisplayCode], [TmoCode], [DelaiFinCourseSec], [CheckLogCsc], [CheckFinDeCourse], [ExpAlarmeLec], [LecGtCa], [NumLastEvent], [IdLastEventSap], [MajDateLec], [IdLastEventApb]) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomLecteur", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomLecteur", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Com", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Com", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Vitesse", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Vitesse", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumSerie", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumSerie", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Version", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Version", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("APB", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "APB", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckRights", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckRights", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateLastEvent", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateLastEvent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("AdresseIP", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AdresseIP", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Passerelle", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Passerelle", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Masque", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Masque", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Empreintes", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Empreintes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Badge", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Badge", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Code", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Code", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Dialog", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Dialog", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Etat", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Etat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DureeSireneSec", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DureeSireneSec", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumHoraireSirene", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumHoraireSirene", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SireneSurRelais", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "SireneSurRelais", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbMaxUsers", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbMaxUsers", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("EntreeSortie", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EntreeSortie", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("PortSocket", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PortSocket", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBipTouches", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBipTouches", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzzer", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzzer", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckCodeAcces", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckCodeAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckCodeAdmin", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckCodeAdmin", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckDateValidite", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckDateValidite", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckDiplayDateHour", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckDiplayDateHour", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckDisplayName", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckDisplayName", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHeureEte", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHeureEte", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHistoActiver", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHistoActiver", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHistoAlarmes", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHistoAlarmes", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHistoAutre", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHistoAutre", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHistoEnroll", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHistoEnroll", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHistoIdentif", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHistoIdentif", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodeAcces", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodeAdmin", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeAdmin", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Langue", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Langue", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ModeAcces", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ModeAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Veille", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Veille", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtIdentOk", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtIdentOk", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtIdentKo", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtIdentKo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtEnrol", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtEnrol", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtFingPosKo", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtFingPosKo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtRdCscOk", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtRdCscOk", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtRdCscKo", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtRdCscKo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBuzEvtOther", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBuzEvtOther", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckHistoIdentifKo", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckHistoIdentifKo", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckDisplayCode", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckDisplayCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TmoCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TmoCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DelaiFinCourseSec", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DelaiFinCourseSec", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckLogCsc", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckLogCsc", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckFinDeCourse", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckFinDeCourse", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ExpAlarmeLec", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ExpAlarmeLec", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LecGtCa", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LecGtCa", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumLastEvent", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumLastEvent", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdLastEventSap", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdLastEventSap", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MajDateLec", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MajDateLec", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdLastEventApb", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdLastEventApb", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        NomLecteur, Com, Adresse, Vitesse, NumSerie, Version, Type, APB, CheckRights, DateLastEvent, AdresseIP, Passerelle, Masque, Empreintes, Badge, Code, Mode, 
                         Dialog, Etat, DureeSireneSec, NumHoraireSirene, SireneSurRelais, NbMaxUsers, EntreeSortie, PortSocket, CheckBipTouches, CheckBuzzer, CheckCodeAcces, 
                         CheckCodeAdmin, CheckDateValidite, CheckDiplayDateHour, CheckDisplayName, CheckHeureEte, CheckHistoActiver, CheckHistoAlarmes, CheckHistoAutre, 
                         CheckHistoEnroll, CheckHistoIdentif, CodeAcces, CodeAdmin, Langue, ModeAcces, Veille, CheckBuzEvtIdentOk, CheckBuzEvtIdentKo, CheckBuzEvtEnrol, 
                         CheckBuzEvtFingPosKo, CheckBuzEvtRdCscOk, CheckBuzEvtRdCscKo, CheckBuzEvtOther, CheckHistoIdentifKo, CheckDisplayCode, TmoCode, DelaiFinCourseSec, 
                         CheckLogCsc, CheckFinDeCourse, ExpAlarmeLec, LecGtCa, NumLastEvent, IdLastEventSap, MajDateLec, IdLastEventApb
FROM            Lecteurs";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.LecteursDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.LecteursDataTable GetLecteurs() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.LecteursDataTable dataTable = new MyDataSet.LecteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.LecteursDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Lecteurs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class EventsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public EventsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Events";
            tableMapping.ColumnMappings.Add("NumLecteur", "NumLecteur");
            tableMapping.ColumnMappings.Add("Instant", "Instant");
            tableMapping.ColumnMappings.Add("NumEvent", "NumEvent");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("Sous_Type", "Sous_Type");
            tableMapping.ColumnMappings.Add("Reference", "Reference");
            tableMapping.ColumnMappings.Add("Traite", "Traite");
            tableMapping.ColumnMappings.Add("EntreeSortie", "EntreeSortie");
            tableMapping.ColumnMappings.Add("Valide", "Valide");
            tableMapping.ColumnMappings.Add("Code", "Code");
            tableMapping.ColumnMappings.Add("NumAgrement", "NumAgrement");
            tableMapping.ColumnMappings.Add("CodeRefus", "CodeRefus");
            tableMapping.ColumnMappings.Add("MatriculeAdmin", "MatriculeAdmin");
            tableMapping.ColumnMappings.Add("NumTaxi", "NumTaxi");
            tableMapping.ColumnMappings.Add("TypeTaxi", "TypeTaxi");
            tableMapping.ColumnMappings.Add("IdEvent", "IdEvent");
            tableMapping.ColumnMappings.Add("NomAgent", "NomAgent");
            tableMapping.ColumnMappings.Add("PrenomAgent", "PrenomAgent");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("LibelleTypeTaxi", "LibelleTypeTaxi");
            tableMapping.ColumnMappings.Add("LibelleCode", "LibelleCode");
            tableMapping.ColumnMappings.Add("TypeCode", "TypeCode");
            tableMapping.ColumnMappings.Add("NomLecteur", "NomLecteur");
            tableMapping.ColumnMappings.Add("NumBadge", "NumBadge");
            tableMapping.ColumnMappings.Add("Adresse", "Adresse");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[11];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        TOP 1000 Events.NumLecteur, Events.Instant, Events.NumEvent, Events.Type, Events.Sous_Type, Events.Reference, Events.Traite, Events.EntreeSortie, 
                         Events.Valide, Events.Code, Events.NumAgrement, Events.CodeRefus, Events.MatriculeAdmin, Events.NumTaxi, Events.TypeTaxi, Events.IdEvent, Users.Nom, 
                         Users.Prenom, TypeTaxi.Libelle AS LibelleTypeTaxi, CodesMissions.LibelleCode, CodesMissions.Type AS TypeCode, Lecteurs.NomLecteur, Users.NumBadge, 
                         Visiteurs.Nom AS NomAgent, Visiteurs.Prenom AS PrenomAgent, Lecteurs.Adresse
FROM            { oj { oj { oj { oj { oj Events LEFT OUTER JOIN
                         Lecteurs ON Events.NumLecteur = Lecteurs.Adresse } LEFT OUTER JOIN
                         TypeTaxi ON Events.TypeTaxi = TypeTaxi.Num } LEFT OUTER JOIN
                         Visiteurs ON Events.MatriculeAdmin Collate French_CI_AI = Visiteurs.Matricule } LEFT OUTER JOIN
                         CodesMissions ON Events.CodeRefus Collate French_CI_AI = CodesMissions.ValeurCode } LEFT OUTER JOIN
                         Users ON Events.Reference = Users.Matricule }

Order by Instant Desc";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        COUNT(Instant) AS Expr1\r\nFROM            Events\r\nWHERE        (Refe" +
                "rence = ?)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Reference", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Reference", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM Events\r\nWHERE        (IdEvent = ?)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdEvent", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdEvent", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "Declare @dateDebut DateTime\r\nDeclare @dateFin DateTime\r\nDeclare @matricule NVarCh" +
                "ar(30)\r\nDeclare @nom NVarChar(30)\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @imm" +
                "atriculation NVarChar(30)\r\nDeclare @numTaxi NVarChar(30)\r\nDeclare @typeTaxi Int\r" +
                "\nDeclare @codeRefus NVarChar(30)\r\nDeclare @matriculeAgent NVarChar(30)\r\nDeclare " +
                "@typeCode Int\r\nDeclare @sous_Type Int\r\nDeclare @numLecteur Int\r\n\r\nset @dateDebut" +
                "  = ?\r\nset @dateFin  = ?\r\nset @matricule = ?\r\nset @nom = ?\r\nset @numPermis = ?\r\n" +
                "set @immatriculation = ?\r\nset @numTaxi = ?\r\nset @typeTaxi = ?\r\nset @codeRefus = " +
                "?\r\nset @matriculeAgent = ?\r\nset  @typeCode = ?\r\nset  @sous_Type = ?\r\nset  @numLe" +
                "cteur = ?\r\n\r\n\r\nselect * from (\r\nSELECT        ROW_NUMBER() OVER (ORDER BY  Event" +
                "s.Instant DESC) AS RowNum,Events.NumLecteur, Events.Instant, Events.NumEvent, Ev" +
                "ents.Type, Events.Sous_Type, Events.Reference, Events.Traite, Events.EntreeSorti" +
                "e, Events.Valide, \r\n                         Events.Code, Events.NumAgrement, Ev" +
                "ents.CodeRefus, Events.MatriculeAdmin, Events.NumTaxi, Events.TypeTaxi, Events.I" +
                "dEvent, Users.Nom, Users.Prenom, \r\n                         TypeTaxi.Libelle AS " +
                "LibelleTypeTaxi, CodesMissions.LibelleCode, CodesMissions.Type AS TypeCode, Lect" +
                "eurs.NomLecteur, Users.NumBadge, \r\n                         Visiteurs.Nom AS Nom" +
                "Agent, Visiteurs.Prenom AS PrenomAgent, Lecteurs.Adresse,Agrement.Plaque\r\nFROM  " +
                "        {oj  { oj { oj { oj { oj { oj Events LEFT OUTER JOIN\r\n                  " +
                "       Lecteurs ON Events.NumLecteur = Lecteurs.Adresse } LEFT OUTER JOIN\r\n     " +
                "                    TypeTaxi ON Events.TypeTaxi = TypeTaxi.Num } LEFT OUTER JOIN" +
                "\r\n                         Visiteurs ON Events.MatriculeAdmin Collate French_CI_" +
                "AI = Visiteurs.Matricule } LEFT OUTER JOIN\r\n                         CodesMissio" +
                "ns ON Events.CodeRefus Collate French_CI_AI = CodesMissions.ValeurCode } LEFT OU" +
                "TER JOIN    Users ON Events.Reference = Users.Matricule } LEFT OUTER JOIN  Agrem" +
                "ent ON  Events.TypeTaxi = Agrement.TypeTaxi AND Events.NumTaxi = Agrement.NumTax" +
                "i}\r\nWHERE  1 = CASE  \r\n              WHEN @dateDebut IS NULL OR @dateFin IS NULL" +
                " THEN 1 \r\n              WHEN Events.Instant BETWEEN @dateDebut  AND @dateFin    " +
                "  THEN 1 \r\n              ELSE 0 \r\n       END     \r\nAND       1 = CASE  \r\n       " +
                "       WHEN @matricule  IS NULL THEN 1 \r\n              WHEN Events.Reference  LI" +
                "KE  +@matricule+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END        \r\n  AN" +
                "D  1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n              WHEN User" +
                "s.Nom  LIKE  +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND  1" +
                " = CASE  \r\n              WHEN @numPermis  IS NULL THEN 1 \r\n              WHEN Us" +
                "ers.NumBadge  LIKE  +@numPermis+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       E" +
                "ND\r\n  AND  1 = CASE  \r\n              WHEN @immatriculation IS NULL THEN 1 \r\n    " +
                "          WHEN  Agrement.Plaque LIKE +@immatriculation+\'%\'  THEN 1 \r\n           " +
                "   ELSE 0 \r\n       END\r\n\r\n  AND  1 = CASE  \r\n              WHEN @numTaxi  IS NUL" +
                "L THEN 1 \r\n              WHEN Events.NumTaxi  =@numTaxi      THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END\r\nAND  1 = CASE  \r\n              WHEN @TypeTaxi  IS NULL " +
                "THEN 1 \r\n              WHEN Events.TypeTaxi =@TypeTaxi     THEN 1 \r\n            " +
                "  ELSE 0 \r\n       END\r\n\r\n AND  1 = CASE  \r\n              WHEN @codeRefus IS NULL" +
                " THEN 1 \r\n              WHEN Events.CodeRefus = @codeRefus    THEN 1 \r\n         " +
                "     ELSE 0 \r\n       END\r\nAND  1 = CASE  \r\n              WHEN @matriculeAgent  I" +
                "S NULL THEN 1 \r\n              WHEN  Events.MatriculeAdmin  LIKE  +@matriculeAgen" +
                "t+ \'%\'      THEN 1 \r\n              ELSE 0 \r\n       END\r\nAND  1 = CASE  \r\n       " +
                "       WHEN @typeCode  IS NULL THEN 1 \r\n              WHEN  CodesMissions.Type =" +
                "@typeCode      THEN 1 \r\n              ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n  " +
                "            WHEN @sous_Type  IS NULL THEN 1 \r\n              WHEN  Events.Sous_Ty" +
                "pe = @sous_Type THEN 1 \r\n              ELSE 0 \r\n       END \r\nAND  1 = CASE  \r\n  " +
                "            WHEN @numLecteur  IS NULL THEN 1 \r\n              WHEN  Events.NumLec" +
                "teur = @numLecteur  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n) AS TableEven" +
                "ts\r\n";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numTaxi", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("codeRefus", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matriculeAgent", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sous_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numLecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "Declare @Index Int\r\nDeclare @dateDebut DateTime\r\nDeclare @dateFin DateTime\r\nDecla" +
                "re @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDeclare @numPermis NVarCh" +
                "ar(30)\r\nDeclare @immatriculation  NVarChar(30)\r\nDeclare @numTaxi NVarChar(30)\r\nD" +
                "eclare @typeTaxi Int\r\nDeclare @codeRefus NVarChar(30)\r\nDeclare @matriculeAgent N" +
                "VarChar(30)\r\nDeclare @typeCode Int\r\nDeclare @sous_Type Int\r\nDeclare @numLecteur " +
                "Int\r\n\r\n\r\n\r\n\r\nset @Index = ?\r\nset @dateDebut  = ?\r\nset @dateFin  = ?\r\nset @matric" +
                "ule = ?\r\nset @nom = ?\r\nset @numPermis = ?\r\nset @immatriculation  = ?\r\nset @numTa" +
                "xi = ?\r\nset @TypeTaxi =?\r\nset @codeRefus = ?\r\nset @matriculeAgent = ?\r\nset  @typ" +
                "eCode = ?\r\nset  @sous_Type = ?\r\nset  @numLecteur = ?\r\n\r\n\r\n\r\n\r\n\r\nselect * from (\r" +
                "\nSELECT        ROW_NUMBER() OVER (ORDER BY   Events.Instant DESC) AS RowNum,Even" +
                "ts.NumLecteur, Events.Instant, Events.NumEvent, Events.Type, Events.Sous_Type, E" +
                "vents.Reference, Events.Traite, Events.EntreeSortie, Events.Valide, \r\n          " +
                "               Events.Code, Events.NumAgrement, Events.CodeRefus, Events.Matricu" +
                "leAdmin, Events.NumTaxi, Events.TypeTaxi, Events.IdEvent, Users.Nom, Users.Preno" +
                "m, \r\n                         TypeTaxi.Libelle AS LibelleTypeTaxi, CodesMissions" +
                ".LibelleCode, CodesMissions.Type AS TypeCode, Lecteurs.NomLecteur, Users.NumBadg" +
                "e, \r\n                         Visiteurs.Nom AS NomAgent, Visiteurs.Prenom AS Pre" +
                "nomAgent, Lecteurs.Adresse,Agrement.Plaque\r\nFROM          {oj  { oj { oj { oj { " +
                "oj { oj Events LEFT OUTER JOIN\r\n                         Lecteurs ON Events.NumL" +
                "ecteur = Lecteurs.Adresse } LEFT OUTER JOIN\r\n                         TypeTaxi O" +
                "N Events.TypeTaxi = TypeTaxi.Num } LEFT OUTER JOIN\r\n                         Vis" +
                "iteurs ON Events.MatriculeAdmin Collate French_CI_AI = Visiteurs.Matricule } LEF" +
                "T OUTER JOIN\r\n                         CodesMissions ON Events.CodeRefus Collate" +
                " French_CI_AI = CodesMissions.ValeurCode } LEFT OUTER JOIN    Users ON Events.Re" +
                "ference = Users.Matricule } LEFT OUTER JOIN  Agrement ON Events.TypeTaxi = Agrem" +
                "ent.TypeTaxi AND  Events.NumTaxi = Agrement.NumTaxi}\r\nWHERE  1 = CASE  \r\n       " +
                "       WHEN @dateDebut IS NULL OR @dateFin IS NULL THEN 1 \r\n              WHEN E" +
                "vents.Instant BETWEEN @dateDebut  AND @dateFin      THEN 1 \r\n              ELSE " +
                "0 \r\n       END     \r\nAND       1 = CASE  \r\n              WHEN @matricule  IS NUL" +
                "L THEN 1 \r\n              WHEN Events.Reference  LIKE  +@matricule+ \'%\'    THEN 1" +
                " \r\n              ELSE 0 \r\n       END        \r\n  AND  1 = CASE  \r\n              W" +
                "HEN @nom  IS NULL THEN 1 \r\n              WHEN Users.Nom  LIKE  +@nom+ \'%\'    THE" +
                "N 1 \r\n              ELSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n              WHEN " +
                "@numPermis  IS NULL THEN 1 \r\n              WHEN Users.NumBadge  LIKE  +@numPermi" +
                "s+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n       " +
                "       WHEN @immatriculation  IS NULL THEN 1 \r\n              WHEN  Agrement.Plaq" +
                "ue LIKE +@immatriculation+\'%\'  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n  A" +
                "ND  1 = CASE  \r\n              WHEN @numTaxi  IS NULL THEN 1 \r\n              WHEN" +
                " Events.NumTaxi  =@numTaxi      THEN 1 \r\n              ELSE 0 \r\n       END\r\nAND " +
                " 1 = CASE  \r\n              WHEN @TypeTaxi  IS NULL THEN 1 \r\n              WHEN E" +
                "vents.TypeTaxi =@TypeTaxi     THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n AND" +
                "  1 = CASE  \r\n              WHEN @codeRefus IS NULL THEN 1 \r\n              WHEN " +
                "Events.CodeRefus = @codeRefus THEN 1 \r\n              ELSE 0 \r\n       END\r\nAND  1" +
                " = CASE  \r\n              WHEN @matriculeAgent  IS NULL THEN 1 \r\n              WH" +
                "EN  Events.MatriculeAdmin  LIKE  +@matriculeAgent+ \'%\'      THEN 1 \r\n           " +
                "   ELSE 0 \r\n       END\r\nAND  1 = CASE  \r\n              WHEN @typeCode  IS NULL T" +
                "HEN 1 \r\n              WHEN  CodesMissions.Type =@typeCode      THEN 1 \r\n        " +
                "      ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n              WHEN @sous_Type  IS " +
                "NULL THEN 1 \r\n              WHEN  Events.Sous_Type = @sous_Type THEN 1 \r\n       " +
                "       ELSE 0 \r\n       END \r\nAND  1 = CASE  \r\n              WHEN @numLecteur  IS" +
                " NULL THEN 1 \r\n              WHEN  Events.NumLecteur = @numLecteur  THEN 1 \r\n   " +
                "           ELSE 0 \r\n       END\r\n\r\n) AS TableEvents\r\n WHERE ( TableEvents.RowNum " +
                " BETWEEN (@Index*15)-14  AND (@Index * 15)) ";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numTaxi", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("codeRefus", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matriculeAgent", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sous_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numLecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"SELECT        e.NumTaxi, Users.NumBadge, e.IdEvent, e.Traite, e.Valide, e.NumLecteur, e.Instant, e.NumEvent, e.Type, e.Sous_Type, e.Reference, e.EntreeSortie, e.Code, 
                         e.NumAgrement, e.CodeRefus, e.MatriculeAdmin, e.TypeTaxi
FROM            Events e, Users
WHERE        e.Reference = Users.Matricule AND (e.TypeTaxi = ?) AND (e.Valide = ?) AND (e.Instant BETWEEN ? AND ?)
ORDER BY e.NumTaxi";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant1", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        MAX(IdEvent)  AS MaxId\r\nFROM            Events";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT    Matricule \r\nFROM         Users   Where NumBadge = ?";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "Select count(*) from Events";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "Declare @dateDebut DateTime\r\nDeclare @dateFin DateTime\r\nDeclare @matricule NVarCh" +
                "ar(30)\r\nDeclare @nom NVarChar(30)\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @imm" +
                "atriculation NVarChar(30)\r\nDeclare @numTaxi NVarChar(30)\r\nDeclare @typeTaxi Int\r" +
                "\nDeclare @codeRefus NVarChar(30)\r\nDeclare @matriculeAgent NVarChar(30)\r\nDeclare " +
                "@typeCode Int\r\nDeclare @sous_Type Int\r\nDeclare @numLecteur Int\r\n\r\nset @dateDebut" +
                "  = ?\r\nset @dateFin  = ?\r\nset @matricule = ?\r\nset @nom = ?\r\nset @numPermis = ?\r\n" +
                "set @immatriculation = ?\r\nset @numTaxi = ?\r\nset @typeTaxi = ?\r\nset @codeRefus = " +
                "?\r\nset @matriculeAgent = ?\r\nset  @typeCode = ?\r\nset  @sous_Type = ?\r\nset  @numLe" +
                "cteur = ?\r\n\r\n\r\nselect COUNT(*) AS Total from (\r\nSELECT        ROW_NUMBER() OVER " +
                "(ORDER BY  Events.Instant DESC) AS RowNum,Events.NumLecteur, Events.Instant, Eve" +
                "nts.NumEvent, Events.Type, Events.Sous_Type, Events.Reference, Events.Traite, Ev" +
                "ents.EntreeSortie, Events.Valide, \r\n                         Events.Code, Events" +
                ".NumAgrement, Events.CodeRefus, Events.MatriculeAdmin, Events.NumTaxi, Events.Ty" +
                "peTaxi, Events.IdEvent, Users.Nom, Users.Prenom, \r\n                         Type" +
                "Taxi.Libelle AS LibelleTypeTaxi, CodesMissions.LibelleCode, CodesMissions.Type A" +
                "S TypeCode, Lecteurs.NomLecteur, Users.NumBadge, \r\n                         Visi" +
                "teurs.Nom AS NomAgent, Visiteurs.Prenom AS PrenomAgent, Lecteurs.Adresse,Agremen" +
                "t.Plaque\r\nFROM          {oj  { oj { oj { oj { oj { oj Events LEFT OUTER JOIN\r\n  " +
                "                       Lecteurs ON Events.NumLecteur = Lecteurs.Adresse } LEFT O" +
                "UTER JOIN\r\n                         TypeTaxi ON Events.TypeTaxi = TypeTaxi.Num }" +
                " LEFT OUTER JOIN\r\n                         Visiteurs ON Events.MatriculeAdmin Co" +
                "llate French_CI_AI = Visiteurs.Matricule } LEFT OUTER JOIN\r\n                    " +
                "     CodesMissions ON Events.CodeRefus Collate French_CI_AI = CodesMissions.Vale" +
                "urCode } LEFT OUTER JOIN    Users ON Events.Reference = Users.Matricule } LEFT O" +
                "UTER JOIN  Agrement ON Events.TypeTaxi = Agrement.TypeTaxi AND  Events.NumTaxi =" +
                " Agrement.NumTaxi}\r\nWHERE  1 = CASE  \r\n              WHEN @dateDebut IS NULL OR " +
                "@dateFin IS NULL THEN 1 \r\n              WHEN Events.Instant BETWEEN @dateDebut  " +
                "AND @dateFin      THEN 1 \r\n              ELSE 0 \r\n       END     \r\nAND       1 =" +
                " CASE  \r\n              WHEN @matricule  IS NULL THEN 1 \r\n              WHEN Even" +
                "ts.Reference  LIKE  +@matricule+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       E" +
                "ND        \r\n  AND  1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n       " +
                "       WHEN Users.Nom  LIKE  +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n     " +
                "  END \r\n  AND  1 = CASE  \r\n              WHEN @numPermis  IS NULL THEN 1 \r\n     " +
                "         WHEN Users.NumBadge  LIKE  +@numPermis+ \'%\'    THEN 1 \r\n              E" +
                "LSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n              WHEN @immatriculation IS NU" +
                "LL THEN 1 \r\n              WHEN  Agrement.Plaque LIKE +@immatriculation+\'%\' THEN " +
                "1 \r\n              ELSE 0 \r\n       END\r\n\r\n  AND  1 = CASE  \r\n              WHEN @" +
                "numTaxi  IS NULL THEN 1 \r\n              WHEN Events.NumTaxi  =@numTaxi      THEN" +
                " 1 \r\n              ELSE 0 \r\n       END\r\nAND  1 = CASE  \r\n              WHEN @Typ" +
                "eTaxi  IS NULL THEN 1 \r\n              WHEN Events.TypeTaxi =@TypeTaxi     THEN 1" +
                " \r\n              ELSE 0 \r\n       END\r\n\r\n AND  1 = CASE  \r\n              WHEN @co" +
                "deRefus IS NULL THEN 1 \r\n              WHEN Events.CodeRefus = @codeRefus    THE" +
                "N 1 \r\n              ELSE 0 \r\n       END\r\nAND  1 = CASE  \r\n              WHEN @ma" +
                "triculeAgent  IS NULL THEN 1 \r\n              WHEN  Events.MatriculeAdmin  LIKE  " +
                "+@matriculeAgent+ \'%\'      THEN 1 \r\n              ELSE 0 \r\n       END\r\nAND  1 = " +
                "CASE  \r\n              WHEN @typeCode  IS NULL THEN 1 \r\n              WHEN  Codes" +
                "Missions.Type =@typeCode      THEN 1 \r\n              ELSE 0 \r\n       END\r\n  AND " +
                " 1 = CASE  \r\n              WHEN @sous_Type  IS NULL THEN 1 \r\n              WHEN " +
                " Events.Sous_Type = @sous_Type THEN 1 \r\n              ELSE 0 \r\n       END \r\nAND " +
                " 1 = CASE  \r\n              WHEN @numLecteur  IS NULL THEN 1 \r\n              WHEN" +
                "  Events.NumLecteur = @numLecteur  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r" +
                "\n) AS TableEvents\r\n";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numTaxi", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("codeRefus", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matriculeAgent", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("sous_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numLecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = @"INSERT INTO Events
                         (NumLecteur, Instant, NumEvent, Type, Sous_Type, Reference, Traite, EntreeSortie, Valide, Code , NumAgrement, CodeRefus, MatriculeAdmin, NumTaxi, TypeTaxi)
VALUES        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumLecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumLecteur", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumEvent", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumEvent", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Sous_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sous_Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Reference", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Reference", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Traite", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Traite", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("EntreeSortie", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EntreeSortie", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Code", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Code", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodeRefus", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeRefus", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MatriculeAdmin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MatriculeAdmin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumTaxi", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.EventsDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.EventsDataTable GetEvents() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.EventsDataTable dataTable = new MyDataSet.EventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.EventsDataTable GetAllEvents(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string matricule, string nom, string numPermis, string immatriculation, string numTaxi, global::System.Nullable<int> typeTaxi, string codeRefus, string matriculeAgent, global::System.Nullable<int> typeCode, global::System.Nullable<int> sous_Type, global::System.Nullable<int> numLecteur) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((dateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(nom));
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(numPermis));
            }
            if ((immatriculation == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(immatriculation));
            }
            if ((numTaxi == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(numTaxi));
            }
            if ((typeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(typeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((codeRefus == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(codeRefus));
            }
            if ((matriculeAgent == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(matriculeAgent));
            }
            if ((typeCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[10].Value = ((int)(typeCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((sous_Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(sous_Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((numLecteur.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(numLecteur.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            MyDataSet.EventsDataTable dataTable = new MyDataSet.EventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.EventsDataTable GetEventsByFiltre(int Index, global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string matricule, string nom, string numPermis, string immatriculation, string numTaxi, global::System.Nullable<int> typeTaxi, string codeRefus, string matriculeAgent, global::System.Nullable<int> typeCode, global::System.Nullable<int> sous_Type, global::System.Nullable<int> numLecteur) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index));
            if ((dateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(nom));
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(numPermis));
            }
            if ((immatriculation == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(immatriculation));
            }
            if ((numTaxi == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(numTaxi));
            }
            if ((typeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[8].Value = ((int)(typeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((codeRefus == null)) {
                this.Adapter.SelectCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[9].Value = ((string)(codeRefus));
            }
            if ((matriculeAgent == null)) {
                this.Adapter.SelectCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[10].Value = ((string)(matriculeAgent));
            }
            if ((typeCode.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[11].Value = ((int)(typeCode.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((sous_Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[12].Value = ((int)(sous_Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((numLecteur.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[13].Value = ((int)(numLecteur.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            MyDataSet.EventsDataTable dataTable = new MyDataSet.EventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.EventsDataTable GetEventsSynthese(global::System.Nullable<int> TypeTaxi, global::System.Nullable<bool> Valide, System.DateTime Instant, System.DateTime Instant1) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((TypeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(TypeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Valide.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(Valide.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Instant));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(Instant1));
            MyDataSet.EventsDataTable dataTable = new MyDataSet.EventsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> CountEvents(string Reference) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((Reference == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Reference));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteEvent(int IdEvent) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(IdEvent));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetMaxIdEvent() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[6];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetReferenceByNumPermis(string NumBadge) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            if ((NumBadge == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumBadge));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTotalEvents() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalEventsByFiltre(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string matricule, string nom, string numPermis, string immatriculation, string numTaxi, global::System.Nullable<int> typeTaxi, string codeRefus, string matriculeAgent, global::System.Nullable<int> typeCode, global::System.Nullable<int> sous_Type, global::System.Nullable<int> numLecteur) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            if ((dateDebut.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(nom));
            }
            if ((numPermis == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(numPermis));
            }
            if ((immatriculation == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(immatriculation));
            }
            if ((numTaxi == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(numTaxi));
            }
            if ((typeTaxi.HasValue == true)) {
                command.Parameters[7].Value = ((int)(typeTaxi.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((codeRefus == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(codeRefus));
            }
            if ((matriculeAgent == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(matriculeAgent));
            }
            if ((typeCode.HasValue == true)) {
                command.Parameters[10].Value = ((int)(typeCode.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((sous_Type.HasValue == true)) {
                command.Parameters[11].Value = ((int)(sous_Type.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((numLecteur.HasValue == true)) {
                command.Parameters[12].Value = ((int)(numLecteur.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertEvents(global::System.Nullable<int> NumLecteur, System.DateTime Instant, global::System.Nullable<int> NumEvent, global::System.Nullable<int> Type, global::System.Nullable<int> Sous_Type, string Reference, global::System.Nullable<bool> Traite, global::System.Nullable<int> EntreeSortie, global::System.Nullable<bool> Valide, string Code, string NumAgrement, string CodeRefus, string MatriculeAdmin, string NumTaxi, global::System.Nullable<int> TypeTaxi) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[10];
            if ((NumLecteur.HasValue == true)) {
                command.Parameters[0].Value = ((int)(NumLecteur.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            command.Parameters[1].Value = ((System.DateTime)(Instant));
            if ((NumEvent.HasValue == true)) {
                command.Parameters[2].Value = ((int)(NumEvent.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Type.HasValue == true)) {
                command.Parameters[3].Value = ((int)(Type.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Sous_Type.HasValue == true)) {
                command.Parameters[4].Value = ((int)(Sous_Type.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Reference == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Reference));
            }
            if ((Traite.HasValue == true)) {
                command.Parameters[6].Value = ((bool)(Traite.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((EntreeSortie.HasValue == true)) {
                command.Parameters[7].Value = ((int)(EntreeSortie.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Valide.HasValue == true)) {
                command.Parameters[8].Value = ((bool)(Valide.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Code == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Code));
            }
            if ((NumAgrement == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(NumAgrement));
            }
            if ((CodeRefus == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(CodeRefus));
            }
            if ((MatriculeAdmin == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(MatriculeAdmin));
            }
            if ((NumTaxi == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(NumTaxi));
            }
            if ((TypeTaxi.HasValue == true)) {
                command.Parameters[14].Value = ((int)(TypeTaxi.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TypeTaxiTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public TypeTaxiTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TypeTaxi";
            tableMapping.ColumnMappings.Add("Num", "Num");
            tableMapping.ColumnMappings.Add("Libelle", "Libelle");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [TypeTaxi] ([Num], [Libelle]) VALUES (?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Num", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Num", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Num, Libelle\r\nFROM            TypeTaxi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.TypeTaxiDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.TypeTaxiDataTable GetTypeTaxi() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.TypeTaxiDataTable dataTable = new MyDataSet.TypeTaxiDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.TypeTaxiDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "TypeTaxi");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ControleUserTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ControleUserTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ControleUser";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("IdOpCreation", "IdOpCreation");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("IdOpModif", "IdOpModif");
            tableMapping.ColumnMappings.Add("DateFin", "DateFin");
            tableMapping.ColumnMappings.Add("IdLabelControle", "IdLabelControle");
            tableMapping.ColumnMappings.Add("Abrev", "Abrev");
            tableMapping.ColumnMappings.Add("IdUser", "IdUser");
            tableMapping.ColumnMappings.Add("Matricule", "Matricule");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("NumBadge", "NumBadge");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[9];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        ControleUser.Id, ControleUser.DateCreation, ControleUser.IdOpCreation, ControleUser.DateModif, ControleUser.IdOpModif, ControleUser.DateFin, 
                         ControleUser.IdLabelControle, LabelsControles.Abrev, ControleUser.IdUser, Users.Matricule, Users.NumBadge, Users.Nom, Users.Prenom
FROM            { oj { oj ControleUser INNER JOIN
                         LabelsControles ON ControleUser.IdLabelControle = LabelsControles.Id } INNER JOIN
                         Users ON ControleUser.IdUser = Users.IdUser }

Order By ControleUser.DateCreation  DESC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"select count(*) from 
(SELECT       ControleUser.Id, ControleUser.DateCreation, ControleUser.IdOpCreation, ControleUser.DateModif, ControleUser.IdOpModif, ControleUser.DateFin, 
                         ControleUser.IdLabelControle, LabelsControles.Abrev as lbAbrev, ControleUser.IdUser, Users.Matricule as Matricule, Users.Nom, Users.Prenom
FROM            { oj { oj ControleUser INNER JOIN
                         LabelsControles ON ControleUser.IdLabelControle = LabelsControles.Id } INNER JOIN
                         Users ON ControleUser.IdUser = Users.IdUser }) as TbControleUser
where (TbControleUser.Matricule = ? ) and  (TbControleUser.lbAbrev =?)

";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("libelle", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM ControleUser\r\nWHERE        (Id = ?)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Id", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "Declare @Index  int\r\nDeclare @ddlAbrevControlesUser  int\r\nDeclare @dateFin DateTi" +
                "me\r\nDeclare @numPermis NVarChar(30)\r\nDeclare @matricule NVarChar(30)\r\nDeclare @n" +
                "om NVarChar(30)\r\nDeclare @prenom NVarChar(30)\r\n\r\nset @Index  = ?\r\nset @ddlAbrevC" +
                "ontrolesUser   = ?\r\nset @dateFin = ?\r\nset @numPermis  = ?\r\nset @matricule  = ?\r\n" +
                "set @nom  = ?\r\nset @prenom  = ?\r\n\r\n\r\n\r\nselect * from (\r\nSELECT  ROW_NUMBER() OVE" +
                "R (ORDER BY ControleUser.DateCreation DESC ) AS RowNum,   ControleUser.Id, Contr" +
                "oleUser.IdOpCreation, ControleUser.DateModif, ControleUser.IdOpModif, ControleUs" +
                "er.DateFin, \r\n                         ControleUser.IdLabelControle, LabelsContr" +
                "oles.Abrev, ControleUser.IdUser, Users.Matricule, Users.NumBadge, Users.Nom, Use" +
                "rs.Prenom\r\nFROM            { oj { oj ControleUser INNER JOIN\r\n                  " +
                "       LabelsControles ON ControleUser.IdLabelControle = LabelsControles.Id } IN" +
                "NER JOIN\r\n                         Users ON ControleUser.IdUser = Users.IdUser }" +
                "\r\n\r\nWHERE       1 = CASE  \r\n              WHEN @ddlAbrevControlesUser  IS NULL T" +
                "HEN 1 \r\n              WHEN ControleUser.IdLabelControle = @ddlAbrevControlesUser" +
                "  THEN 1 \r\n              ELSE 0 \r\n       END  \r\n\r\n AND  1 = CASE  \r\n            " +
                "  WHEN @dateFin  IS NULL THEN 1 \r\n              WHEN ControleUser.DateFin   <=  " +
                "@dateFin   THEN 1 \r\n              ELSE 0 \r\n       END \r\n AND    1 = CASE  \r\n    " +
                "          WHEN @numPermis  IS NULL THEN 1 \r\n              WHEN Users.NumBadge = " +
                "@numPermis  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n    AND  1 = CASE  \r\n " +
                "             WHEN @matricule  IS NULL THEN 1 \r\n              WHEN Users.Matricul" +
                "e = @matricule  THEN 1 \r\n              ELSE 0 \r\n       END      \r\n              " +
                "  \r\n AND    1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n              " +
                "WHEN Users.Nom   = @nom  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n AND    1" +
                " = CASE  \r\n              WHEN @prenom  IS NULL THEN 1 \r\n              WHEN Users" +
                ".Prenom   = @prenom  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n ) as TableCo" +
                "ntrolesUser\r\n    \r\n WHERE ( TableControlesUser.RowNum   BETWEEN  (@Index*15)-14 " +
                " AND (@Index * 15))";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlAbrevControleUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "Declare @ddlAbrevControlesUser  int\r\nDeclare @dateFin DateTime\r\nDeclare @numPermi" +
                "s NVarChar(30)\r\nDeclare @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDecl" +
                "are @prenom NVarChar(30)\r\n\r\n\r\nset @ddlAbrevControlesUser   = ?\r\nset @dateFin = ?" +
                "\r\nset @numPermis  = ?\r\nset @matricule  = ?\r\nset @nom  = ?\r\nset @prenom  = ?\r\n\r\nS" +
                "ELECT        ControleUser.Id, ControleUser.DateCreation, ControleUser.IdOpCreati" +
                "on, ControleUser.DateModif, ControleUser.IdOpModif, ControleUser.DateFin, \r\n    " +
                "                     ControleUser.IdLabelControle, LabelsControles.Abrev, Contro" +
                "leUser.IdUser, Users.Matricule, Users.NumBadge, Users.Nom, Users.Prenom\r\nFROM   " +
                "         { oj { oj ControleUser INNER JOIN\r\n                         LabelsContr" +
                "oles ON ControleUser.IdLabelControle = LabelsControles.Id } INNER JOIN\r\n        " +
                "                 Users ON ControleUser.IdUser = Users.IdUser }\r\n\r\nWHERE       1 " +
                "= CASE  \r\n              WHEN @ddlAbrevControlesUser  IS NULL THEN 1 \r\n          " +
                "    WHEN ControleUser.IdLabelControle = @ddlAbrevControlesUser  THEN 1 \r\n       " +
                "       ELSE 0 \r\n       END  \r\n\r\n AND  1 = CASE  \r\n              WHEN @dateFin  I" +
                "S NULL THEN 1 \r\n              WHEN ControleUser.DateFin   <=  @dateFin   THEN 1 " +
                "\r\n              ELSE 0 \r\n       END \r\n AND    1 = CASE  \r\n              WHEN @nu" +
                "mPermis  IS NULL THEN 1 \r\n              WHEN Users.NumBadge = @numPermis  THEN 1" +
                " \r\n              ELSE 0 \r\n       END\r\n\r\n    AND  1 = CASE  \r\n              WHEN " +
                "@matricule  IS NULL THEN 1 \r\n              WHEN Users.Matricule = @matricule  TH" +
                "EN 1 \r\n              ELSE 0 \r\n       END      \r\n                \r\n AND    1 = CA" +
                "SE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n              WHEN Users.Nom   =" +
                " @nom  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n AND    1 = CASE  \r\n       " +
                "       WHEN @prenom  IS NULL THEN 1 \r\n              WHEN Users.Prenom   = @preno" +
                "m  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\nOrder By ControleUser.DateCreat" +
                "ion  DESC";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlAbrevControleUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "select count(*) from ControleUser";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "\r\nDeclare @ddlAbrevControlesUser  int\r\nDeclare @dateFin DateTime\r\nDeclare @numPer" +
                "mis NVarChar(30)\r\nDeclare @matricule NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDe" +
                "clare @prenom NVarChar(30)\r\n\r\n\r\nset @ddlAbrevControlesUser   = ?\r\nset @dateFin =" +
                " ?\r\nset @numPermis  = ?\r\nset @matricule  = ?\r\nset @nom  = ?\r\nset @prenom  = ?\r\n\r" +
                "\n\r\n\r\nselect COUNT(*)\r\nFROM          { oj { oj ControleUser INNER JOIN\r\n         " +
                "                LabelsControles ON ControleUser.IdLabelControle = LabelsControle" +
                "s.Id } INNER JOIN\r\n                         Users ON ControleUser.IdUser = Users" +
                ".IdUser }\r\n\r\nWHERE       1 = CASE  \r\n              WHEN @ddlAbrevControlesUser  " +
                "IS NULL THEN 1 \r\n              WHEN ControleUser.IdLabelControle = @ddlAbrevCont" +
                "rolesUser  THEN 1 \r\n              ELSE 0 \r\n       END  \r\n\r\n AND  1 = CASE  \r\n   " +
                "           WHEN @dateFin  IS NULL THEN 1 \r\n              WHEN ControleUser.DateF" +
                "in   <=  @dateFin   THEN 1 \r\n              ELSE 0 \r\n       END \r\n AND    1 = CAS" +
                "E  \r\n              WHEN @numPermis  IS NULL THEN 1 \r\n              WHEN Users.Nu" +
                "mBadge = @numPermis  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n    AND  1 = " +
                "CASE  \r\n              WHEN @matricule  IS NULL THEN 1 \r\n              WHEN Users" +
                ".Matricule = @matricule  THEN 1 \r\n              ELSE 0 \r\n       END      \r\n     " +
                "           \r\n AND    1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n     " +
                "         WHEN Users.Nom   = @nom  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n" +
                " AND    1 = CASE  \r\n              WHEN @prenom  IS NULL THEN 1 \r\n              W" +
                "HEN Users.Prenom   = @prenom  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlAbrevControleUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numPermis", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "INSERT INTO ControleUser\r\n                         (DateCreation, IdOpCreation, D" +
                "ateModif, IdOpModif, DateFin, IdLabelControle, IdUser)\r\nVALUES        (?, ?, ?, " +
                "?, ?, ?, ?)";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdLabelControle", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdLabelControle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "UPDATE       ControleUser\r\nSET                DateModif = ?, IdOpModif = ?, DateF" +
                "in = ?\r\nWHERE        (Id = ?)";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Id", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.ControleUserDataTable getControleUser() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.ControleUserDataTable dataTable = new MyDataSet.ControleUserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.ControleUserDataTable GetAllControlesUser(global::System.Nullable<int> Index, global::System.Nullable<int> ddlAbrevControleUser, global::System.Nullable<global::System.DateTime> dateFin, string numPermis, string matricule, string nom, string prenom) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ddlAbrevControleUser.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ddlAbrevControleUser.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(prenom));
            }
            MyDataSet.ControleUserDataTable dataTable = new MyDataSet.ControleUserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.ControleUserDataTable GetAllControleUserByFiltre(global::System.Nullable<int> ddlAbrevControleUser, global::System.Nullable<global::System.DateTime> dateFin, string numPermis, string matricule, string nom, string prenom) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ddlAbrevControleUser.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ddlAbrevControleUser.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numPermis == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(prenom));
            }
            MyDataSet.ControleUserDataTable dataTable = new MyDataSet.ControleUserDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ControleUserExiste(string matricule, string libelle) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((matricule == null)) {
                throw new global::System.ArgumentNullException("matricule");
            }
            else {
                command.Parameters[0].Value = ((string)(matricule));
            }
            if ((libelle == null)) {
                throw new global::System.ArgumentNullException("libelle");
            }
            else {
                command.Parameters[1].Value = ((string)(libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteControleUser(int Id) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalControlesUser() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[5];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalControlesUserByFiltre(global::System.Nullable<int> ddlAbrevControleUser, global::System.Nullable<global::System.DateTime> dateFin, string numPermis, string matricule, string nom, string prenom) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[6];
            if ((ddlAbrevControleUser.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ddlAbrevControleUser.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numPermis == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(numPermis));
            }
            if ((matricule == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(prenom));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertControleUser(global::System.Nullable<global::System.DateTime> DateCreation, global::System.Nullable<int> IdOpCreation, global::System.Nullable<global::System.DateTime> DateModif, global::System.Nullable<int> IdOpModif, global::System.Nullable<global::System.DateTime> DateFin, global::System.Nullable<int> IdLabelControle, global::System.Nullable<int> IdUser) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((IdLabelControle.HasValue == true)) {
                command.Parameters[5].Value = ((int)(IdLabelControle.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((IdUser.HasValue == true)) {
                command.Parameters[6].Value = ((int)(IdUser.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateControleUser(global::System.Nullable<global::System.DateTime> DateModif, global::System.Nullable<int> IdOpModif, global::System.Nullable<global::System.DateTime> DateFin, int Original_Id) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((DateModif.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            command.Parameters[3].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LabelsControlesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LabelsControlesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "LabelsControles";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("Abrev", "Abrev");
            tableMapping.ColumnMappings.Add("Libelle", "Libelle");
            tableMapping.ColumnMappings.Add("Type", "Type");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LabelsControles] ([Abrev], [Libelle], [Type]) VALUES (?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Abrev", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Abrev", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[2];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Id, Abrev, Libelle, Type\r\nFROM            LabelsControles\r\nWhere Ty" +
                "pe=?";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        Id, Abrev, Libelle, Type\r\nFROM            LabelsControles\r\n";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.LabelsControlesDataTable dataTable, global::System.Nullable<int> Type) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.LabelsControlesDataTable GetLabelsControlesByType(global::System.Nullable<int> Type) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Type.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Type.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            MyDataSet.LabelsControlesDataTable dataTable = new MyDataSet.LabelsControlesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, false)]
        public virtual int FillBy(MyDataSet.LabelsControlesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.LabelsControlesDataTable GetLabelsControles() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            MyDataSet.LabelsControlesDataTable dataTable = new MyDataSet.LabelsControlesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.LabelsControlesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "LabelsControles");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ControlesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public ControlesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Controles";
            tableMapping.ColumnMappings.Add("DateFin", "DateFin");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("IdOpCreation", "IdOpCreation");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("IdOpModif", "IdOpModif");
            tableMapping.ColumnMappings.Add("IdVehicule", "IdVehicule");
            tableMapping.ColumnMappings.Add("TypeTaxi", "TypeTaxi");
            tableMapping.ColumnMappings.Add("NumTaxi", "NumTaxi");
            tableMapping.ColumnMappings.Add("IdLabelControle", "IdLabelControle");
            tableMapping.ColumnMappings.Add("LibelleControle", "LibelleControle");
            tableMapping.ColumnMappings.Add("Plaque", "Plaque");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[12];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     Controles.DateFin, Controles.DateModif, Controles.IdOpCreation, Controles.DateCreation, Controles.Id, Controles.IdOpModif, Controles.IdVehicule, Agrement.Plaque, 
                      TypeTaxi.Libelle AS TypeTaxi, Agrement.NumTaxi, LabelsControles.Abrev AS LibelleControle, Controles.IdLabelControle
FROM         Controles INNER JOIN
                      LabelsControles ON Controles.IdLabelControle = LabelsControles.Id LEFT OUTER JOIN
                      Agrement INNER JOIN
                      TypeTaxi ON Agrement.TypeTaxi = TypeTaxi.Num ON Controles.IdVehicule = Agrement.IdVehicule";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT        COUNT(*) 
FROM            Controles, Agrement, LabelsControles,TypeTaxi
WHERE        Controles.IdVehicule = Agrement.IdVehicule AND Agrement.TypeTaxi = TypeTaxi.Num AND Controles.IdLabelControle = LabelsControles.Id AND (Agrement.NumTaxi = ?) AND (TypeTaxi.Libelle = ?) AND (LabelsControles.Abrev = ?) 

";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumTaxi", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Abrev", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Abrev", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "DELETE FROM Controles\r\nWHERE        (Id = ?)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Id", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "Declare @Index int\r\nDeclare @ddlAbrevControlesVh  NVarChar(30)\r\nDeclare @dateFin " +
                "DateTime\r\nDeclare @numTaxi NVarChar(30)\r\nDeclare @ddltypeTaxi int\r\nDeclare @imma" +
                "triculation NVarChar(30)\r\n\r\n\r\nset @Index = ?\r\nset @ddlAbrevControlesVh   = ?\r\nse" +
                "t @dateFin = ?\r\nset @numTaxi = ?\r\nset @ddltypeTaxi = ?\r\nset @immatriculation = ?" +
                "\r\n\r\n\r\nselect * from (\r\nSELECT  ROW_NUMBER() OVER (ORDER BY Controles.DateCreatio" +
                "n  DESC ) AS RowNum, Controles.DateFin, Controles.DateModif, Controles.IdOpCreat" +
                "ion, Controles.DateCreation, Controles.Id, Controles.IdOpModif, Controles.IdVehi" +
                "cule, Agrement.Plaque, TypeTaxi.Libelle AS TypeTaxi, Agrement.NumTaxi, LabelsCon" +
                "troles.Abrev AS LibelleControle, Controles.IdLabelControle\r\nFROM         Control" +
                "es INNER JOIN\r\n                      LabelsControles ON Controles.IdLabelControl" +
                "e = LabelsControles.Id LEFT OUTER JOIN\r\n                      Agrement INNER JOI" +
                "N\r\n                      TypeTaxi ON Agrement.TypeTaxi = TypeTaxi.Num ON Control" +
                "es.IdVehicule = Agrement.IdVehicule\r\n\r\nWHERE       1 = CASE  \r\n              WHE" +
                "N @ddlAbrevControlesVh   IS NULL THEN 1 \r\n              WHEN Controles.IdLabelCo" +
                "ntrole = @ddlAbrevControlesVh   THEN 1 \r\n              ELSE 0 \r\n       END  \r\n\r\n" +
                " AND  1 = CASE  \r\n              WHEN @dateFin  IS NULL THEN 1 \r\n              WH" +
                "EN Controles.DateFin   <=  @dateFin   THEN 1 \r\n              ELSE 0 \r\n       END" +
                " \r\n AND    1 = CASE  \r\n              WHEN @numTaxi IS NULL THEN 1 \r\n            " +
                "  WHEN Agrement.NumTaxi = @numTaxi   THEN 1 \r\n              ELSE 0 \r\n       END\r" +
                "\n\r\n    AND  1 = CASE  \r\n              WHEN @ddltypeTaxi  IS NULL THEN 1 \r\n      " +
                "        WHEN Agrement.TypeTaxi = @ddltypeTaxi    THEN 1 \r\n              ELSE 0 \r" +
                "\n       END      \r\n                \r\n AND    1 = CASE  \r\n              WHEN @imm" +
                "atriculation  IS NULL THEN 1 \r\n              WHEN Agrement.Plaque   = @immatricu" +
                "lation  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n                          " +
                "              \r\n    ) as TableControlesVh\r\n    \r\n WHERE ( TableControlesVh.RowNu" +
                "m   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlAbrevControlesVh", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numTaxi", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlTypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "\r\nDeclare @ddlAbrevControlesVh  NVarChar(30)\r\nDeclare @dateFin DateTime\r\nDeclare " +
                "@numTaxi NVarChar(30)\r\nDeclare @ddltypeTaxi int\r\nDeclare @immatriculation NVarCh" +
                "ar(30)\r\n\r\n\r\n\r\nset @ddlAbrevControlesVh   = ?\r\nset @dateFin = ?\r\nset @numTaxi = ?" +
                "\r\nset @ddltypeTaxi = ?\r\nset @immatriculation = ?\r\n\r\n\r\n\r\nSELECT   Controles.DateF" +
                "in, Controles.DateModif, Controles.IdOpCreation, Controles.DateCreation, Control" +
                "es.Id, Controles.IdOpModif, Controles.IdVehicule, Agrement.Plaque, TypeTaxi.Libe" +
                "lle AS TypeTaxi, Agrement.NumTaxi, LabelsControles.Abrev AS LibelleControle, Con" +
                "troles.IdLabelControle\r\nFROM         Controles INNER JOIN\r\n                     " +
                " LabelsControles ON Controles.IdLabelControle = LabelsControles.Id LEFT OUTER JO" +
                "IN\r\n                      Agrement INNER JOIN\r\n                      TypeTaxi ON" +
                " Agrement.TypeTaxi = TypeTaxi.Num ON Controles.IdVehicule = Agrement.IdVehicule\r" +
                "\n\r\nWHERE       1 = CASE  \r\n              WHEN @ddlAbrevControlesVh   IS NULL THE" +
                "N 1 \r\n              WHEN Controles.IdLabelControle = @ddlAbrevControlesVh   THEN" +
                " 1 \r\n              ELSE 0 \r\n       END  \r\n\r\n AND  1 = CASE  \r\n              WHEN" +
                " @dateFin  IS NULL THEN 1 \r\n              WHEN Controles.DateFin   <=  @dateFin " +
                "  THEN 1 \r\n              ELSE 0 \r\n       END \r\n AND    1 = CASE  \r\n             " +
                " WHEN @numTaxi IS NULL THEN 1 \r\n              WHEN Agrement.NumTaxi = @numTaxi  " +
                " THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n    AND  1 = CASE  \r\n            " +
                "  WHEN @ddltypeTaxi  IS NULL THEN 1 \r\n              WHEN Agrement.TypeTaxi = @dd" +
                "ltypeTaxi    THEN 1 \r\n              ELSE 0 \r\n       END      \r\n                \r" +
                "\n AND    1 = CASE  \r\n              WHEN @immatriculation  IS NULL THEN 1 \r\n     " +
                "         WHEN Agrement.Plaque   = @immatriculation  THEN 1 \r\n              ELSE " +
                "0 \r\n       END\r\n\r\n                                        \r\n   ";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlAbrevControlesVh", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numTaxi", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlTypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Agrement.Plaque\r\nFROM            Agrement, TypeTaxi\r\nWHERE        A" +
                "grement.TypeTaxi = TypeTaxi.Num AND (Agrement.NumTaxi = ?) AND (TypeTaxi.Libelle" +
                " = ?)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumTaxi", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        NumTaxi\r\nFROM            Agrement\r\nWHERE        (Agrement.Plaque = " +
                "?) ";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "select count(*) from Controles";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "\r\nDeclare @ddlAbrevControlesVh  NVarChar(30)\r\nDeclare @dateFin DateTime\r\nDeclare " +
                "@numTaxi NVarChar(30)\r\nDeclare @ddltypeTaxi int\r\nDeclare @immatriculation NVarCh" +
                "ar(30)\r\n\r\n\r\n\r\nset @ddlAbrevControlesVh   = ?\r\nset @dateFin = ?\r\nset @numTaxi = ?" +
                "\r\nset @ddltypeTaxi = ?\r\nset @immatriculation = ?\r\n\r\n\r\n\r\nSELECT count(*)  \r\nFROM " +
                "        Controles INNER JOIN\r\n                      LabelsControles ON Controles" +
                ".IdLabelControle = LabelsControles.Id LEFT OUTER JOIN\r\n                      Agr" +
                "ement INNER JOIN\r\n                      TypeTaxi ON Agrement.TypeTaxi = TypeTaxi" +
                ".Num ON Controles.IdVehicule = Agrement.IdVehicule\r\n \r\nWHERE       1 = CASE  \r\n " +
                "             WHEN @ddlAbrevControlesVh   IS NULL THEN 1 \r\n              WHEN Con" +
                "troles.IdLabelControle = @ddlAbrevControlesVh   THEN 1 \r\n              ELSE 0 \r\n" +
                "       END  \r\n\r\n AND  1 = CASE  \r\n              WHEN @dateFin  IS NULL THEN 1 \r\n" +
                "              WHEN Controles.DateFin   <=  @dateFin   THEN 1 \r\n              ELS" +
                "E 0 \r\n       END \r\n AND    1 = CASE  \r\n              WHEN @numTaxi IS NULL THEN " +
                "1 \r\n              WHEN Agrement.NumTaxi = @numTaxi   THEN 1 \r\n              ELSE" +
                " 0 \r\n       END\r\n\r\n    AND  1 = CASE  \r\n              WHEN @ddltypeTaxi  IS NULL" +
                " THEN 1 \r\n              WHEN Agrement.TypeTaxi = @ddltypeTaxi    THEN 1 \r\n      " +
                "        ELSE 0 \r\n       END      \r\n                \r\n AND    1 = CASE  \r\n       " +
                "       WHEN @immatriculation  IS NULL THEN 1 \r\n              WHEN Agrement.Plaqu" +
                "e   = @immatriculation  THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n          " +
                "                              \r\n   ";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlAbrevControlesVh", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numTaxi", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ddlTypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT        TypeTaxi.Libelle As TypeTaxi\r\nFROM            Agrement, TypeTaxi\r\nW" +
                "HERE        Agrement.TypeTaxi = TypeTaxi.Num AND (Agrement.Plaque = ?) ";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "INSERT INTO Controles\r\n                         (DateCreation, IdOpCreation, Date" +
                "Modif, IdOpModif, DateFin, IdLabelControle, IdVehicule)\r\nVALUES        (?, ?, ?," +
                " ?, ?, ?, ?)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdLabelControle", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdLabelControle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdVehicule", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdVehicule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "UPDATE       Controles\r\nSET                 DateModif = ?, IdOpModif = ?, DateFin" +
                " = ?\r\nWHERE        (Id = ?)";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Id", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Id", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.ControlesDataTable GetControles() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.ControlesDataTable dataTable = new MyDataSet.ControlesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.ControlesDataTable GetAllControlesVehicule(global::System.Nullable<int> Index, global::System.Nullable<int> ddlAbrevControlesVh, global::System.Nullable<global::System.DateTime> DateFin, string numTaxi, global::System.Nullable<int> ddlTypeTaxi, string immatriculation) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((ddlAbrevControlesVh.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ddlAbrevControlesVh.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((numTaxi == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(numTaxi));
            }
            if ((ddlTypeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((int)(ddlTypeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((immatriculation == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(immatriculation));
            }
            MyDataSet.ControlesDataTable dataTable = new MyDataSet.ControlesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.ControlesDataTable GetAllControlesVehiculeByFiltre(global::System.Nullable<int> ddlAbrevControlesVh, global::System.Nullable<global::System.DateTime> DateFin, string numTaxi, global::System.Nullable<int> ddlTypeTaxi, string immatriculation) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((ddlAbrevControlesVh.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(ddlAbrevControlesVh.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numTaxi == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(numTaxi));
            }
            if ((ddlTypeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(ddlTypeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((immatriculation == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(immatriculation));
            }
            MyDataSet.ControlesDataTable dataTable = new MyDataSet.ControlesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object ControleExiste(string NumTaxi, string Libelle, string Abrev) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((NumTaxi == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumTaxi));
            }
            if ((Libelle == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Libelle));
            }
            if ((Abrev == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Abrev));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteControle(int Id) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            command.Parameters[0].Value = ((int)(Id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GetImmatByNumTaxiTypeTaxi(string NumTaxi, string Libelle) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[5];
            if ((NumTaxi == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumTaxi));
            }
            if ((Libelle == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual string GetNumTaxiByImmat(string Plaque) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[6];
            if ((Plaque == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Plaque));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((string)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalControlesVehicule() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalControlesVehiculeByFiltre(global::System.Nullable<int> ddlAbrevControlesVh, global::System.Nullable<global::System.DateTime> DateFin, string numTaxi, global::System.Nullable<int> ddlTypeTaxi, string immatriculation) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((ddlAbrevControlesVh.HasValue == true)) {
                command.Parameters[0].Value = ((int)(ddlAbrevControlesVh.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numTaxi == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(numTaxi));
            }
            if ((ddlTypeTaxi.HasValue == true)) {
                command.Parameters[3].Value = ((int)(ddlTypeTaxi.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((immatriculation == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(immatriculation));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTypeTaxiByImmat(string Plaque) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            if ((Plaque == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Plaque));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertControle(global::System.Nullable<global::System.DateTime> DateCreation, global::System.Nullable<int> IdOpCreation, global::System.Nullable<global::System.DateTime> DateModif, global::System.Nullable<int> IdOpModif, global::System.Nullable<global::System.DateTime> DateFin, global::System.Nullable<int> IdLabelControle, global::System.Nullable<int> IdVehicule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[10];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((IdLabelControle.HasValue == true)) {
                command.Parameters[5].Value = ((int)(IdLabelControle.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((IdVehicule.HasValue == true)) {
                command.Parameters[6].Value = ((int)(IdVehicule.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateControle(global::System.Nullable<global::System.DateTime> DateModif, global::System.Nullable<int> IdOpModif, global::System.Nullable<global::System.DateTime> DateFin, int Original_Id) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[11];
            if ((DateModif.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            command.Parameters[3].Value = ((int)(Original_Id));
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VehiculesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VehiculesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Vehicules";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("IdOpCreation", "IdOpCreation");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("IdOpModif", "IdOpModif");
            tableMapping.ColumnMappings.Add("Immat", "Immat");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("Cin", "Cin");
            tableMapping.ColumnMappings.Add("DateMec", "DateMec");
            tableMapping.ColumnMappings.Add("DateImmat", "DateImmat");
            tableMapping.ColumnMappings.Add("Marque", "Marque");
            tableMapping.ColumnMappings.Add("Modele", "Modele");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Vehicules] ([DateCreation], [IdOpCreation], [DateModif], [IdOpModif]" +
                ", [Immat], [Nom], [Prenom], [Cin], [DateMec], [DateImmat], [Marque], [Modele]) V" +
                "ALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Cin", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cin", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateMec", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateMec", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateImmat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateImmat", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Marque", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Marque", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modele", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modele", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[11];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        Id, DateCreation, IdOpCreation, DateModif, IdOpModif, Immat, Nom, P" +
                "renom, Cin, DateMec, DateImmat, Marque, Modele\r\nFROM            Vehicules\r\nWHERE" +
                "        (Immat = ?)";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT Cin, DateCreation, DateImmat, DateMec, DateModif, Id, IdOpCreation, IdOpMo" +
                "dif, Immat, Marque, Modele, Nom, Prenom FROM Vehicules";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "\r\nDeclare  @dateImmat  DateTime\r\nDeclare  @dateMec DateTime\r\nDeclare  @numImmat N" +
                "Varchar(30)\r\nDeclare  @marque NVarchar(30)\r\nDeclare  @modele  NVarchar(30)\r\nDecl" +
                "are @nomprop NVarchar(30)\r\nDeclare @prenomprop NVarchar(30)\r\nDeclare @cinprop NV" +
                "archar(30)\r\n\r\n\r\n\r\nSET  @dateImmat =  ?\r\nSET  @dateMec =  ?\r\nSET  @numImmat =  ?\r" +
                "\nSET  @marque =  ?\r\nSET  @modele =  ?\r\nSET  @nomprop =  ?\r\nSET  @prenomprop =  ?" +
                "\r\nSET  @cinprop =  ?\r\n\r\n\r\nSELECT  *  FROM    Vehicules \r\n                \r\nWhere" +
                "  \r\n 1 = CASE  \r\n              WHEN @dateImmat  IS NULL THEN 1 \r\n              W" +
                "HEN Vehicules.DateImmat  <= @dateImmat   THEN 1 \r\n              ELSE 0 \r\n       " +
                "END \r\n   AND  1 = CASE  \r\n              WHEN @dateMec  IS NULL THEN 1 \r\n        " +
                "      WHEN Vehicules.DateMec  <= @dateMec   THEN 1 \r\n              ELSE 0 \r\n    " +
                "   END      \r\n              \r\n  AND  1 = CASE  \r\n              WHEN @numImmat  I" +
                "S NULL THEN 1 \r\n              WHEN Vehicules.Immat  LIKE +@numImmat+ \'%\'    THEN" +
                " 1 \r\n              ELSE 0 \r\n       END \r\n       \r\n  AND  1 = CASE  \r\n           " +
                "   WHEN @marque  IS NULL THEN 1 \r\n              WHEN Vehicules.Marque LIKE +@mar" +
                "que+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND 1 = CASE  \r\n     " +
                "         WHEN @modele  IS NULL THEN 1 \r\n              WHEN Vehicules.Modele LIKE" +
                "  +@modele+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND 1 = CASE  " +
                "\r\n              WHEN @nomprop  IS NULL THEN 1 \r\n              WHEN Vehicules.Nom" +
                " LIKE  +@nomprop+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n         A" +
                "ND 1 = CASE  \r\n              WHEN @prenomprop  IS NULL THEN 1 \r\n              WH" +
                "EN Vehicules.Prenom LIKE  +@prenomprop+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n " +
                "      END \r\n   AND 1 = CASE  \r\n              WHEN @cinprop  IS NULL THEN 1 \r\n   " +
                "           WHEN Vehicules.Cin LIKE  +@cinprop+ \'%\'    THEN 1 \r\n              ELS" +
                "E 0 \r\n       END    \r\n       \r\n    ";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateImmat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateMec", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Marque", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modele", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nomProp", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenomProp", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("cinProp", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "Declare @Index int\r\nDeclare  @dateImmat  DateTime\r\nDeclare  @dateMec DateTime\r\nDe" +
                "clare  @numImmat NVarchar(30)\r\nDeclare  @marque NVarchar(30)\r\nDeclare  @modele  " +
                "NVarchar(30)\r\nDeclare @nomprop NVarchar(30)\r\nDeclare @prenomprop NVarchar(30)\r\nD" +
                "eclare @cinprop NVarchar(30)\r\n\r\n\r\nSET @Index = ?\r\nSET  @dateImmat =  ?\r\nSET  @da" +
                "teMec =  ?\r\nSET  @numImmat =  ?\r\nSET  @marque =  ?\r\nSET  @modele =  ?\r\nSET  @nom" +
                "prop =  ?\r\nSET  @prenomprop =  ?\r\nSET  @cinprop =  ?\r\n\r\nselect * from (\r\nSELECT " +
                " *, ROW_NUMBER() OVER (ORDER BY Vehicules.DateCreation DESC ) AS RowNum  FROM   " +
                " Vehicules \r\n                \r\nWhere  \r\n 1 = CASE  \r\n              WHEN @dateImm" +
                "at  IS NULL THEN 1 \r\n              WHEN Vehicules.DateImmat  <= @dateImmat   THE" +
                "N 1 \r\n              ELSE 0 \r\n       END \r\n   AND  1 = CASE  \r\n              WHEN" +
                " @dateMec  IS NULL THEN 1 \r\n              WHEN Vehicules.DateMec  <= @dateMec   " +
                "THEN 1 \r\n              ELSE 0 \r\n       END      \r\n              \r\n  AND  1 = CAS" +
                "E  \r\n              WHEN @numImmat  IS NULL THEN 1 \r\n              WHEN Vehicules" +
                ".Immat  LIKE +@numImmat+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n   " +
                "    \r\n  AND  1 = CASE  \r\n              WHEN @marque  IS NULL THEN 1 \r\n          " +
                "    WHEN Vehicules.Marque LIKE +@marque+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n" +
                "       END \r\n  AND 1 = CASE  \r\n              WHEN @modele  IS NULL THEN 1 \r\n    " +
                "          WHEN Vehicules.Modele LIKE  +@modele+ \'%\'    THEN 1 \r\n              EL" +
                "SE 0 \r\n       END \r\n  AND 1 = CASE  \r\n              WHEN @nomprop  IS NULL THEN " +
                "1 \r\n              WHEN Vehicules.Nom LIKE  +@nomprop+ \'%\'    THEN 1 \r\n          " +
                "    ELSE 0 \r\n       END \r\n         AND 1 = CASE  \r\n              WHEN @prenompro" +
                "p  IS NULL THEN 1 \r\n              WHEN Vehicules.Prenom LIKE  +@prenomprop+ \'%\' " +
                "   THEN 1 \r\n              ELSE 0 \r\n       END \r\n   AND 1 = CASE  \r\n             " +
                " WHEN @cinprop  IS NULL THEN 1 \r\n              WHEN Vehicules.Cin LIKE  +@cinpro" +
                "p+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END    \r\n       \r\n        )    " +
                " as TableCarteGrises     \r\n\r\nWHERE  TableCarteGrises.RowNum    BETWEEN  (@Index*" +
                "15)-14  AND (@Index * 15)   ";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateImmat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateMec", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Marque", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modele", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nomProp", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenomProp", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("cinProp", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT Cin, DateCreation, DateImmat, DateMec, DateModif, Id, IdOpCreation, IdOpMo" +
                "dif, Immat, Marque, Modele, Nom, Prenom FROM Vehicules";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT v.Cin, v.DateCreation, v.DateImmat, v.DateMec, v.DateModif, v.Id, v.IdOpCr" +
                "eation, v.IdOpModif, v.Immat, v.Marque, v.Modele, v.Nom, v.Prenom FROM { oj Vehi" +
                "cules v LEFT OUTER JOIN Agrement a ON v.Immat = a.Plaque } WHERE (a.Plaque IS NU" +
                "LL)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT COUNT(*) FROM Vehicules";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "Declare  @dateImmat  DateTime\r\nDeclare  @dateMec DateTime\r\nDeclare  @numImmat NVa" +
                "rchar(30)\r\nDeclare  @marque NVarchar(30)\r\nDeclare  @modele  NVarchar(30)\r\nDeclar" +
                "e @nomprop NVarchar(30)\r\nDeclare @prenomprop NVarchar(30)\r\nDeclare @cinprop NVar" +
                "char(30)\r\n\r\nSET  @dateImmat =  ?\r\nSET  @dateMec =  ?\r\nSET  @numImmat =  ?\r\nSET  " +
                "@marque =  ?\r\nSET  @modele =  ?\r\nSET  @nomprop =  ?\r\nSET  @prenomprop =  ?\r\nSET " +
                " @cinprop =  ?\r\n\r\nSELECT  COUNT(*) As Total\r\n\r\nFROM    Vehicules \r\n             " +
                "   \r\nWhere  \r\n 1 = CASE  \r\n              WHEN @dateImmat  IS NULL THEN 1 \r\n     " +
                "         WHEN Vehicules.DateImmat  <= @dateImmat   THEN 1 \r\n              ELSE 0" +
                " \r\n       END \r\n   AND  1 = CASE  \r\n              WHEN @dateMec  IS NULL THEN 1 " +
                "\r\n              WHEN Vehicules.DateMec  <= @dateMec   THEN 1 \r\n              ELS" +
                "E 0 \r\n       END      \r\n              \r\n  AND  1 = CASE  \r\n              WHEN @n" +
                "umImmat  IS NULL THEN 1 \r\n              WHEN Vehicules.Immat  LIKE +@numImmat+ \'" +
                "%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n       \r\n  AND  1 = CASE  \r\n " +
                "             WHEN @marque  IS NULL THEN 1 \r\n              WHEN Vehicules.Marque " +
                "LIKE +@marque+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND 1 = CAS" +
                "E  \r\n              WHEN @modele  IS NULL THEN 1 \r\n              WHEN Vehicules.M" +
                "odele LIKE  +@modele+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n  AND " +
                "1 = CASE  \r\n              WHEN @nomprop  IS NULL THEN 1 \r\n              WHEN Veh" +
                "icules.Nom LIKE  +@nomprop+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n" +
                "         AND 1 = CASE  \r\n              WHEN @prenomprop  IS NULL THEN 1 \r\n      " +
                "        WHEN Vehicules.Prenom LIKE  +@prenomprop+ \'%\'    THEN 1 \r\n              " +
                "ELSE 0 \r\n       END \r\n   AND 1 = CASE  \r\n              WHEN @cinprop  IS NULL TH" +
                "EN 1 \r\n              WHEN Vehicules.Cin LIKE  +@cinprop+ \'%\'    THEN 1 \r\n       " +
                "       ELSE 0 \r\n       END       ";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateImmat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateMec", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Marque", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modele", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomProp", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("PrenomProp", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CinProp", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "INSERT INTO Vehicules\r\n                         (DateCreation, IdOpCreation, Date" +
                "Modif, IdOpModif, Immat, Nom, Prenom, Cin, DateMec, DateImmat, Marque, Modele)\r\n" +
                "VALUES        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?)";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Cin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateMec", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateMec", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateImmat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateImmat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Marque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Marque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modele", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modele", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "DELETE FROM Vehicules\r\nWHERE        (Immat = ?)";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = "UPDATE       Vehicules\r\nSET                DateCreation = ?, IdOpCreation = ?, Da" +
                "teMec = ?, DateModif = ?, IdOpModif = ?, Immat = ?, Nom = ?, Prenom = ?, Cin = ?" +
                ", DateImmat = ?, Marque =?, Modele =?\r\nWHERE        (Immat = ?)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateMec", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateMec", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Cin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateImmat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateImmat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Marque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Marque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modele", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modele", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Immat", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Immat", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.VehiculesDataTable GetUnVehicule(string Immat) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Immat == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Immat));
            }
            MyDataSet.VehiculesDataTable dataTable = new MyDataSet.VehiculesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VehiculesDataTable GetAllCarteGrises() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            MyDataSet.VehiculesDataTable dataTable = new MyDataSet.VehiculesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VehiculesDataTable GetAllCarteGrisesByFiltre(global::System.Nullable<global::System.DateTime> dateImmat, global::System.Nullable<global::System.DateTime> dateMec, string Immat, string Marque, string Modele, string nomProp, string prenomProp, string cinProp) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((dateImmat.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(dateImmat.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateMec.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateMec.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Immat == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(Immat));
            }
            if ((Marque == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Marque));
            }
            if ((Modele == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(Modele));
            }
            if ((nomProp == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(nomProp));
            }
            if ((prenomProp == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(prenomProp));
            }
            if ((cinProp == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(cinProp));
            }
            MyDataSet.VehiculesDataTable dataTable = new MyDataSet.VehiculesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VehiculesDataTable GetCarteGrises(global::System.Nullable<int> Index, global::System.Nullable<global::System.DateTime> dateImmat, global::System.Nullable<global::System.DateTime> dateMec, string Immat, string Marque, string Modele, string nomProp, string prenomProp, string cinProp) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateImmat.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateImmat.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((dateMec.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(dateMec.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Immat == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(Immat));
            }
            if ((Marque == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(Marque));
            }
            if ((Modele == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(Modele));
            }
            if ((nomProp == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(nomProp));
            }
            if ((prenomProp == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(prenomProp));
            }
            if ((cinProp == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(cinProp));
            }
            MyDataSet.VehiculesDataTable dataTable = new MyDataSet.VehiculesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VehiculesDataTable GetImmatriculation() {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            MyDataSet.VehiculesDataTable dataTable = new MyDataSet.VehiculesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VehiculesDataTable GetImmatriculationNonAttribue() {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            MyDataSet.VehiculesDataTable dataTable = new MyDataSet.VehiculesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.VehiculesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Vehicules");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTotalCarteGrises() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[6];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalCarteGrisesByFiltre(global::System.Nullable<global::System.DateTime> dateImmat, global::System.Nullable<global::System.DateTime> dateMec, string Immat, string Marque, string Modele, string NomProp, string PrenomProp, string CinProp) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            if ((dateImmat.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(dateImmat.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateMec.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(dateMec.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((Immat == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Immat));
            }
            if ((Marque == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Marque));
            }
            if ((Modele == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Modele));
            }
            if ((NomProp == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(NomProp));
            }
            if ((PrenomProp == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(PrenomProp));
            }
            if ((CinProp == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(CinProp));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertVehicule(global::System.Nullable<global::System.DateTime> DateCreation, global::System.Nullable<int> IdOpCreation, global::System.Nullable<global::System.DateTime> DateModif, global::System.Nullable<int> IdOpModif, string Immat, string Nom, string Prenom, string Cin, global::System.Nullable<global::System.DateTime> DateMec, global::System.Nullable<global::System.DateTime> DateImmat, string Marque, string Modele) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Immat == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Immat));
            }
            if ((Nom == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Prenom));
            }
            if ((Cin == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Cin));
            }
            if ((DateMec.HasValue == true)) {
                command.Parameters[8].Value = ((System.DateTime)(DateMec.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DateImmat.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(DateImmat.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Marque == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Marque));
            }
            if ((Modele == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Modele));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int SupprimerUnVehicule(string Immat) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            if ((Immat == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Immat));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateVehicule(global::System.Nullable<global::System.DateTime> DateCreation, global::System.Nullable<int> IdOpCreation, global::System.Nullable<global::System.DateTime> DateMec, global::System.Nullable<global::System.DateTime> DateModif, global::System.Nullable<int> IdOpModif, string Immat, string Nom, string Prenom, string Cin, global::System.Nullable<global::System.DateTime> DateImmat, string Marque, string Modele, string Original_Immat) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[10];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateMec.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateMec.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[3].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[4].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Immat == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Immat));
            }
            if ((Nom == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Prenom));
            }
            if ((Cin == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Cin));
            }
            if ((DateImmat.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(DateImmat.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Marque == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Marque));
            }
            if ((Modele == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Modele));
            }
            if ((Original_Immat == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Original_Immat));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AgrementTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AgrementTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Agrement";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("IdOpCreation", "IdOpCreation");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("IdOpModif", "IdOpModif");
            tableMapping.ColumnMappings.Add("DateDebut", "DateDebut");
            tableMapping.ColumnMappings.Add("DateFin", "DateFin");
            tableMapping.ColumnMappings.Add("NumAgrement", "NumAgrement");
            tableMapping.ColumnMappings.Add("Valide", "Valide");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("Plaque", "Plaque");
            tableMapping.ColumnMappings.Add("PointAttache", "PointAttache");
            tableMapping.ColumnMappings.Add("NumTaxi", "NumTaxi");
            tableMapping.ColumnMappings.Add("IdVehicule", "IdVehicule");
            tableMapping.ColumnMappings.Add("Commune", "Commune");
            tableMapping.ColumnMappings.Add("TypeTaxi", "TypeTaxi");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[21];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        Agrement.DateDebut, Agrement.DateFin, Agrement.NumAgrement, Agrement.Plaque, Agrement.Valide, Agrement.Nom, Agrement.Prenom, 
                         Communes.NomCommune AS Commune, TypeTaxi.Libelle AS TypeTaxi, Agrement.Id, Agrement.Cin, Agrement.Adresse,Agrement.Telephone,Agrement.IdVehicule, Agrement.NumTaxi
FROM            { oj { oj Agrement LEFT OUTER JOIN
                         TypeTaxi ON Agrement.TypeTaxi = TypeTaxi.Num } LEFT OUTER JOIN
                         Communes ON Agrement.IdCommune = Communes.IdCommune }
where Agrement.TypeTaxi = ?";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE Agrement where NumAgrement=? AND TypeTaxi = ?";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT       Max(CAST(NumTaxi AS int))\r\nFROM            Agrement\r\nWHERE        Ty" +
                "peTaxi = ?";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"SELECT        Agrement.Id, Agrement.DateCreation, Agrement.IdOpCreation, Agrement.IdVehicule, Agrement.NumTaxi, Agrement.Plaque, Agrement.Prenom, Agrement.Nom, 
                         Agrement.Valide, Agrement.NumAgrement, Agrement.DateFin, Agrement.DateDebut, Agrement.IdOpModif, Agrement.DateModif, TypeTaxi.Libelle AS TypeTaxi, 
                          Communes.NomCommune AS PointAttache, Agrement.Cin,Agrement.Adresse, Agrement.Telephone
FROM            dbo.Agrement, dbo.TypeTaxi, dbo.Communes
WHERE        dbo.Agrement.TypeTaxi = dbo.TypeTaxi.Num AND dbo.Agrement.IdCommune = dbo.Communes.IdCommune AND (dbo.Agrement.NumAgrement = ?) And (dbo.Agrement.TypeTaxi = ?)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = @"SELECT        Agrement.Id, Agrement.DateCreation, Agrement.IdOpCreation, Agrement.DateModif, Agrement.IdOpModif, Agrement.DateDebut, Agrement.DateFin, 
                         Agrement.NumAgrement, Agrement.Valide, Agrement.Nom, Agrement.Prenom, Agrement.Plaque, Agrement.PointAttache, Agrement.NumTaxi, Agrement.IdVehicule, 
                         Communes.NomCommune AS Commune, TypeTaxi.Libelle AS TypeTaxi
FROM            Agrement, Communes, TypeTaxi
WHERE        Agrement.IdCommune = Communes.IdCommune AND Agrement.TypeTaxi = TypeTaxi.Num AND DateDebut  >= ?  AND DateFin <= ?";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = @"SELECT        Agrement.DateDebut, Agrement.DateFin, Agrement.NumAgrement, Agrement.Plaque, Agrement.Valide, Agrement.Nom, Agrement.Prenom, 
                         Communes.NomCommune AS Commune, TypeTaxi.Libelle AS TypeTaxi, Agrement.Id, Agrement.IdVehicule, Agrement.NumTaxi
FROM            { oj { oj Agrement LEFT OUTER JOIN
                         TypeTaxi ON Agrement.TypeTaxi = TypeTaxi.Num } LEFT OUTER JOIN
                         Communes ON Agrement.IdCommune = Communes.IdCommune }
";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "Declare @Index int\r\nDeclare @dateDebut DateTime\r\nDeclare @dateFin DateTime\r\nDecla" +
                "re @numAgrement NVarChar(30)\r\nDeclare @immatriculation NVarChar(30)\r\nDeclare @no" +
                "m NVarChar(30)\r\nDeclare @prenom NVarChar(30)\r\nDeclare @ddltypeTaxi int\r\nDeclare " +
                "@rbautoriseValue NVarChar(5)\r\n\r\nset @Index = ?\r\nset @dateDebut = ?\r\nset @dateFin" +
                " = ?\r\nset @numAgrement = ?\r\nset @immatriculation = ?\r\nset @nom = ?\r\nset @prenom " +
                "= ?\r\nset @ddltypeTaxi = ?\r\nset @rbautoriseValue = ?\r\n\r\nselect * from (          " +
                "\r\nSELECT \r\nROW_NUMBER() OVER (ORDER BY Agrement.DateCreation DESC ) AS RowNum,\r\n" +
                "             Agrement.Id , Agrement.DateDebut, Agrement.DateFin, Agrement.NumAgr" +
                "ement,Agrement.Plaque, Agrement.Valide, Agrement.Nom, Agrement.Prenom, Communes." +
                "NomCommune AS Commune, TypeTaxi.Libelle AS TypeTaxi\r\n\r\n                         " +
                "                                      \r\n           FROM    Agrement LEFT OUTER J" +
                "OIN\r\n                      TypeTaxi ON Agrement.TypeTaxi = TypeTaxi.Num LEFT OUT" +
                "ER JOIN\r\n                      Communes ON Agrement.IdCommune = Communes.IdCommu" +
                "ne \r\n          \r\n        \r\nWHERE  1 = CASE  \r\n              WHEN @dateDebut  IS " +
                "NULL THEN 1 \r\n              WHEN Agrement.DateDebut >= @dateDebut  THEN 1 \r\n    " +
                "          ELSE 0 \r\n       END        \r\n  AND  1 = CASE  \r\n              WHEN @da" +
                "teFin  IS NULL THEN 1 \r\n              WHEN Agrement.DateFin <=  @dateFin   THEN " +
                "1 \r\n              ELSE 0 \r\n       END \r\n AND    1 = CASE  \r\n              WHEN @" +
                "numAgrement  IS NULL THEN 1 \r\n              WHEN Agrement.NumAgrement = @numAgre" +
                "ment    THEN 1 \r\n              ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n         " +
                "     WHEN @immatriculation  IS NULL THEN 1 \r\n              WHEN Agrement.Plaque " +
                "LIKE  +@immatriculation+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END\r\n   A" +
                "ND  1 = CASE  \r\n              WHEN @nom  IS NULL THEN 1 \r\n              WHEN Agr" +
                "ement.Nom LIKE  +@nom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END   \r\n   " +
                "AND  1 = CASE  \r\n              WHEN @prenom  IS NULL THEN 1 \r\n              WHEN" +
                " Agrement.Prenom LIKE  +@prenom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       E" +
                "ND \r\n    AND  1 = CASE  \r\n              WHEN @ddltypeTaxi  IS NULL THEN 1 \r\n    " +
                "          WHEN Agrement.TypeTaxi = @ddltypeTaxi    THEN 1 \r\n              ELSE 0" +
                " \r\n       END      \r\n                \r\n  AND  1 = CASE  \r\n              WHEN @rb" +
                "autoriseValue  IS NULL THEN 1 \r\n              WHEN Agrement.Valide =@rbautoriseV" +
                "alue   THEN 1 \r\n              ELSE 0 \r\n       END\r\n\r\n                           " +
                "             \r\n    ) as TableUsers\r\n    \r\n WHERE ( TableUsers.RowNum   BETWEEN  " +
                "(@Index*15)-14  AND (@Index * 15))\r\n";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numAgrement", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "\r\nDeclare @dateDebut DateTime\r\nDeclare @dateFin DateTime\r\nDeclare @numAgrement NV" +
                "arChar(30)\r\nDeclare @immatriculation NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDe" +
                "clare @prenom NVarChar(30)\r\nDeclare @ddltypeTaxi int\r\nDeclare @rbautoriseValue N" +
                "VarChar(5)\r\n\r\nset @dateDebut = ?\r\nset @dateFin = ?\r\nset @numAgrement = ?\r\nset @i" +
                "mmatriculation = ?\r\nset @nom = ?\r\nset @prenom = ?\r\nset @ddltypeTaxi = ?\r\nset @rb" +
                "autoriseValue = ?\r\n\r\n       \r\nSELECT \r\n\r\n             Agrement.Id , Agrement.Dat" +
                "eDebut, Agrement.DateFin, Agrement.NumAgrement,Agrement.Plaque, Agrement.Valide," +
                " Agrement.Nom, Agrement.Prenom, Communes.NomCommune AS Commune, TypeTaxi.Libelle" +
                " AS TypeTaxi\r\n\r\n                                                               \r" +
                "\n           FROM    Agrement LEFT OUTER JOIN\r\n                      TypeTaxi ON " +
                "Agrement.TypeTaxi = TypeTaxi.Num LEFT OUTER JOIN\r\n                      Communes" +
                " ON Agrement.IdCommune = Communes.IdCommune \r\n          \r\n        \r\nWHERE  1 = C" +
                "ASE  \r\n              WHEN @dateDebut  IS NULL THEN 1 \r\n              WHEN Agreme" +
                "nt.DateDebut >= @dateDebut  THEN 1 \r\n              ELSE 0 \r\n       END        \r\n" +
                "  AND  1 = CASE  \r\n              WHEN @dateFin  IS NULL THEN 1 \r\n              W" +
                "HEN Agrement.DateFin <=  @dateFin   THEN 1 \r\n              ELSE 0 \r\n       END \r" +
                "\n AND    1 = CASE  \r\n              WHEN @numAgrement  IS NULL THEN 1 \r\n         " +
                "     WHEN Agrement.NumAgrement =@numAgrement    THEN 1 \r\n              ELSE 0 \r\n" +
                "       END\r\n  AND  1 = CASE  \r\n              WHEN @immatriculation  IS NULL THEN" +
                " 1 \r\n              WHEN Agrement.Plaque LIKE  +@immatriculation+ \'%\'    THEN 1 \r" +
                "\n              ELSE 0 \r\n       END\r\n   AND  1 = CASE  \r\n              WHEN @nom " +
                " IS NULL THEN 1 \r\n              WHEN Agrement.Nom LIKE  +@nom+ \'%\'    THEN 1 \r\n " +
                "             ELSE 0 \r\n       END   \r\n   AND  1 = CASE  \r\n              WHEN @pre" +
                "nom  IS NULL THEN 1 \r\n              WHEN Agrement.Prenom LIKE  +@prenom+ \'%\'    " +
                "THEN 1 \r\n              ELSE 0 \r\n       END \r\n    AND  1 = CASE  \r\n              " +
                "WHEN @ddltypeTaxi  IS NULL THEN 1 \r\n              WHEN Agrement.TypeTaxi = @ddlt" +
                "ypeTaxi    THEN 1 \r\n              ELSE 0 \r\n       END      \r\n                \r\n " +
                " AND  1 = CASE  \r\n              WHEN @rbautoriseValue  IS NULL THEN 1 \r\n        " +
                "      WHEN Agrement.Valide =@rbautoriseValue   THEN 1 \r\n              ELSE 0 \r\n " +
                "      END\r\n\r\n                                        \r\n\r\n \r\n";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numAgrement", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[7].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbAutoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = "SELECT        IdCommune\r\nFROM            Communes\r\nWhere NomCommune=?";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomCommune", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomCommune", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = "SELECT        MAX(Id) AS MaxId\r\nFROM            Agrement";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = @"SELECT        Agrement.Id, Agrement.DateCreation, Agrement.IdOpCreation, Agrement.DateModif, Agrement.IdOpModif, Agrement.DateDebut, Agrement.DateFin, 
                         Agrement.NumAgrement, Agrement.Valide, Agrement.Nom, Agrement.Prenom, Agrement.Plaque, Agrement.PointAttache, Agrement.NumTaxi, 
                         Communes.NomCommune AS Commune, TypeTaxi.Libelle as TypeTaxi, Agrement.IdVehicule
FROM         Agrement inner join Communes on Agrement.IdCommune=Communes.IdCommune inner join TypeTaxi on Agrement.TypeTaxi=TypeTaxi.Num    left join Events on Agrement.NumAgrement=Events.NumAgrement and  Events.Instant BETWEEN ? AND ?
WHERE        (Events.NumAgrement IS NULL)";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant1", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = "select count(*) from Agrement";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = "Declare @dateDebut DateTime\r\nDeclare @dateFin DateTime\r\nDeclare @numAgrement NVar" +
                "Char(30)\r\nDeclare @immatriculation NVarChar(30)\r\nDeclare @nom NVarChar(30)\r\nDecl" +
                "are @prenom NVarChar(30)\r\nDeclare @ddltypeTaxi int\r\nDeclare @rbautoriseValue NVa" +
                "rChar(5)\r\n\r\n\r\nset @dateDebut = ?\r\nset @dateFin = ?\r\nset @numAgrement = ?\r\nset @i" +
                "mmatriculation = ?\r\nset @nom = ?\r\nset @prenom = ?\r\nset @ddltypeTaxi = ?\r\nset @rb" +
                "autoriseValue = ?\r\n\r\n\r\n\r\nSELECT        COUNT(*) AS Total\r\n\r\nFROM           Agrem" +
                "ent \r\n\r\nWHERE  1 = CASE  \r\n              WHEN @dateDebut  IS NULL THEN 1 \r\n     " +
                "         WHEN Agrement.DateDebut >= @dateDebut  THEN 1 \r\n              ELSE 0 \r\n" +
                "       END        \r\n  AND  1 = CASE  \r\n              WHEN @dateFin  IS NULL THEN" +
                " 1 \r\n              WHEN Agrement.DateFin <=  @dateFin   THEN 1 \r\n              E" +
                "LSE 0 \r\n       END \r\n  AND  1 = CASE  \r\n              WHEN @numAgrement  IS NULL" +
                " THEN 1 \r\n              WHEN Agrement.NumAgrement = @numAgrement  THEN 1 \r\n     " +
                "         ELSE 0 \r\n       END\r\n  AND  1 = CASE  \r\n              WHEN @immatricula" +
                "tion  IS NULL THEN 1 \r\n              WHEN Agrement.Plaque LIKE  +@immatriculatio" +
                "n+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END\r\n   AND  1 = CASE  \r\n      " +
                "        WHEN @nom  IS NULL THEN 1 \r\n              WHEN Agrement.Nom LIKE  +@nom+" +
                " \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END   \r\n   AND  1 = CASE  \r\n     " +
                "         WHEN @prenom  IS NULL THEN 1 \r\n              WHEN Agrement.Prenom LIKE " +
                " +@prenom+ \'%\'    THEN 1 \r\n              ELSE 0 \r\n       END \r\n    AND  1 = CASE" +
                "  \r\n              WHEN @ddltypeTaxi  IS NULL THEN 1 \r\n              WHEN Agremen" +
                "t.TypeTaxi  = @ddltypeTaxi     THEN 1 \r\n              ELSE 0 \r\n       END      \r" +
                "\n                \r\n  AND  1 = CASE  \r\n              WHEN @rbautoriseValue  IS NU" +
                "LL THEN 1 \r\n              WHEN Agrement.Valide =@rbautoriseValue   THEN 1 \r\n    " +
                "          ELSE 0 \r\n       END\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numAgrement", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("immatriculation", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[13] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = "SELECT        Num\r\nFROM            TypeTaxi\r\nWHERE        (Libelle = ?)";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[14].Connection = this.Connection;
            this._commandCollection[14].CommandText = @"SELECT        Id, DateCreation, DateModif, IdOpCreation, IdOpModif, DateDebut, DateFin, NumAgrement, Valide, Nom, Prenom, Plaque, PointAttache, NumTaxi, IdCommune, 
                         TypeTaxi, IdVehicule,Cin,Adresse,Telephone
FROM            Agrement
WHERE        (Plaque = ?)";
            this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[14].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[15].Connection = this.Connection;
            this._commandCollection[15].CommandText = "Declare @dateDebutParam DateTime\r\nDeclare @dateFinParam DateTime\r\n\r\nset @dateDebu" +
                "tParam = ?\r\nset @dateFinParam = ?\r\n\r\nselect row_number() OVER (ORDER BY NumTaxi " +
                "ASC) Id,NumTaxi, libelle as TypeTaxi,Nom_Prem,Prenom_Prem,DateDebut,Nom_Dern,Pre" +
                "nom_Dern,DateFin from \r\n\t(select tableDebut.NumTaxi, tableDebut.TypeTaxi,Nom_Pre" +
                "m,Prenom_Prem,DateDebut,Nom_Dern,Prenom_Dern,DateFin from (SELECT     Agrement.N" +
                "umTaxi, Agrement.TypeTaxi, Users.Nom Nom_Prem, Users.Prenom Prenom_Prem, taxiTem" +
                "p.DateDebut\r\nFROM         Events INNER JOIN\r\n                      Users ON Even" +
                "ts.Reference = Users.Matricule INNER JOIN\r\n                      (select u.NumTa" +
                "xi, u.TypeTaxi,\r\n\t(\tselect Min(Instant) \r\n\t) as DateDebut\r\n\t,\r\n\t(\tselect Max(Ins" +
                "tant)\r\n\twhere  Min(Instant)!=Max(Instant)\r\n\t\t\r\n\t) as DateFin\r\nfrom Events as e r" +
                "ight join Agrement as u on e.NumTaxi=u.NumTaxi and e.TypeTaxi =u.TypeTaxi \r\nand " +
                "e.Instant between @dateDebutParam and @dateFinParam\r\ngroup by u.NumTaxi, u.TypeT" +
                "axi) as taxiTemp ON Events.NumTaxi = taxiTemp.numTaxi AND Events.TypeTaxi = taxi" +
                "Temp.typeTaxi AND Events.Instant = taxiTemp.DateDebut RIGHT OUTER JOIN\r\n        " +
                "              Agrement ON Events.TypeTaxi = Agrement.TypeTaxi AND Events.NumTaxi" +
                " = Agrement.NumTaxi\r\n                      and taxiTemp.DateDebut between @dateD" +
                "ebutParam and @dateFinParam \r\n\t\t\t\t\t  ) as tableDebut INNER JOIN\t\t\t\t  \r\n\t\t\t\t\t  \r\n" +
                "(SELECT      Agrement.NumTaxi, Agrement.TypeTaxi,Users.Nom Nom_Dern, Users.Preno" +
                "m Prenom_Dern, taxiTemp.DateFin\r\nFROM         Events INNER JOIN\r\n               " +
                "       Users ON Events.Reference = Users.Matricule INNER JOIN\r\n                 " +
                "     (select u.NumTaxi, u.TypeTaxi,\r\n\t(\tselect Min(Instant) \r\n\t) as DateDebut\r\n\t" +
                ",\r\n\t(\tselect Max(Instant)\r\n\twhere  Min(Instant)!=Max(Instant)\r\n\t\t\r\n\t) as DateFin" +
                "\r\nfrom Events as e right join Agrement as u on e.NumTaxi=u.NumTaxi and e.TypeTax" +
                "i =u.TypeTaxi \r\nand e.Instant between @dateDebutParam and @dateFinParam \r\ngroup " +
                "by u.NumTaxi, u.TypeTaxi) as taxiTemp ON Events.NumTaxi = taxiTemp.numTaxi AND E" +
                "vents.TypeTaxi = taxiTemp.typeTaxi AND Events.Instant = taxiTemp.DateFin RIGHT O" +
                "UTER JOIN\r\n                      Agrement ON Events.TypeTaxi = Agrement.TypeTaxi" +
                " AND Events.NumTaxi = Agrement.NumTaxi\r\n                      and taxiTemp.DateF" +
                "in between @dateDebutParam and @dateFinParam \r\n                      ) as tableF" +
                "in ON tableDebut.NumTaxi = tableFin.NumTaxi and tableDebut.TypeTaxi = tableFin.T" +
                "ypeTaxi) PerIdent, TypeTaxi\r\nwhere PerIdent.TypeTaxi = TypeTaxi.Num\r\n           " +
                "           \r\n                      order by NumTaxi, TypeTaxi";
            this._commandCollection[15].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant1", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant2", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[16].Connection = this.Connection;
            this._commandCollection[16].CommandText = @"INSERT INTO Agrement
                         (DateCreation, IdOpCreation, DateModif, IdOpModif, DateDebut, DateFin, NumAgrement, Valide, Nom, Prenom, Plaque, PointAttache, NumTaxi, IdCommune, 
                         TypeTaxi,Cin,Adresse,Telephone, IdVehicule)
VALUES        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,?,?,?, ?)";
            this._commandCollection[16].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("PointAttache", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PointAttache", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumTaxi", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdCommune", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdCommune", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Cin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Telephone", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Telephone", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdVehicule", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdVehicule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[17].Connection = this.Connection;
            this._commandCollection[17].CommandText = "select COUNT(*) \r\nFROM            Agrement, TypeTaxi\r\nWHERE        Agrement.TypeT" +
                "axi = TypeTaxi.Num AND (Agrement.NumTaxi = ?) AND (TypeTaxi.Libelle = ?)";
            this._commandCollection[17].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumTaxi", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Libelle", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Libelle", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[18].Connection = this.Connection;
            this._commandCollection[18].CommandText = "UPDATE Agrement Set Valide=?\r\nWhere NumAgrement=? AND TypeTaxi =?";
            this._commandCollection[18].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("numAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[19] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[19].Connection = this.Connection;
            this._commandCollection[19].CommandText = @"UPDATE       Agrement
SET                DateCreation = ?, IdOpCreation = ?, DateModif = ?, IdOpModif = ?, DateDebut = ?, DateFin = ?, NumAgrement = ?, Valide = ?, Nom = ?, Prenom = ?, Plaque = ?, 
                         PointAttache = ?, NumTaxi = ?, IdCommune = ?, TypeTaxi = ?, IdVehicule = ?, Cin= ?, Adresse= ?, Telephone= ?
where  NumAgrement = ? and TypeTaxi=?";
            this._commandCollection[19].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("PointAttache", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PointAttache", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumTaxi", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdCommune", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdCommune", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdVehicule", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdVehicule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Cin", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Cin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Telephone", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Telephone", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[20] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[20].Connection = this.Connection;
            this._commandCollection[20].CommandText = "UPDATE Agrement \r\nSET Plaque=?\r\nwhere Plaque=?";
            this._commandCollection[20].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Plaque", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Plaque", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.AgrementDataTable GetAgrementsByType(int TypeTaxi) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            this.Adapter.SelectCommand.Parameters[0].Value = ((int)(TypeTaxi));
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetAgrementByNumAgrementANDtype(string NumAgrement, global::System.Nullable<int> TypeTaxi) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((NumAgrement == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NumAgrement));
            }
            if ((TypeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(TypeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetAgrementPeriode(global::System.Nullable<global::System.DateTime> DateDebut, global::System.Nullable<global::System.DateTime> DateFin) {
            this.Adapter.SelectCommand = this.CommandCollection[4];
            if ((DateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetAgrements() {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetAllAgrements(global::System.Nullable<int> index, global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string numAgrement, string immatriculation, string nom, string prenom, global::System.Nullable<int> typeTaxi, string rbautoriseValue) {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            if ((index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((numAgrement == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(numAgrement));
            }
            if ((immatriculation == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(immatriculation));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = ((string)(prenom));
            }
            if ((typeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[7].Value = ((int)(typeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((rbautoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[8].Value = ((string)(rbautoriseValue));
            }
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetAllAgrementsByFiltre(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string numAgrement, string immatriculation, string nom, string prenom, global::System.Nullable<int> typeTaxi, string rbAutoriseValue) {
            this.Adapter.SelectCommand = this.CommandCollection[7];
            if ((dateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numAgrement == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(numAgrement));
            }
            if ((immatriculation == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(immatriculation));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(prenom));
            }
            if ((typeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[6].Value = ((int)(typeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((rbAutoriseValue == null)) {
                this.Adapter.SelectCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[7].Value = ((string)(rbAutoriseValue));
            }
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetTaxisAbsents(System.DateTime Instant, System.DateTime Instant1) {
            this.Adapter.SelectCommand = this.CommandCollection[10];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Instant));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Instant1));
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable GetUnAgrementByPlaque(string Plaque) {
            this.Adapter.SelectCommand = this.CommandCollection[14];
            if ((Plaque == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Plaque));
            }
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AgrementDataTable Identification_Periode_Taxi(System.DateTime Instant1, System.DateTime Instant2) {
            this.Adapter.SelectCommand = this.CommandCollection[15];
            this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(Instant1));
            this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(Instant2));
            MyDataSet.AgrementDataTable dataTable = new MyDataSet.AgrementDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUnAgrement(string NumAgrement, global::System.Nullable<int> TypeTaxi) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((NumAgrement == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumAgrement));
            }
            if ((TypeTaxi.HasValue == true)) {
                command.Parameters[1].Value = ((int)(TypeTaxi.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object DernierNumTaxi(global::System.Nullable<int> TypeTaxi) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            if ((TypeTaxi.HasValue == true)) {
                command.Parameters[0].Value = ((int)(TypeTaxi.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetIdCommune(string NomCommune) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((NomCommune == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NomCommune));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetMaxIdAgrement() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalAgrements() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[11];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalAgrementsByFiltre(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, string numAgrement, string immatriculation, string nom, string prenom, global::System.Nullable<int> typeTaxi, string rbautoriseValue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[12];
            if ((dateDebut.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((numAgrement == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(numAgrement));
            }
            if ((immatriculation == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(immatriculation));
            }
            if ((nom == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(prenom));
            }
            if ((typeTaxi.HasValue == true)) {
                command.Parameters[6].Value = ((int)(typeTaxi.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((rbautoriseValue == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(rbautoriseValue));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTypeTaxi(string Libelle) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[13];
            if ((Libelle == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertAgrement(
                    global::System.Nullable<global::System.DateTime> DateCreation, 
                    global::System.Nullable<int> IdOpCreation, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    global::System.Nullable<int> IdOpModif, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    string NumAgrement, 
                    global::System.Nullable<bool> Valide, 
                    string Nom, 
                    string Prenom, 
                    string Plaque, 
                    string PointAttache, 
                    string NumTaxi, 
                    global::System.Nullable<int> IdCommune, 
                    global::System.Nullable<int> TypeTaxi, 
                    string Cin, 
                    string Adresse, 
                    string Telephone, 
                    global::System.Nullable<int> IdVehicule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[16];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NumAgrement == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(NumAgrement));
            }
            if ((Valide.HasValue == true)) {
                command.Parameters[7].Value = ((bool)(Valide.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Nom == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Prenom));
            }
            if ((Plaque == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Plaque));
            }
            if ((PointAttache == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(PointAttache));
            }
            if ((NumTaxi == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NumTaxi));
            }
            if ((IdCommune.HasValue == true)) {
                command.Parameters[13].Value = ((int)(IdCommune.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TypeTaxi.HasValue == true)) {
                command.Parameters[14].Value = ((int)(TypeTaxi.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Cin == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Cin));
            }
            if ((Adresse == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Adresse));
            }
            if ((Telephone == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Telephone));
            }
            if ((IdVehicule.HasValue == true)) {
                command.Parameters[18].Value = ((int)(IdVehicule.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object NumTaxiExiste(string NumTaxi, string Libelle) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[17];
            if ((NumTaxi == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(NumTaxi));
            }
            if ((Libelle == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Libelle));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int SetValide(global::System.Nullable<bool> Valide, string numAgrement, global::System.Nullable<int> typeTaxi) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[18];
            if ((Valide.HasValue == true)) {
                command.Parameters[0].Value = ((bool)(Valide.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((numAgrement == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(numAgrement));
            }
            if ((typeTaxi.HasValue == true)) {
                command.Parameters[2].Value = ((int)(typeTaxi.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateAgrement(
                    global::System.Nullable<global::System.DateTime> DateCreation, 
                    global::System.Nullable<int> IdOpCreation, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    global::System.Nullable<int> IdOpModif, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    string NumAgrement, 
                    global::System.Nullable<bool> Valide, 
                    string Nom, 
                    string Prenom, 
                    string Plaque, 
                    string PointAttache, 
                    string NumTaxi, 
                    global::System.Nullable<int> IdCommune, 
                    global::System.Nullable<int> TypeTaxi, 
                    global::System.Nullable<int> IdVehicule, 
                    string Cin, 
                    string Adresse, 
                    string Telephone, 
                    string Original_NumAgrement, 
                    global::System.Nullable<int> Original_TypeTaxi) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[19];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((NumAgrement == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(NumAgrement));
            }
            if ((Valide.HasValue == true)) {
                command.Parameters[7].Value = ((bool)(Valide.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Nom == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(Prenom));
            }
            if ((Plaque == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Plaque));
            }
            if ((PointAttache == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(PointAttache));
            }
            if ((NumTaxi == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NumTaxi));
            }
            if ((IdCommune.HasValue == true)) {
                command.Parameters[13].Value = ((int)(IdCommune.Value));
            }
            else {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((TypeTaxi.HasValue == true)) {
                command.Parameters[14].Value = ((int)(TypeTaxi.Value));
            }
            else {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((IdVehicule.HasValue == true)) {
                command.Parameters[15].Value = ((int)(IdVehicule.Value));
            }
            else {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Cin == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Cin));
            }
            if ((Adresse == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Adresse));
            }
            if ((Telephone == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Telephone));
            }
            if ((Original_NumAgrement == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(Original_NumAgrement));
            }
            if ((Original_TypeTaxi.HasValue == true)) {
                command.Parameters[20].Value = ((int)(Original_TypeTaxi.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateAgrementByImmat(string Plaque, string Original_Plaque) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[20];
            if ((Plaque == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Plaque));
            }
            if ((Original_Plaque == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Original_Plaque));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CommunesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CommunesTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Communes";
            tableMapping.ColumnMappings.Add("IdCommune", "IdCommune");
            tableMapping.ColumnMappings.Add("NomCommune", "NomCommune");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [Communes] ([NomCommune]) VALUES (?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomCommune", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomCommune", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT        IdCommune, NomCommune\r\nFROM            Communes";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MyDataSet.CommunesDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.CommunesDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.CommunesDataTable dataTable = new MyDataSet.CommunesDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.CommunesDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Communes");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string NomCommune) {
            if ((NomCommune == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(NomCommune));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class MotifsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public MotifsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Motifs";
            tableMapping.ColumnMappings.Add("IdMotif", "IdMotif");
            tableMapping.ColumnMappings.Add("AbrevMotif", "AbrevMotif");
            tableMapping.ColumnMappings.Add("LibelleMotif", "LibelleMotif");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Motifs] ([AbrevMotif], [LibelleMotif]) VALUES (@AbrevMotif, @L" +
                "ibelleMotif)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("@AbrevMotif", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "AbrevMotif", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("@LibelleMotif", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleMotif", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[2];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT IdMotif, AbrevMotif, LibelleMotif FROM dbo.Motifs";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "SELECT        IdMotif\r\nFROM            Motifs\r\nWHERE        (LibelleMotif = ?)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LibelleMotif", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleMotif", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.MotifsDataTable GetMotifs() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.MotifsDataTable dataTable = new MyDataSet.MotifsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.MotifsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "Motifs");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetIdMotif(string LibelleMotif) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((LibelleMotif == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(LibelleMotif));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class VisiteursTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public VisiteursTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Visiteurs";
            tableMapping.ColumnMappings.Add("IdUser", "IdUser");
            tableMapping.ColumnMappings.Add("Matricule", "Matricule");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("NumService", "NumService");
            tableMapping.ColumnMappings.Add("Tel", "Tel");
            tableMapping.ColumnMappings.Add("Fax", "Fax");
            tableMapping.ColumnMappings.Add("FlagAutorise", "FlagAutorise");
            tableMapping.ColumnMappings.Add("DateDebut", "DateDebut");
            tableMapping.ColumnMappings.Add("DateFin", "DateFin");
            tableMapping.ColumnMappings.Add("NumDroitAcces", "NumDroitAcces");
            tableMapping.ColumnMappings.Add("NumBadge", "NumBadge");
            tableMapping.ColumnMappings.Add("NbEmpreintes", "NbEmpreintes");
            tableMapping.ColumnMappings.Add("Adresse1", "Adresse1");
            tableMapping.ColumnMappings.Add("Adresse2", "Adresse2");
            tableMapping.ColumnMappings.Add("CodePostal", "CodePostal");
            tableMapping.ColumnMappings.Add("Ville", "Ville");
            tableMapping.ColumnMappings.Add("Telephone", "Telephone");
            tableMapping.ColumnMappings.Add("Mobile", "Mobile");
            tableMapping.ColumnMappings.Add("EMail", "EMail");
            tableMapping.ColumnMappings.Add("DateCreat", "DateCreat");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("DateNaissance", "DateNaissance");
            tableMapping.ColumnMappings.Add("HeureMois", "HeureMois");
            tableMapping.ColumnMappings.Add("TauxNormal", "TauxNormal");
            tableMapping.ColumnMappings.Add("TauxSup1", "TauxSup1");
            tableMapping.ColumnMappings.Add("TauxSup2", "TauxSup2");
            tableMapping.ColumnMappings.Add("Fonction", "Fonction");
            tableMapping.ColumnMappings.Add("TauxSup3", "TauxSup3");
            tableMapping.ColumnMappings.Add("Sexe", "Sexe");
            tableMapping.ColumnMappings.Add("Civilite", "Civilite");
            tableMapping.ColumnMappings.Add("NumCI", "NumCI");
            tableMapping.ColumnMappings.Add("NumSS", "NumSS");
            tableMapping.ColumnMappings.Add("NumHoraire", "NumHoraire");
            tableMapping.ColumnMappings.Add("CodePin", "CodePin");
            tableMapping.ColumnMappings.Add("CheckEmpreinte", "CheckEmpreinte");
            tableMapping.ColumnMappings.Add("CheckBadge", "CheckBadge");
            tableMapping.ColumnMappings.Add("CheckPin", "CheckPin");
            tableMapping.ColumnMappings.Add("CheckAutoDeclar", "CheckAutoDeclar");
            tableMapping.ColumnMappings.Add("TauxSup0", "TauxSup0");
            tableMapping.ColumnMappings.Add("TypeTemps", "TypeTemps");
            tableMapping.ColumnMappings.Add("Modified", "Modified");
            tableMapping.ColumnMappings.Add("BadgeEncoded", "BadgeEncoded");
            tableMapping.ColumnMappings.Add("NumContrat", "NumContrat");
            tableMapping.ColumnMappings.Add("TypeUser", "TypeUser");
            tableMapping.ColumnMappings.Add("IdUser1", "IdUser1");
            tableMapping.ColumnMappings.Add("IdUser2", "IdUser2");
            tableMapping.ColumnMappings.Add("IdUser3", "IdUser3");
            tableMapping.ColumnMappings.Add("UpdateLecNow", "UpdateLecNow");
            tableMapping.ColumnMappings.Add("JourRepos1", "JourRepos1");
            tableMapping.ColumnMappings.Add("JourRepos2", "JourRepos2");
            tableMapping.ColumnMappings.Add("Motif", "Motif");
            tableMapping.ColumnMappings.Add("IdMotif", "IdMotif");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[37];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)

SET @Index = ?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = "DELETE FROM Visiteurs\r\nWHERE        (Matricule = ?)";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "SELECT        Visiteurs.*\r\nFROM            Visiteurs";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = "SELECT        IdUser, Matricule\r\nFROM            Visiteurs\r\nWHERE        (Matricu" +
                "le = ?)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "SELECT        MAX(IdUser)  AS MaxId\r\nFROM            Visiteurs";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[5].Connection = this.Connection;
            this._commandCollection[5].CommandText = "SELECT        Nom, Matricule\r\nFROM            Visiteurs\r\nWHERE        (Matricule " +
                "= ?)";
            this._commandCollection[5].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[5].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[6] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[6].Connection = this.Connection;
            this._commandCollection[6].CommandText = "SELECT        IdUser, Nom, Prenom, Matricule\r\nFROM            Visiteurs\r\nORDER BY" +
                " Nom, Prenom";
            this._commandCollection[6].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[7] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[7].Connection = this.Connection;
            this._commandCollection[7].CommandText = "SELECT COUNT(*)  as Total FROM Visiteurs\r\n";
            this._commandCollection[7].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[8].Connection = this.Connection;
            this._commandCollection[8].CommandText = @"Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)

SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?

select COUNT(*) AS Total  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal";
            this._commandCollection[8].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[8].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[9].Connection = this.Connection;
            this._commandCollection[9].CommandText = @"Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)

SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?

select COUNT(*) AS Total  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

where tableTotal.BioData is not null";
            this._commandCollection[9].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[9].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[10].Connection = this.Connection;
            this._commandCollection[10].CommandText = @"Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)

SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?

select COUNT(*) AS Total  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

where tableTotal.BioData is null";
            this._commandCollection[10].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[10].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[11] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[11].Connection = this.Connection;
            this._commandCollection[11].CommandText = @"SELECT        IdUser, Matricule, Nom, Prenom, NumService, Tel, Fax, FlagAutorise, DateDebut, DateFin, NumDroitAcces, NumBadge, NbEmpreintes, Adresse1, Adresse2, 
                         CodePostal, Ville, Telephone, Mobile, EMail, DateCreat, DateModif, DateNaissance, HeureMois, TauxNormal, TauxSup1, TauxSup2, Fonction, TauxSup3, Sexe, 
                         Civilite, NumCI, NumSS, NumHoraire, CodePin, CheckEmpreinte, CheckBadge, CheckPin, CheckAutoDeclar, TauxSup0, TypeTemps, Modified, BadgeEncoded, 
                         NumContrat, TypeUser, IdUser1, IdUser2, IdUser3, UpdateLecNow, JourRepos1, JourRepos2, Motif, IdMotif
FROM            Visiteurs
WHERE        (Matricule =?)";
            this._commandCollection[11].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[11].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[12].Connection = this.Connection;
            this._commandCollection[12].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END
AND ( UsersBioData.BioData is not null)        


) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[12].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[12].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[13] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[13].Connection = this.Connection;
            this._commandCollection[13].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN Visiteurs.DateDebut
         
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.DateDebut
                    
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is not null) 

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[13].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[13].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[14].Connection = this.Connection;
            this._commandCollection[14].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.DateFin
    
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.DateFin
 
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is not null) 

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[14].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[14].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[14].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[15].Connection = this.Connection;
            this._commandCollection[15].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.Matricule 
         
    
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN Visiteurs.Matricule 
 
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM         Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is not null)        

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[15].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[15].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[16].Connection = this.Connection;
            this._commandCollection[16].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.Nom 
           
    END ASC
    , CASE WHEN @sortOrder = 'desc'  THEN Visiteurs.Nom 

    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is not null) 

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[16].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[16].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[17].Connection = this.Connection;
            this._commandCollection[17].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?


select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN Visiteurs.Prenom 
         
      
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.Prenom 
                 
       
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END
AND ( UsersBioData.BioData is not null) 


) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[17].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[17].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[18].Connection = this.Connection;
            this._commandCollection[18].CommandText = @"
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)



SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?


select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser ASC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END
AND ( UsersBioData.BioData is not null)        


) as tableTotal

";
            this._commandCollection[18].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[18].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[19].Connection = this.Connection;
            this._commandCollection[19].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END
AND ( UsersBioData.BioData is null)        


) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[19].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[19].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[20].Connection = this.Connection;
            this._commandCollection[20].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.DateDebut
         
       
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.DateDebut
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is null) 

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[20].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[20].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[21].Connection = this.Connection;
            this._commandCollection[21].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.DateFin
         
       
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN Visiteurs.DateFin

    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is null) 

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[21].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[21].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[22].Connection = this.Connection;
            this._commandCollection[22].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN Visiteurs.Matricule 
 
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.Matricule 
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is null)        

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[22].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[22].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[23] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[23].Connection = this.Connection;
            this._commandCollection[23].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.Nom 
         
        
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN Visiteurs.Nom 

    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END

AND ( UsersBioData.BioData is null) 

) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[23].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[23].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[23].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[23].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[23].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[23].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[24].Connection = this.Connection;
            this._commandCollection[24].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN Visiteurs.Prenom 
         
       
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN Visiteurs.Prenom 
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END
AND ( UsersBioData.BioData is null) 


) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[24].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[24].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[25] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[25].Connection = this.Connection;
            this._commandCollection[25].CommandText = @"
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)



SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?


select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser ASC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM         Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END
AND ( UsersBioData.BioData is null)        


) as tableTotal

";
            this._commandCollection[25].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[25].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[25].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[25].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[26].Connection = this.Connection;
            this._commandCollection[26].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN Visiteurs.DateDebut
         
      
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.DateDebut
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM      Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[26].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[26].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[27] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[27].Connection = this.Connection;
            this._commandCollection[27].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN Visiteurs.DateFin
         
        
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.DateFin
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[27].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[27].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[27].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[27].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[27].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[27].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[28] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[28].Connection = this.Connection;
            this._commandCollection[28].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.Matricule 
         
        
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN  Visiteurs.Matricule 
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM         Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[28].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[28].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[28].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[28].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[28].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[28].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[29] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[29].Connection = this.Connection;
            this._commandCollection[29].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?


select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.Nom 
         
        
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN Visiteurs.Nom 
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM        Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[29].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[29].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[29].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[29].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[29].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[29].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[30] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[30].Connection = this.Connection;
            this._commandCollection[30].CommandText = @"Declare @Index int
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)
Declare  @sortOrder   NVarchar(30)

Set @Index =?
SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?
SET @sortOrder  = ?

select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  CASE WHEN @sortOrder = 'asc' THEN  Visiteurs.Prenom 
         
        
       
    END ASC
    , CASE WHEN @sortOrder = 'desc' THEN Visiteurs.Prenom 
                 
        
    END DESC) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM       Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

WHERE ( tableTotal.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[30].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[30].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[30].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[30].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[30].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[30].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("SortOrder", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[31] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[31].Connection = this.Connection;
            this._commandCollection[31].CommandText = @"
Declare  @matricule  NVarchar(30)
Declare  @nom NVarchar(30)
Declare  @rbautoriseValue NVarchar(30)



SET  @matricule = ?
SET  @nom = ?
SET  @rbautoriseValue = ?



select  *  from (

SELECT        ROW_NUMBER() OVER (ORDER BY  Visiteurs.IdUser ASC ) AS RowNum, UsersBioData.BioData, Visiteurs.*
FROM         Visiteurs  LEFT OUTER JOIN
                      UsersBioData ON Visiteurs.Matricule = UsersBioData.Matricule
WHERE  1 = CASE  
              WHEN @matricule  IS NULL THEN 1 
              WHEN Visiteurs.Matricule  LIKE  +@matricule+ '%'    THEN 1 
              ELSE 0 
       END        
  AND  1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Visiteurs.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  
  AND  1 = CASE  
              WHEN @rbautoriseValue  IS NULL THEN 1 
              WHEN Visiteurs.FlagAutorise =@rbautoriseValue   THEN 1 
              ELSE 0 
       END



) as tableTotal

";
            this._commandCollection[31].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[31].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("matricule", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[31].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[31].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("rbautoriseValue ", global::System.Data.Odbc.OdbcType.NVarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[32].Connection = this.Connection;
            this._commandCollection[32].CommandText = @"INSERT INTO Visiteurs
                         (IdUser, Matricule, Nom, Prenom, NumService, Tel, Fax, FlagAutorise, DateDebut, DateFin, NumDroitAcces, NumBadge, NbEmpreintes, Adresse1, Adresse2, 
                         CodePostal, Ville, Telephone, Mobile, EMail, DateCreat, DateModif, DateNaissance, HeureMois, TauxNormal, TauxSup1, TauxSup2, Fonction, TauxSup3, Sexe, 
                         Civilite, NumCI, NumSS, NumHoraire, CodePin, CheckEmpreinte, CheckBadge, CheckPin, CheckAutoDeclar, TauxSup0, TypeTemps, Modified, BadgeEncoded, 
                         NumContrat, TypeUser, IdUser1, IdUser2, IdUser3, UpdateLecNow, JourRepos1, JourRepos2, Motif, IdMotif)
VALUES        
(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            this._commandCollection[32].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumService", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Tel", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tel", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fax", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fax", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumDroitAcces", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumDroitAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbEmpreintes", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbEmpreintes", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse1", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse2", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePostal", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePostal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Ville", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ville", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Telephone", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Telephone", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mobile", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mobile", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("EMail", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMail", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateNaissance", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateNaissance", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("HeureMois", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeureMois", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxNormal", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxNormal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fonction", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fonction", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Sexe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sexe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Civilite", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Civilite", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCI", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCI", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumSS", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumSS", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumHoraire", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumHoraire", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePin", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckEmpreinte", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBadge", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPin", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckAutoDeclar", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckAutoDeclar", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup0", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup0", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTemps", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTemps", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modified", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modified", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("BadgeEncoded", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BadgeEncoded", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumContrat", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumContrat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("UpdateLecNow", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UpdateLecNow", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Motif", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Motif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[32].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdMotif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdMotif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[33] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[33].Connection = this.Connection;
            this._commandCollection[33].CommandText = "Select count (*) from Visiteurs where Matricule=?";
            this._commandCollection[33].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[33].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[34] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[34].Connection = this.Connection;
            this._commandCollection[34].CommandText = "UPDATE Visiteurs Set FlagAutorise = ?, Modified=1\r\nWhere Matricule = ?";
            this._commandCollection[34].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[34].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[34].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[35] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[35].Connection = this.Connection;
            this._commandCollection[35].CommandText = "UPDATE       Visiteurs\r\nSET                UpdateLecNow = 1\r\nwhere  Matricule = ?" +
                "";
            this._commandCollection[35].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[35].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
            this._commandCollection[36] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[36].Connection = this.Connection;
            this._commandCollection[36].CommandText = @"UPDATE       Visiteurs
SET                Nom = ?, Prenom = ?, NumService = ?, Tel = ?,  Fax = ?,  FlagAutorise = ?,  DateDebut = ?,  
                         DateFin = ?,  NumDroitAcces = ?,  NumBadge = ?,  NbEmpreintes = ?,  Adresse1 = ?,  Adresse2 = ?,  
                         CodePostal = ?,  Ville = ?,  Telephone = ?,  Mobile = ?,  EMail = ?,  DateCreat = ?,  DateModif = ?,  
                         DateNaissance = ?,  HeureMois = ?,  TauxNormal = ?,  TauxSup1 = ?,  TauxSup2 = ?,  Fonction = ?,  
                         TauxSup3 = ?,  Sexe = ?,  Civilite = ?,  NumCI = ?,  NumSS = ?,  NumHoraire = ?,  CodePin = ?,  
                         CheckEmpreinte = ?,  CheckBadge = ?,  CheckPin = ?,  CheckAutoDeclar = ?,  TauxSup0 = ?,        TypeTemps = ?, Modified = ?,  BadgeEncoded = ?,  NumContrat = ?,  TypeUser = ?,  IdUser1 = ?,  IdUser2 = ?,  
                         IdUser3 = ?,  UpdateLecNow = ?,  JourRepos1 = ?,  JourRepos2 = ?,  Motif = ?,  IdMotif = ?
WHERE        (Matricule = ?)";
            this._commandCollection[36].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumService", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Tel", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Tel", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fax", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fax", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("FlagAutorise", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "FlagAutorise", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumDroitAcces", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumDroitAcces", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumBadge", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NbEmpreintes", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NbEmpreintes", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse1", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Adresse2", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Adresse2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePostal", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePostal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Ville", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Ville", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Telephone", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Telephone", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Mobile", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Mobile", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("EMail", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "EMail", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreat", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateNaissance", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateNaissance", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("HeureMois", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "HeureMois", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxNormal", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxNormal", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Fonction", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Fonction", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Sexe", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Sexe", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Civilite", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Civilite", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCI", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCI", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumSS", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumSS", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumHoraire", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumHoraire", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodePin", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodePin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckEmpreinte", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckEmpreinte", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckBadge", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckBadge", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckPin", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckPin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CheckAutoDeclar", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CheckAutoDeclar", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TauxSup0", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TauxSup0", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTemps", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTemps", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Modified", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Modified", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("BadgeEncoded", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "BadgeEncoded", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumContrat", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumContrat", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeUser", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdUser3", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdUser3", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("UpdateLecNow", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "UpdateLecNow", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos1", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("JourRepos2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "JourRepos2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Motif", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Motif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdMotif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdMotif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[36].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Matricule", global::System.Data.Odbc.OdbcType.NVarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Matricule", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteurs(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetAllVisiteurs() {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetIdUser(string Matricule) {
            this.Adapter.SelectCommand = this.CommandCollection[3];
            if ((Matricule == null)) {
                throw new global::System.ArgumentNullException("Matricule");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Matricule));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetNomByMatricule(string Matricule) {
            this.Adapter.SelectCommand = this.CommandCollection[5];
            if ((Matricule == null)) {
                throw new global::System.ArgumentNullException("Matricule");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Matricule));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetNomsComplets() {
            this.Adapter.SelectCommand = this.CommandCollection[6];
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteurByMatricule(string Matricule) {
            this.Adapter.SelectCommand = this.CommandCollection[11];
            if ((Matricule == null)) {
                throw new global::System.ArgumentNullException("Matricule");
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(Matricule));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnrole(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_) {
            this.Adapter.SelectCommand = this.CommandCollection[12];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnroleOrderByDateDebut(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[13];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnroleOrderByDateFin(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[14];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnroleOrderByMatricule(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[15];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnroleOrderByNom(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[16];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnroleOrderByPrenom(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[17];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursEnroleToExportASC(string matricule, string nom, string rbautoriseValue_) {
            this.Adapter.SelectCommand = this.CommandCollection[18];
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(rbautoriseValue_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnrole(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_) {
            this.Adapter.SelectCommand = this.CommandCollection[19];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnroleOrderByDateDebut(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[20];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnroleOrderByDateFin(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[21];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnroleOrderByMatricule(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[22];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnroleOrderByNom(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[23];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnroleOrderByPrenom(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[24];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursNonEnroleToExportASC(string matricule, string nom, string rbautoriseValue_) {
            this.Adapter.SelectCommand = this.CommandCollection[25];
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(rbautoriseValue_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursOrderByDateDebut(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[26];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursOrderByDateFin(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[27];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursOrderByMatricule(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder_) {
            this.Adapter.SelectCommand = this.CommandCollection[28];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder_ == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursOrderByNom(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[29];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursOrderByPrenom(global::System.Nullable<int> Index, string matricule, string nom, string rbautoriseValue_, string SortOrder) {
            this.Adapter.SelectCommand = this.CommandCollection[30];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(rbautoriseValue_));
            }
            if ((SortOrder == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(SortOrder));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.VisiteursDataTable GetVisiteursToExportASC(string matricule, string nom, string rbautoriseValue_) {
            this.Adapter.SelectCommand = this.CommandCollection[31];
            if ((matricule == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = ((string)(nom));
            }
            if ((rbautoriseValue_ == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(rbautoriseValue_));
            }
            MyDataSet.VisiteursDataTable dataTable = new MyDataSet.VisiteursDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, false)]
        public virtual int DeleteUnVisiteur(string Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[1];
            if ((Matricule == null)) {
                throw new global::System.ArgumentNullException("Matricule");
            }
            else {
                command.Parameters[0].Value = ((string)(Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetMaxIdUser() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[4];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalVisiteurs() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[7];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalVisiteursByFiltre(string matricule, string nom, string rbautoriseValue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[8];
            if ((matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(nom));
            }
            if ((rbautoriseValue == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(rbautoriseValue));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalVisiteursEnroleByFiltre(string matricule, string nom, string rbautoriseValue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[9];
            if ((matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(nom));
            }
            if ((rbautoriseValue == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(rbautoriseValue));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalVisiteursNonEnroleByFiltre(string matricule, string nom, string rbautoriseValue) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[10];
            if ((matricule == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(matricule));
            }
            if ((nom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(nom));
            }
            if ((rbautoriseValue == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(rbautoriseValue));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertVisiteur(
                    int IdUser, 
                    string Matricule, 
                    string Nom, 
                    string Prenom, 
                    global::System.Nullable<int> NumService, 
                    string Tel, 
                    string Fax, 
                    string FlagAutorise, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    global::System.Nullable<int> NumDroitAcces, 
                    string NumBadge, 
                    global::System.Nullable<int> NbEmpreintes, 
                    string Adresse1, 
                    string Adresse2, 
                    string CodePostal, 
                    string Ville, 
                    string Telephone, 
                    string Mobile, 
                    string EMail, 
                    global::System.Nullable<global::System.DateTime> DateCreat, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    string DateNaissance, 
                    global::System.Nullable<int> HeureMois, 
                    global::System.Nullable<int> TauxNormal, 
                    global::System.Nullable<int> TauxSup1, 
                    global::System.Nullable<int> TauxSup2, 
                    string Fonction, 
                    global::System.Nullable<int> TauxSup3, 
                    global::System.Nullable<int> Sexe, 
                    global::System.Nullable<int> Civilite, 
                    string NumCI, 
                    string NumSS, 
                    global::System.Nullable<int> NumHoraire, 
                    global::System.Nullable<int> CodePin, 
                    global::System.Nullable<bool> CheckEmpreinte, 
                    global::System.Nullable<bool> CheckBadge, 
                    global::System.Nullable<bool> CheckPin, 
                    global::System.Nullable<bool> CheckAutoDeclar, 
                    global::System.Nullable<int> TauxSup0, 
                    global::System.Nullable<int> TypeTemps, 
                    global::System.Nullable<bool> Modified, 
                    global::System.Nullable<bool> BadgeEncoded, 
                    global::System.Nullable<int> NumContrat, 
                    global::System.Nullable<int> TypeUser, 
                    global::System.Nullable<int> IdUser1, 
                    global::System.Nullable<int> IdUser2, 
                    global::System.Nullable<int> IdUser3, 
                    global::System.Nullable<bool> UpdateLecNow, 
                    global::System.Nullable<int> JourRepos1, 
                    global::System.Nullable<int> JourRepos2, 
                    string Motif, 
                    global::System.Nullable<int> IdMotif) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[32];
            command.Parameters[0].Value = ((int)(IdUser));
            if ((Matricule == null)) {
                throw new global::System.ArgumentNullException("Matricule");
            }
            else {
                command.Parameters[1].Value = ((string)(Matricule));
            }
            if ((Nom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Prenom));
            }
            if ((NumService.HasValue == true)) {
                command.Parameters[4].Value = ((int)(NumService.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Tel == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Tel));
            }
            if ((Fax == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(Fax));
            }
            if ((FlagAutorise == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(FlagAutorise));
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[8].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[9].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((NumDroitAcces.HasValue == true)) {
                command.Parameters[10].Value = ((int)(NumDroitAcces.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((NumBadge == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(NumBadge));
            }
            if ((NbEmpreintes.HasValue == true)) {
                command.Parameters[12].Value = ((int)(NbEmpreintes.Value));
            }
            else {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Adresse1 == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(Adresse1));
            }
            if ((Adresse2 == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(Adresse2));
            }
            if ((CodePostal == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(CodePostal));
            }
            if ((Ville == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Ville));
            }
            if ((Telephone == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(Telephone));
            }
            if ((Mobile == null)) {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[18].Value = ((string)(Mobile));
            }
            if ((EMail == null)) {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[19].Value = ((string)(EMail));
            }
            if ((DateCreat.HasValue == true)) {
                command.Parameters[20].Value = ((System.DateTime)(DateCreat.Value));
            }
            else {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[21].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((DateNaissance == null)) {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[22].Value = ((string)(DateNaissance));
            }
            if ((HeureMois.HasValue == true)) {
                command.Parameters[23].Value = ((int)(HeureMois.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TauxNormal.HasValue == true)) {
                command.Parameters[24].Value = ((int)(TauxNormal.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((TauxSup1.HasValue == true)) {
                command.Parameters[25].Value = ((int)(TauxSup1.Value));
            }
            else {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            if ((TauxSup2.HasValue == true)) {
                command.Parameters[26].Value = ((int)(TauxSup2.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Fonction == null)) {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[27].Value = ((string)(Fonction));
            }
            if ((TauxSup3.HasValue == true)) {
                command.Parameters[28].Value = ((int)(TauxSup3.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((Sexe.HasValue == true)) {
                command.Parameters[29].Value = ((int)(Sexe.Value));
            }
            else {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Civilite.HasValue == true)) {
                command.Parameters[30].Value = ((int)(Civilite.Value));
            }
            else {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            if ((NumCI == null)) {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[31].Value = ((string)(NumCI));
            }
            if ((NumSS == null)) {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[32].Value = ((string)(NumSS));
            }
            if ((NumHoraire.HasValue == true)) {
                command.Parameters[33].Value = ((int)(NumHoraire.Value));
            }
            else {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CodePin.HasValue == true)) {
                command.Parameters[34].Value = ((int)(CodePin.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CheckEmpreinte.HasValue == true)) {
                command.Parameters[35].Value = ((bool)(CheckEmpreinte.Value));
            }
            else {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CheckBadge.HasValue == true)) {
                command.Parameters[36].Value = ((bool)(CheckBadge.Value));
            }
            else {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((CheckPin.HasValue == true)) {
                command.Parameters[37].Value = ((bool)(CheckPin.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((CheckAutoDeclar.HasValue == true)) {
                command.Parameters[38].Value = ((bool)(CheckAutoDeclar.Value));
            }
            else {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((TauxSup0.HasValue == true)) {
                command.Parameters[39].Value = ((int)(TauxSup0.Value));
            }
            else {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((TypeTemps.HasValue == true)) {
                command.Parameters[40].Value = ((int)(TypeTemps.Value));
            }
            else {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((Modified.HasValue == true)) {
                command.Parameters[41].Value = ((bool)(Modified.Value));
            }
            else {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((BadgeEncoded.HasValue == true)) {
                command.Parameters[42].Value = ((bool)(BadgeEncoded.Value));
            }
            else {
                command.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((NumContrat.HasValue == true)) {
                command.Parameters[43].Value = ((int)(NumContrat.Value));
            }
            else {
                command.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((TypeUser.HasValue == true)) {
                command.Parameters[44].Value = ((int)(TypeUser.Value));
            }
            else {
                command.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((IdUser1.HasValue == true)) {
                command.Parameters[45].Value = ((int)(IdUser1.Value));
            }
            else {
                command.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((IdUser2.HasValue == true)) {
                command.Parameters[46].Value = ((int)(IdUser2.Value));
            }
            else {
                command.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((IdUser3.HasValue == true)) {
                command.Parameters[47].Value = ((int)(IdUser3.Value));
            }
            else {
                command.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((UpdateLecNow.HasValue == true)) {
                command.Parameters[48].Value = ((bool)(UpdateLecNow.Value));
            }
            else {
                command.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((JourRepos1.HasValue == true)) {
                command.Parameters[49].Value = ((int)(JourRepos1.Value));
            }
            else {
                command.Parameters[49].Value = global::System.DBNull.Value;
            }
            if ((JourRepos2.HasValue == true)) {
                command.Parameters[50].Value = ((int)(JourRepos2.Value));
            }
            else {
                command.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Motif == null)) {
                command.Parameters[51].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[51].Value = ((string)(Motif));
            }
            if ((IdMotif.HasValue == true)) {
                command.Parameters[52].Value = ((int)(IdMotif.Value));
            }
            else {
                command.Parameters[52].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object MatriculeExiste(string Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[33];
            if ((Matricule == null)) {
                throw new global::System.ArgumentNullException("Matricule");
            }
            else {
                command.Parameters[0].Value = ((string)(Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int SetFlagAutorise(string FlagAutorise, string Original_Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[34];
            if ((FlagAutorise == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(FlagAutorise));
            }
            if ((Original_Matricule == null)) {
                throw new global::System.ArgumentNullException("Original_Matricule");
            }
            else {
                command.Parameters[1].Value = ((string)(Original_Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateLecteurNow(string Original_Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[35];
            if ((Original_Matricule == null)) {
                throw new global::System.ArgumentNullException("Original_Matricule");
            }
            else {
                command.Parameters[0].Value = ((string)(Original_Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int UpdateVisiteur(
                    string Nom, 
                    string Prenom, 
                    global::System.Nullable<int> NumService, 
                    string Tel, 
                    string Fax, 
                    string FlagAutorise, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    global::System.Nullable<int> NumDroitAcces, 
                    string NumBadge, 
                    global::System.Nullable<int> NbEmpreintes, 
                    string Adresse1, 
                    string Adresse2, 
                    string CodePostal, 
                    string Ville, 
                    string Telephone, 
                    string Mobile, 
                    string EMail, 
                    global::System.Nullable<global::System.DateTime> DateCreat, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    string DateNaissance, 
                    global::System.Nullable<int> HeureMois, 
                    global::System.Nullable<int> TauxNormal, 
                    global::System.Nullable<int> TauxSup1, 
                    global::System.Nullable<int> TauxSup2, 
                    string Fonction, 
                    global::System.Nullable<int> TauxSup3, 
                    global::System.Nullable<int> Sexe, 
                    global::System.Nullable<int> Civilite, 
                    string NumCI, 
                    string NumSS, 
                    global::System.Nullable<int> NumHoraire, 
                    global::System.Nullable<int> CodePin, 
                    global::System.Nullable<bool> CheckEmpreinte, 
                    global::System.Nullable<bool> CheckBadge, 
                    global::System.Nullable<bool> CheckPin, 
                    global::System.Nullable<bool> CheckAutoDeclar, 
                    global::System.Nullable<int> TauxSup0, 
                    global::System.Nullable<int> TypeTemps, 
                    global::System.Nullable<bool> Modified, 
                    global::System.Nullable<bool> BadgeEncoded, 
                    global::System.Nullable<int> NumContrat, 
                    global::System.Nullable<int> TypeUser, 
                    global::System.Nullable<int> IdUser1, 
                    global::System.Nullable<int> IdUser2, 
                    global::System.Nullable<int> IdUser3, 
                    global::System.Nullable<bool> UpdateLecNow, 
                    global::System.Nullable<int> JourRepos1, 
                    global::System.Nullable<int> JourRepos2, 
                    string Motif, 
                    global::System.Nullable<int> IdMotif, 
                    string Original_Matricule) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[36];
            if ((Nom == null)) {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[0].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Prenom));
            }
            if ((NumService.HasValue == true)) {
                command.Parameters[2].Value = ((int)(NumService.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Tel == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Tel));
            }
            if ((Fax == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Fax));
            }
            if ((FlagAutorise == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(FlagAutorise));
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[6].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[7].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NumDroitAcces.HasValue == true)) {
                command.Parameters[8].Value = ((int)(NumDroitAcces.Value));
            }
            else {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((NumBadge == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(NumBadge));
            }
            if ((NbEmpreintes.HasValue == true)) {
                command.Parameters[10].Value = ((int)(NbEmpreintes.Value));
            }
            else {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Adresse1 == null)) {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[11].Value = ((string)(Adresse1));
            }
            if ((Adresse2 == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(Adresse2));
            }
            if ((CodePostal == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(CodePostal));
            }
            if ((Ville == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(Ville));
            }
            if ((Telephone == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(Telephone));
            }
            if ((Mobile == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(Mobile));
            }
            if ((EMail == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(EMail));
            }
            if ((DateCreat.HasValue == true)) {
                command.Parameters[18].Value = ((System.DateTime)(DateCreat.Value));
            }
            else {
                command.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[19].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((DateNaissance == null)) {
                command.Parameters[20].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[20].Value = ((string)(DateNaissance));
            }
            if ((HeureMois.HasValue == true)) {
                command.Parameters[21].Value = ((int)(HeureMois.Value));
            }
            else {
                command.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((TauxNormal.HasValue == true)) {
                command.Parameters[22].Value = ((int)(TauxNormal.Value));
            }
            else {
                command.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((TauxSup1.HasValue == true)) {
                command.Parameters[23].Value = ((int)(TauxSup1.Value));
            }
            else {
                command.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((TauxSup2.HasValue == true)) {
                command.Parameters[24].Value = ((int)(TauxSup2.Value));
            }
            else {
                command.Parameters[24].Value = global::System.DBNull.Value;
            }
            if ((Fonction == null)) {
                command.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[25].Value = ((string)(Fonction));
            }
            if ((TauxSup3.HasValue == true)) {
                command.Parameters[26].Value = ((int)(TauxSup3.Value));
            }
            else {
                command.Parameters[26].Value = global::System.DBNull.Value;
            }
            if ((Sexe.HasValue == true)) {
                command.Parameters[27].Value = ((int)(Sexe.Value));
            }
            else {
                command.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Civilite.HasValue == true)) {
                command.Parameters[28].Value = ((int)(Civilite.Value));
            }
            else {
                command.Parameters[28].Value = global::System.DBNull.Value;
            }
            if ((NumCI == null)) {
                command.Parameters[29].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[29].Value = ((string)(NumCI));
            }
            if ((NumSS == null)) {
                command.Parameters[30].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[30].Value = ((string)(NumSS));
            }
            if ((NumHoraire.HasValue == true)) {
                command.Parameters[31].Value = ((int)(NumHoraire.Value));
            }
            else {
                command.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((CodePin.HasValue == true)) {
                command.Parameters[32].Value = ((int)(CodePin.Value));
            }
            else {
                command.Parameters[32].Value = global::System.DBNull.Value;
            }
            if ((CheckEmpreinte.HasValue == true)) {
                command.Parameters[33].Value = ((bool)(CheckEmpreinte.Value));
            }
            else {
                command.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((CheckBadge.HasValue == true)) {
                command.Parameters[34].Value = ((bool)(CheckBadge.Value));
            }
            else {
                command.Parameters[34].Value = global::System.DBNull.Value;
            }
            if ((CheckPin.HasValue == true)) {
                command.Parameters[35].Value = ((bool)(CheckPin.Value));
            }
            else {
                command.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((CheckAutoDeclar.HasValue == true)) {
                command.Parameters[36].Value = ((bool)(CheckAutoDeclar.Value));
            }
            else {
                command.Parameters[36].Value = global::System.DBNull.Value;
            }
            if ((TauxSup0.HasValue == true)) {
                command.Parameters[37].Value = ((int)(TauxSup0.Value));
            }
            else {
                command.Parameters[37].Value = global::System.DBNull.Value;
            }
            if ((TypeTemps.HasValue == true)) {
                command.Parameters[38].Value = ((int)(TypeTemps.Value));
            }
            else {
                command.Parameters[38].Value = global::System.DBNull.Value;
            }
            if ((Modified.HasValue == true)) {
                command.Parameters[39].Value = ((bool)(Modified.Value));
            }
            else {
                command.Parameters[39].Value = global::System.DBNull.Value;
            }
            if ((BadgeEncoded.HasValue == true)) {
                command.Parameters[40].Value = ((bool)(BadgeEncoded.Value));
            }
            else {
                command.Parameters[40].Value = global::System.DBNull.Value;
            }
            if ((NumContrat.HasValue == true)) {
                command.Parameters[41].Value = ((int)(NumContrat.Value));
            }
            else {
                command.Parameters[41].Value = global::System.DBNull.Value;
            }
            if ((TypeUser.HasValue == true)) {
                command.Parameters[42].Value = ((int)(TypeUser.Value));
            }
            else {
                command.Parameters[42].Value = global::System.DBNull.Value;
            }
            if ((IdUser1.HasValue == true)) {
                command.Parameters[43].Value = ((int)(IdUser1.Value));
            }
            else {
                command.Parameters[43].Value = global::System.DBNull.Value;
            }
            if ((IdUser2.HasValue == true)) {
                command.Parameters[44].Value = ((int)(IdUser2.Value));
            }
            else {
                command.Parameters[44].Value = global::System.DBNull.Value;
            }
            if ((IdUser3.HasValue == true)) {
                command.Parameters[45].Value = ((int)(IdUser3.Value));
            }
            else {
                command.Parameters[45].Value = global::System.DBNull.Value;
            }
            if ((UpdateLecNow.HasValue == true)) {
                command.Parameters[46].Value = ((bool)(UpdateLecNow.Value));
            }
            else {
                command.Parameters[46].Value = global::System.DBNull.Value;
            }
            if ((JourRepos1.HasValue == true)) {
                command.Parameters[47].Value = ((int)(JourRepos1.Value));
            }
            else {
                command.Parameters[47].Value = global::System.DBNull.Value;
            }
            if ((JourRepos2.HasValue == true)) {
                command.Parameters[48].Value = ((int)(JourRepos2.Value));
            }
            else {
                command.Parameters[48].Value = global::System.DBNull.Value;
            }
            if ((Motif == null)) {
                command.Parameters[49].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[49].Value = ((string)(Motif));
            }
            if ((IdMotif.HasValue == true)) {
                command.Parameters[50].Value = ((int)(IdMotif.Value));
            }
            else {
                command.Parameters[50].Value = global::System.DBNull.Value;
            }
            if ((Original_Matricule == null)) {
                throw new global::System.ArgumentNullException("Original_Matricule");
            }
            else {
                command.Parameters[51].Value = ((string)(Original_Matricule));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class AutoQpuTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public AutoQpuTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "AutoQpu";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("DateCreation", "DateCreation");
            tableMapping.ColumnMappings.Add("IdOpCreation", "IdOpCreation");
            tableMapping.ColumnMappings.Add("DateModif", "DateModif");
            tableMapping.ColumnMappings.Add("IdOpModif", "IdOpModif");
            tableMapping.ColumnMappings.Add("DateDebut", "DateDebut");
            tableMapping.ColumnMappings.Add("DateFin", "DateFin");
            tableMapping.ColumnMappings.Add("MatriculeUser", "MatriculeUser");
            tableMapping.ColumnMappings.Add("Valide", "Valide");
            tableMapping.ColumnMappings.Add("NumAuto", "NumAuto");
            tableMapping.ColumnMappings.Add("NumAgrement", "NumAgrement");
            tableMapping.ColumnMappings.Add("Destination", "Destination");
            tableMapping.ColumnMappings.Add("IdAgrement", "IdAgrement");
            tableMapping.ColumnMappings.Add("NomPassager1", "NomPassager1");
            tableMapping.ColumnMappings.Add("PrenomPassager1", "PrenomPassager1");
            tableMapping.ColumnMappings.Add("CinPassager1", "CinPassager1");
            tableMapping.ColumnMappings.Add("NomPassager2", "NomPassager2");
            tableMapping.ColumnMappings.Add("PrenomPassager2", "PrenomPassager2");
            tableMapping.ColumnMappings.Add("CinPassager2", "CinPassager2");
            tableMapping.ColumnMappings.Add("NomUser", "NomUser");
            tableMapping.ColumnMappings.Add("PrenomUser", "PrenomUser");
            tableMapping.ColumnMappings.Add("NumListe", "NumListe");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[5];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT     AutoQpu.Id, AutoQpu.DateCreation, AutoQpu.IdOpCreation, AutoQpu.DateModif, AutoQpu.IdOpModif, AutoQpu.DateDebut, AutoQpu.DateFin, AutoQpu.MatriculeUser, 
                      AutoQpu.Valide, AutoQpu.NumAuto, AutoQpu.NumAgrement, AutoQpu.Destination, AutoQpu.IdAgrement, AutoQpu.NomPassager1, AutoQpu.PrenomPassager1, 
                      AutoQpu.CinPassager1, AutoQpu.NomPassager2, AutoQpu.PrenomPassager2, AutoQpu.CinPassager2, Users.Nom AS NomUser, Users.Prenom AS PrenomUser, 
                      ListesUsers.NumListe
FROM         AutoQpu INNER JOIN
                      Users ON AutoQpu.MatriculeUser = Users.Matricule  INNER JOIN
                      ListesUsers ON Users.IdUser = ListesUsers.IdUser";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"SELECT     AutoQpu.Id, AutoQpu.DateCreation, AutoQpu.IdOpCreation, AutoQpu.DateModif, AutoQpu.IdOpModif, AutoQpu.DateDebut, AutoQpu.DateFin, AutoQpu.MatriculeUser, 
                      AutoQpu.Valide, AutoQpu.NumAuto, AutoQpu.NumAgrement, AutoQpu.Destination, AutoQpu.IdAgrement, AutoQpu.NomPassager1, AutoQpu.PrenomPassager1, 
                      AutoQpu.CinPassager1, AutoQpu.NomPassager2, AutoQpu.PrenomPassager2, AutoQpu.CinPassager2, Users.Nom AS NomUser, Users.Prenom AS PrenomUser
                      
FROM         AutoQpu INNER JOIN
                      Users ON AutoQpu.MatriculeUser = Users.Matricule COLLATE French_CI_AI ";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = @"SELECT        AutoQpu.Id, AutoQpu.DateCreation, AutoQpu.IdOpCreation, AutoQpu.DateModif, AutoQpu.IdOpModif, AutoQpu.DateDebut, AutoQpu.DateFin, AutoQpu.MatriculeUser, 
                         AutoQpu.Valide, AutoQpu.NumAuto, AutoQpu.NumAgrement, AutoQpu.Destination, AutoQpu.IdAgrement, AutoQpu.NomPassager1, AutoQpu.PrenomPassager1, 
                         AutoQpu.CinPassager1, AutoQpu.NomPassager2, AutoQpu.PrenomPassager2, AutoQpu.CinPassager2, Users.Nom AS NomUser, Users.Prenom AS PrenomUser
FROM            AutoQpu INNER JOIN
                         Users ON AutoQpu.MatriculeUser = Users.Matricule 
WHERE        (AutoQpu.NumAuto = ?)";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[2].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAuto", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAuto", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"INSERT INTO AutoQpu
                         (DateCreation, IdOpCreation, DateModif, IdOpModif, DateDebut, DateFin, MatriculeUser, Valide, NumAuto, NumAgrement, Destination, IdAgrement, NomPassager1, 
                         PrenomPassager1, CinPassager1, NomPassager2, PrenomPassager2, CinPassager2)
VALUES    
   (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateCreation", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpCreation", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpCreation", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateModif", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOpModif", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOpModif", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateDebut", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("DateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "DateFin", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("MatriculeUser", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MatriculeUser", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAuto", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAuto", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumAgrement", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumAgrement", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Destination", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Destination", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdAgrement", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdAgrement", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomPassager1", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomPassager1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("PrenomPassager1", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrenomPassager1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CinPassager1", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CinPassager1", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomPassager2", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomPassager2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("PrenomPassager2", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "PrenomPassager2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CinPassager2", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CinPassager2", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "UPDATE       AutoQpu\r\nSET                Valide = ?\r\nWHERE        (MatriculeUser " +
                "= ?)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_MatriculeUser", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "MatriculeUser", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.AutoQpuDataTable GetAutorisationQPU_NumListe() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.AutoQpuDataTable dataTable = new MyDataSet.AutoQpuDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AutoQpuDataTable GetAutorisationQPU() {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            MyDataSet.AutoQpuDataTable dataTable = new MyDataSet.AutoQpuDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.AutoQpuDataTable GetAutorisationQPUByNum(string NumAuto) {
            this.Adapter.SelectCommand = this.CommandCollection[2];
            if ((NumAuto == null)) {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = ((string)(NumAuto));
            }
            MyDataSet.AutoQpuDataTable dataTable = new MyDataSet.AutoQpuDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int InsertAutoQPU(
                    global::System.Nullable<global::System.DateTime> DateCreation, 
                    global::System.Nullable<int> IdOpCreation, 
                    global::System.Nullable<global::System.DateTime> DateModif, 
                    global::System.Nullable<int> IdOpModif, 
                    global::System.Nullable<global::System.DateTime> DateDebut, 
                    global::System.Nullable<global::System.DateTime> DateFin, 
                    string MatriculeUser, 
                    global::System.Nullable<bool> Valide, 
                    string NumAuto, 
                    string NumAgrement, 
                    string Destination, 
                    global::System.Nullable<int> IdAgrement, 
                    string NomPassager1, 
                    string PrenomPassager1, 
                    string CinPassager1, 
                    string NomPassager2, 
                    string PrenomPassager2, 
                    string CinPassager2) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[3];
            if ((DateCreation.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(DateCreation.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((IdOpCreation.HasValue == true)) {
                command.Parameters[1].Value = ((int)(IdOpCreation.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((DateModif.HasValue == true)) {
                command.Parameters[2].Value = ((System.DateTime)(DateModif.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((IdOpModif.HasValue == true)) {
                command.Parameters[3].Value = ((int)(IdOpModif.Value));
            }
            else {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((DateDebut.HasValue == true)) {
                command.Parameters[4].Value = ((System.DateTime)(DateDebut.Value));
            }
            else {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((DateFin.HasValue == true)) {
                command.Parameters[5].Value = ((System.DateTime)(DateFin.Value));
            }
            else {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((MatriculeUser == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(MatriculeUser));
            }
            if ((Valide.HasValue == true)) {
                command.Parameters[7].Value = ((bool)(Valide.Value));
            }
            else {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((NumAuto == null)) {
                command.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[8].Value = ((string)(NumAuto));
            }
            if ((NumAgrement == null)) {
                command.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[9].Value = ((string)(NumAgrement));
            }
            if ((Destination == null)) {
                command.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[10].Value = ((string)(Destination));
            }
            if ((IdAgrement.HasValue == true)) {
                command.Parameters[11].Value = ((int)(IdAgrement.Value));
            }
            else {
                command.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((NomPassager1 == null)) {
                command.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[12].Value = ((string)(NomPassager1));
            }
            if ((PrenomPassager1 == null)) {
                command.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[13].Value = ((string)(PrenomPassager1));
            }
            if ((CinPassager1 == null)) {
                command.Parameters[14].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[14].Value = ((string)(CinPassager1));
            }
            if ((NomPassager2 == null)) {
                command.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[15].Value = ((string)(NomPassager2));
            }
            if ((PrenomPassager2 == null)) {
                command.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[16].Value = ((string)(PrenomPassager2));
            }
            if ((CinPassager2 == null)) {
                command.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[17].Value = ((string)(CinPassager2));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, false)]
        public virtual int SetValidite(global::System.Nullable<bool> Valide, string Original_MatriculeUser) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[4];
            if ((Valide.HasValue == true)) {
                command.Parameters[0].Value = ((bool)(Valide.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Original_MatriculeUser == null)) {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[1].Value = ((string)(Original_MatriculeUser));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LogTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public LogTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Log";
            tableMapping.ColumnMappings.Add("IdLog", "IdLog");
            tableMapping.ColumnMappings.Add("Type", "Type");
            tableMapping.ColumnMappings.Add("Instant", "Instant");
            tableMapping.ColumnMappings.Add("IdOperateur", "IdOperateur");
            tableMapping.ColumnMappings.Add("Nom", "Nom");
            tableMapping.ColumnMappings.Add("Prenom", "Prenom");
            tableMapping.ColumnMappings.Add("Profil", "Profil");
            tableMapping.ColumnMappings.Add("NomService", "NomService");
            tableMapping.ColumnMappings.Add("Login", "Login");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[5];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"Declare @Index Int
Declare @debut DateTime
Declare @fin DateTime
Declare @nom NVarChar(30)
Declare @Prenom NVarChar(30)
Declare @ddlprofilValue NVarChar(30)


set @Index = ?
set @debut  = ?
set @fin = ?
set @nom = ?
set @Prenom = ?
set @ddlprofilValue = ?



select * from (

SELECT IdLog, Type, Instant, IdOperateur, Nom, Prenom, Profil, NomService, Login ,ROW_NUMBER() OVER (ORDER BY Instant DESC) AS RowNum FROM dbo.Log 

WHERE  1 = CASE  
              WHEN @debut  IS NULL THEN 1 
              WHEN Log.Instant  >= @debut   THEN 1 
              ELSE 0 
       END 
 AND 1 = CASE  
              WHEN @fin  IS NULL THEN 1 
              WHEN Log.Instant  <= @fin  THEN 1 
              ELSE 0 
       END 
AND   1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Log.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND   1 = CASE  
              WHEN @Prenom  IS NULL THEN 1 
              WHEN Log.Prenom  LIKE +@Prenom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @ddlprofilValue  IS NULL THEN 1 
              WHEN Log.Profil = @ddlprofilValue   THEN 1 
              ELSE 0 
       END

 ) as     TableLoginsOperateurs

 WHERE ( TableLoginsOperateurs.RowNum   BETWEEN  (@Index*15)-14  AND (@Index * 15))";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Index", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("debut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("fin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("profil", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[1].Connection = this.Connection;
            this._commandCollection[1].CommandText = @"
Declare @debut DateTime
Declare @fin DateTime
Declare @nom NVarChar(30)
Declare @Prenom NVarChar(30)
Declare @ddlprofilValue NVarChar(30)



set @debut  = ?
set @fin = ?
set @nom = ?
set @Prenom = ?
set @ddlprofilValue = ?





SELECT IdLog, Type, Instant, IdOperateur, Nom, Prenom, Profil, NomService, Login ,ROW_NUMBER() OVER (ORDER BY Instant DESC) AS RowNum FROM dbo.Log 

WHERE  1 = CASE  
              WHEN @debut  IS NULL THEN 1 
              WHEN Log.Instant  >= @debut   THEN 1 
              ELSE 0 
       END 
 AND 1 = CASE  
              WHEN @fin  IS NULL THEN 1 
              WHEN Log.Instant  <= @fin  THEN 1 
              ELSE 0 
       END 
AND   1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Log.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND   1 = CASE  
              WHEN @Prenom  IS NULL THEN 1 
              WHEN Log.Prenom  LIKE +@Prenom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @ddlprofilValue  IS NULL THEN 1 
              WHEN Log.Profil = @ddlprofilValue   THEN 1 
              ELSE 0 
       END



";
            this._commandCollection[1].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("debut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("fin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[1].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("profil", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[2] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[2].Connection = this.Connection;
            this._commandCollection[2].CommandText = "select count(*) from Log";
            this._commandCollection[2].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[3].Connection = this.Connection;
            this._commandCollection[3].CommandText = @"
Declare @debut DateTime
Declare @fin DateTime
Declare @nom NVarChar(30)
Declare @Prenom NVarChar(30)
Declare @ddlprofilValue NVarChar(30)


set @debut  = ?
set @fin = ?
set @nom = ?
set @Prenom = ?
set @ddlprofilValue = ?



select count(*)  from (

SELECT IdLog, Type, Instant, IdOperateur, Nom, Prenom, Profil, NomService, Login ,ROW_NUMBER() OVER (ORDER BY Instant DESC) AS RowNum FROM dbo.Log 

WHERE  1 = CASE  
              WHEN @debut  IS NULL THEN 1 
              WHEN Log.Instant  >= @debut   THEN 1 
              ELSE 0 
       END 
 AND 1 = CASE  
              WHEN @fin  IS NULL THEN 1 
              WHEN Log.Instant  <= @fin  THEN 1 
              ELSE 0 
       END 
AND   1 = CASE  
              WHEN @nom  IS NULL THEN 1 
              WHEN Log.Nom  LIKE +@nom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND   1 = CASE  
              WHEN @Prenom  IS NULL THEN 1 
              WHEN Log.Prenom  LIKE +@Prenom+ '%'    THEN 1 
              ELSE 0 
       END 
  AND  1 = CASE  
              WHEN @ddlprofilValue  IS NULL THEN 1 
              WHEN Log.Profil = @ddlprofilValue   THEN 1 
              ELSE 0 
       END

 ) as     Total

 ";
            this._commandCollection[3].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("debut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("fin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("nom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("prenom", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[3].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("profil", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[4].Connection = this.Connection;
            this._commandCollection[4].CommandText = "INSERT INTO Log\r\n                         ( Type, Instant, IdOperateur, Nom, Pren" +
                "om, Profil, NomService, Login)\r\nVALUES        (?, ?, ?, ?, ?, ?, ?, ?)";
            this._commandCollection[4].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IdOperateur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "IdOperateur", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Nom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Nom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Prenom", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Prenom", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Profil", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Profil", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NomService", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NomService", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[4].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Login", global::System.Data.Odbc.OdbcType.VarChar, 1024, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Login", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.LogDataTable GetLoginsOperateursByFiltre(global::System.Nullable<int> Index, global::System.Nullable<global::System.DateTime> debut, global::System.Nullable<global::System.DateTime> fin, string nom, string prenom, string profil) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((Index.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(Index.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((debut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(debut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((fin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(fin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(prenom));
            }
            if ((profil == null)) {
                this.Adapter.SelectCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[5].Value = ((string)(profil));
            }
            MyDataSet.LogDataTable dataTable = new MyDataSet.LogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, false)]
        public virtual MyDataSet.LogDataTable GetLoginsOperateursToExport(global::System.Nullable<global::System.DateTime> debut, global::System.Nullable<global::System.DateTime> fin, string nom, string prenom, string profil) {
            this.Adapter.SelectCommand = this.CommandCollection[1];
            if ((debut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(debut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((fin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(fin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((nom == null)) {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = ((string)(prenom));
            }
            if ((profil == null)) {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = ((string)(profil));
            }
            MyDataSet.LogDataTable dataTable = new MyDataSet.LogDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual global::System.Nullable<int> GetTotalLoginsOperateurs() {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[2];
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return new global::System.Nullable<int>();
            }
            else {
                return new global::System.Nullable<int>(((int)(returnValue)));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual object GetTotalLoginsOperateursByFiltre(global::System.Nullable<global::System.DateTime> debut, global::System.Nullable<global::System.DateTime> fin, string nom, string prenom, string profil) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[3];
            if ((debut.HasValue == true)) {
                command.Parameters[0].Value = ((System.DateTime)(debut.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((fin.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(fin.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((nom == null)) {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[2].Value = ((string)(nom));
            }
            if ((prenom == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(prenom));
            }
            if ((profil == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(profil));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            object returnValue;
            try {
                returnValue = command.ExecuteScalar();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            if (((returnValue == null) 
                        || (returnValue.GetType() == typeof(global::System.DBNull)))) {
                return null;
            }
            else {
                return ((object)(returnValue));
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, false)]
        public virtual int OpenSession(global::System.Nullable<int> Type, global::System.Nullable<global::System.DateTime> Instant, global::System.Nullable<int> IdOperateur, string Nom, string Prenom, string Profil, string NomService, string Login) {
            global::System.Data.Odbc.OdbcCommand command = this.CommandCollection[4];
            if ((Type.HasValue == true)) {
                command.Parameters[0].Value = ((int)(Type.Value));
            }
            else {
                command.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Instant.HasValue == true)) {
                command.Parameters[1].Value = ((System.DateTime)(Instant.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((IdOperateur.HasValue == true)) {
                command.Parameters[2].Value = ((int)(IdOperateur.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Nom == null)) {
                command.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[3].Value = ((string)(Nom));
            }
            if ((Prenom == null)) {
                command.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[4].Value = ((string)(Prenom));
            }
            if ((Profil == null)) {
                command.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[5].Value = ((string)(Profil));
            }
            if ((NomService == null)) {
                command.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[6].Value = ((string)(NomService));
            }
            if ((Login == null)) {
                command.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                command.Parameters[7].Value = ((string)(Login));
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class CodesMissionsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public CodesMissionsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "CodesMissions";
            tableMapping.ColumnMappings.Add("NumCode", "NumCode");
            tableMapping.ColumnMappings.Add("ValeurCode", "ValeurCode");
            tableMapping.ColumnMappings.Add("LibelleCode", "LibelleCode");
            tableMapping.ColumnMappings.Add("CodeSap", "CodeSap");
            tableMapping.ColumnMappings.Add("Lecteur", "Lecteur");
            tableMapping.ColumnMappings.Add("Type", "Type");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [LockTooTaxi].[dbo].[CodesMissions] WHERE (([NumCode] = ?) AND ((? = 1 AND [ValeurCode] IS NULL) OR ([ValeurCode] = ?)) AND ((? = 1 AND [LibelleCode] IS NULL) OR ([LibelleCode] = ?)) AND ((? = 1 AND [CodeSap] IS NULL) OR ([CodeSap] = ?)) AND ((? = 1 AND [Lecteur] IS NULL) OR ([Lecteur] = ?)) AND ((? = 1 AND [Type] IS NULL) OR ([Type] = ?)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_NumCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ValeurCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ValeurCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ValeurCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ValeurCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_LibelleCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_LibelleCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_CodeSap", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeSap", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_CodeSap", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeSap", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_Lecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lecteur", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Lecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lecteur", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.InsertCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [LockTooTaxi].[dbo].[CodesMissions] ([NumCode], [ValeurCode], [Libell" +
                "eCode], [CodeSap], [Lecteur], [Type]) VALUES (?, ?, ?, ?, ?, ?)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ValeurCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ValeurCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LibelleCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodeSap", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeSap", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Lecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lecteur", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand = new global::System.Data.Odbc.OdbcCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [LockTooTaxi].[dbo].[CodesMissions] SET [NumCode] = ?, [ValeurCode] = ?, [LibelleCode] = ?, [CodeSap] = ?, [Lecteur] = ?, [Type] = ? WHERE (([NumCode] = ?) AND ((? = 1 AND [ValeurCode] IS NULL) OR ([ValeurCode] = ?)) AND ((? = 1 AND [LibelleCode] IS NULL) OR ([LibelleCode] = ?)) AND ((? = 1 AND [CodeSap] IS NULL) OR ([CodeSap] = ?)) AND ((? = 1 AND [Lecteur] IS NULL) OR ([Lecteur] = ?)) AND ((? = 1 AND [Type] IS NULL) OR ([Type] = ?)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("NumCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("ValeurCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ValeurCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("LibelleCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleCode", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("CodeSap", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeSap", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Lecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lecteur", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Current, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_NumCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "NumCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_ValeurCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ValeurCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_ValeurCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "ValeurCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_LibelleCode", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleCode", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_LibelleCode", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "LibelleCode", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_CodeSap", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeSap", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_CodeSap", global::System.Data.Odbc.OdbcType.VarChar, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "CodeSap", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_Lecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lecteur", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Lecteur", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Lecteur", global::System.Data.DataRowVersion.Original, false, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("IsNull_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Original, true, null));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Original_Type", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Type", global::System.Data.DataRowVersion.Original, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NumCode, ValeurCode, LibelleCode, CodeSap, Lecteur, Type FROM dbo.CodesMis" +
                "sions";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.CodesMissionsDataTable GetCodeRefus() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MyDataSet.CodesMissionsDataTable dataTable = new MyDataSet.CodesMissionsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet.CodesMissionsDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MyDataSet dataSet) {
            return this.Adapter.Update(dataSet, "CodesMissions");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SyntheseTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SyntheseTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Synthese";
            tableMapping.ColumnMappings.Add("NumTaxi", "NumTaxi");
            tableMapping.ColumnMappings.Add("NumBadge", "NumBadge");
            tableMapping.ColumnMappings.Add("instant1", "instant1");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"SELECT        e.NumTaxi, Users.NumBadge, DATEADD([second], - Datepart([second], e.Instant), e.Instant) AS instant1
FROM            Events e inner join Users on e.Reference = Users.Matricule AND e.TypeTaxi = ? AND e.Valide = ? AND e.Instant BETWEEN ? AND ?
GROUP BY e.NumTaxi, Users.NumBadge,DATEADD([second], - Datepart([second], e.Instant), e.Instant)
ORDER BY e.NumTaxi";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("TypeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "TypeTaxi", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Valide", global::System.Data.Odbc.OdbcType.Bit, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Valide", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("Instant1", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), "Instant", global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.SyntheseDataTable GetSyntheseControles(global::System.Nullable<int> TypeTaxi, global::System.Nullable<bool> Valide, System.DateTime Instant, System.DateTime Instant1) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((TypeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((int)(TypeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((Valide.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((bool)(Valide.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(Instant));
            this.Adapter.SelectCommand.Parameters[3].Value = ((System.DateTime)(Instant1));
            MyDataSet.SyntheseDataTable dataTable = new MyDataSet.SyntheseDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class SyntheseTaxiAbsentsTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.Odbc.OdbcDataAdapter _adapter;
        
        private global::System.Data.Odbc.OdbcConnection _connection;
        
        private global::System.Data.Odbc.OdbcTransaction _transaction;
        
        private global::System.Data.Odbc.OdbcCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public SyntheseTaxiAbsentsTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.Odbc.OdbcDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.Odbc.OdbcCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.Odbc.OdbcTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.Odbc.OdbcCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.Odbc.OdbcDataAdapter();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.Odbc.OdbcConnection();
            this._connection.ConnectionString = global::DataLockTooTaxi.Properties.Settings.Default.LockTooTaxi;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.Odbc.OdbcCommand[1];
            this._commandCollection[0] = new global::System.Data.Odbc.OdbcCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = @"select row_number() OVER (ORDER BY CAST(Temp1.NumAgrement AS int) ASC) AS IndexTaxi,Temp1.NumAgrement as NumTaxi, Temp2.instant1 from (
SELECT  Agrement.NumAgrement,Agrement.TypeTaxi
FROM         Agrement   left join Events on Agrement.NumAgrement=Events.NumAgrement and Agrement.TypeTaxi=Events.TypeTaxi and  Events.Instant BETWEEN ? AND  ?
WHERE        (Events.NumAgrement IS NULL ) and   Agrement.TypeTaxi= ? ) As Temp1 left join
(

  SELECT        e.NumTaxi,e.TypeTaxi, (SELECT Max(e.Instant)) AS instant1
  FROM            Events e 
  WHERE  e.TypeTaxi = ?  and e.Instant < ?
  GROUP BY e.NumTaxi,e.TypeTaxi	

	)
 as Temp2   on Temp1.NumAgrement= Temp2.NumTaxi	 and Temp1.TypeTaxi=Temp2.TypeTaxi	
 GROUP BY Temp1.NumAgrement,Temp1.TypeTaxi,Temp2.instant1
 order by convert(int,Temp1.NumAgrement)   ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateDebut", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("typeTaxi2", global::System.Data.Odbc.OdbcType.Int, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
            this._commandCollection[0].Parameters.Add(new global::System.Data.Odbc.OdbcParameter("dateFin2", global::System.Data.Odbc.OdbcType.DateTime, 0, global::System.Data.ParameterDirection.Input, ((byte)(0)), ((byte)(0)), null, global::System.Data.DataRowVersion.Current, false, null));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MyDataSet.SyntheseTaxiAbsentsDataTable GetSyntheseLastEvent(global::System.Nullable<global::System.DateTime> dateDebut, global::System.Nullable<global::System.DateTime> dateFin, global::System.Nullable<int> typeTaxi, global::System.Nullable<int> typeTaxi2, global::System.Nullable<global::System.DateTime> dateFin2) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((dateDebut.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[0].Value = ((System.DateTime)(dateDebut.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            if ((dateFin.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(dateFin.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((typeTaxi.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(typeTaxi.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((typeTaxi2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(typeTaxi2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((dateFin2.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[4].Value = ((System.DateTime)(dateFin2.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            MyDataSet.SyntheseTaxiAbsentsDataTable dataTable = new MyDataSet.SyntheseTaxiAbsentsDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private DroitsTableAdapter _droitsTableAdapter;
        
        private ListesUsersTableAdapter _listesUsersTableAdapter;
        
        private ServicesTableAdapter _servicesTableAdapter;
        
        private UsersBioDataTableAdapter _usersBioDataTableAdapter;
        
        private OperateursTableAdapter _operateursTableAdapter;
        
        private LecteursTableAdapter _lecteursTableAdapter;
        
        private TypeTaxiTableAdapter _typeTaxiTableAdapter;
        
        private LabelsControlesTableAdapter _labelsControlesTableAdapter;
        
        private VehiculesTableAdapter _vehiculesTableAdapter;
        
        private CommunesTableAdapter _communesTableAdapter;
        
        private MotifsTableAdapter _motifsTableAdapter;
        
        private CodesMissionsTableAdapter _codesMissionsTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public DroitsTableAdapter DroitsTableAdapter {
            get {
                return this._droitsTableAdapter;
            }
            set {
                this._droitsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ListesUsersTableAdapter ListesUsersTableAdapter {
            get {
                return this._listesUsersTableAdapter;
            }
            set {
                this._listesUsersTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ServicesTableAdapter ServicesTableAdapter {
            get {
                return this._servicesTableAdapter;
            }
            set {
                this._servicesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public UsersBioDataTableAdapter UsersBioDataTableAdapter {
            get {
                return this._usersBioDataTableAdapter;
            }
            set {
                this._usersBioDataTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public OperateursTableAdapter OperateursTableAdapter {
            get {
                return this._operateursTableAdapter;
            }
            set {
                this._operateursTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LecteursTableAdapter LecteursTableAdapter {
            get {
                return this._lecteursTableAdapter;
            }
            set {
                this._lecteursTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public TypeTaxiTableAdapter TypeTaxiTableAdapter {
            get {
                return this._typeTaxiTableAdapter;
            }
            set {
                this._typeTaxiTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public LabelsControlesTableAdapter LabelsControlesTableAdapter {
            get {
                return this._labelsControlesTableAdapter;
            }
            set {
                this._labelsControlesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public VehiculesTableAdapter VehiculesTableAdapter {
            get {
                return this._vehiculesTableAdapter;
            }
            set {
                this._vehiculesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CommunesTableAdapter CommunesTableAdapter {
            get {
                return this._communesTableAdapter;
            }
            set {
                this._communesTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public MotifsTableAdapter MotifsTableAdapter {
            get {
                return this._motifsTableAdapter;
            }
            set {
                this._motifsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public CodesMissionsTableAdapter CodesMissionsTableAdapter {
            get {
                return this._codesMissionsTableAdapter;
            }
            set {
                this._codesMissionsTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._droitsTableAdapter != null) 
                            && (this._droitsTableAdapter.Connection != null))) {
                    return this._droitsTableAdapter.Connection;
                }
                if (((this._listesUsersTableAdapter != null) 
                            && (this._listesUsersTableAdapter.Connection != null))) {
                    return this._listesUsersTableAdapter.Connection;
                }
                if (((this._servicesTableAdapter != null) 
                            && (this._servicesTableAdapter.Connection != null))) {
                    return this._servicesTableAdapter.Connection;
                }
                if (((this._usersBioDataTableAdapter != null) 
                            && (this._usersBioDataTableAdapter.Connection != null))) {
                    return this._usersBioDataTableAdapter.Connection;
                }
                if (((this._operateursTableAdapter != null) 
                            && (this._operateursTableAdapter.Connection != null))) {
                    return this._operateursTableAdapter.Connection;
                }
                if (((this._lecteursTableAdapter != null) 
                            && (this._lecteursTableAdapter.Connection != null))) {
                    return this._lecteursTableAdapter.Connection;
                }
                if (((this._typeTaxiTableAdapter != null) 
                            && (this._typeTaxiTableAdapter.Connection != null))) {
                    return this._typeTaxiTableAdapter.Connection;
                }
                if (((this._labelsControlesTableAdapter != null) 
                            && (this._labelsControlesTableAdapter.Connection != null))) {
                    return this._labelsControlesTableAdapter.Connection;
                }
                if (((this._vehiculesTableAdapter != null) 
                            && (this._vehiculesTableAdapter.Connection != null))) {
                    return this._vehiculesTableAdapter.Connection;
                }
                if (((this._communesTableAdapter != null) 
                            && (this._communesTableAdapter.Connection != null))) {
                    return this._communesTableAdapter.Connection;
                }
                if (((this._motifsTableAdapter != null) 
                            && (this._motifsTableAdapter.Connection != null))) {
                    return this._motifsTableAdapter.Connection;
                }
                if (((this._codesMissionsTableAdapter != null) 
                            && (this._codesMissionsTableAdapter.Connection != null))) {
                    return this._codesMissionsTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._droitsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._listesUsersTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._servicesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._usersBioDataTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._operateursTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lecteursTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._typeTaxiTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._labelsControlesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._vehiculesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._communesTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._motifsTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._codesMissionsTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(MyDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._communesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Communes.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._communesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._motifsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Motifs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._motifsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._labelsControlesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.LabelsControles.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._labelsControlesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._vehiculesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Vehicules.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._vehiculesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._codesMissionsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.CodesMissions.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._codesMissionsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._listesUsersTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ListesUsers.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._listesUsersTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._servicesTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Services.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._servicesTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._droitsTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Droits.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._droitsTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._typeTaxiTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TypeTaxi.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._typeTaxiTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._usersBioDataTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.UsersBioData.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._usersBioDataTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._operateursTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Operateurs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._operateursTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lecteursTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Lecteurs.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lecteursTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(MyDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._communesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Communes.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._communesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._motifsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Motifs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._motifsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._labelsControlesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.LabelsControles.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._labelsControlesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._vehiculesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Vehicules.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._vehiculesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._codesMissionsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.CodesMissions.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._codesMissionsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._listesUsersTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ListesUsers.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._listesUsersTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._servicesTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Services.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._servicesTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._droitsTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Droits.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._droitsTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._typeTaxiTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TypeTaxi.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._typeTaxiTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._usersBioDataTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.UsersBioData.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._usersBioDataTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._operateursTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Operateurs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._operateursTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lecteursTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Lecteurs.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lecteursTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(MyDataSet dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._lecteursTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Lecteurs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lecteursTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._operateursTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Operateurs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._operateursTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._usersBioDataTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.UsersBioData.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._usersBioDataTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._typeTaxiTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TypeTaxi.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._typeTaxiTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._droitsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Droits.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._droitsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._servicesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Services.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._servicesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._listesUsersTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ListesUsers.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._listesUsersTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._codesMissionsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.CodesMissions.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._codesMissionsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._vehiculesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Vehicules.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._vehiculesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._labelsControlesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.LabelsControles.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._labelsControlesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._motifsTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Motifs.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._motifsTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._communesTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Communes.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._communesTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(MyDataSet dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._droitsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._droitsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._listesUsersTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._listesUsersTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._servicesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._servicesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._usersBioDataTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._usersBioDataTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._operateursTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._operateursTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._lecteursTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lecteursTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._typeTaxiTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._typeTaxiTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._labelsControlesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._labelsControlesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._vehiculesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._vehiculesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._communesTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._communesTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._motifsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._motifsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            if (((this._codesMissionsTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._codesMissionsTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Tous les TableAdapters managés par un TableAdapterManager doivent utiliser la mêm" +
                        "e chaîne de connexion.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager ne contient pas d\'informations de connexion. Définissez chaqu" +
                        "e propriété TableAdapterManager TableAdapter à une instance valide de TableAdapt" +
                        "er.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("La transaction ne peut pas commencer. La connexion de données actuelle ne prend p" +
                        "as en charge les transactions ou l\'état actuel n\'autorise pas le début de la tra" +
                        "nsaction.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._droitsTableAdapter != null)) {
                    revertConnections.Add(this._droitsTableAdapter, this._droitsTableAdapter.Connection);
                    this._droitsTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._droitsTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._droitsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._droitsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._droitsTableAdapter.Adapter);
                    }
                }
                if ((this._listesUsersTableAdapter != null)) {
                    revertConnections.Add(this._listesUsersTableAdapter, this._listesUsersTableAdapter.Connection);
                    this._listesUsersTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._listesUsersTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._listesUsersTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._listesUsersTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._listesUsersTableAdapter.Adapter);
                    }
                }
                if ((this._servicesTableAdapter != null)) {
                    revertConnections.Add(this._servicesTableAdapter, this._servicesTableAdapter.Connection);
                    this._servicesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._servicesTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._servicesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._servicesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._servicesTableAdapter.Adapter);
                    }
                }
                if ((this._usersBioDataTableAdapter != null)) {
                    revertConnections.Add(this._usersBioDataTableAdapter, this._usersBioDataTableAdapter.Connection);
                    this._usersBioDataTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._usersBioDataTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._usersBioDataTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._usersBioDataTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._usersBioDataTableAdapter.Adapter);
                    }
                }
                if ((this._operateursTableAdapter != null)) {
                    revertConnections.Add(this._operateursTableAdapter, this._operateursTableAdapter.Connection);
                    this._operateursTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._operateursTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._operateursTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._operateursTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._operateursTableAdapter.Adapter);
                    }
                }
                if ((this._lecteursTableAdapter != null)) {
                    revertConnections.Add(this._lecteursTableAdapter, this._lecteursTableAdapter.Connection);
                    this._lecteursTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._lecteursTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._lecteursTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lecteursTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lecteursTableAdapter.Adapter);
                    }
                }
                if ((this._typeTaxiTableAdapter != null)) {
                    revertConnections.Add(this._typeTaxiTableAdapter, this._typeTaxiTableAdapter.Connection);
                    this._typeTaxiTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._typeTaxiTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._typeTaxiTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._typeTaxiTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._typeTaxiTableAdapter.Adapter);
                    }
                }
                if ((this._labelsControlesTableAdapter != null)) {
                    revertConnections.Add(this._labelsControlesTableAdapter, this._labelsControlesTableAdapter.Connection);
                    this._labelsControlesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._labelsControlesTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._labelsControlesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._labelsControlesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._labelsControlesTableAdapter.Adapter);
                    }
                }
                if ((this._vehiculesTableAdapter != null)) {
                    revertConnections.Add(this._vehiculesTableAdapter, this._vehiculesTableAdapter.Connection);
                    this._vehiculesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._vehiculesTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._vehiculesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._vehiculesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._vehiculesTableAdapter.Adapter);
                    }
                }
                if ((this._communesTableAdapter != null)) {
                    revertConnections.Add(this._communesTableAdapter, this._communesTableAdapter.Connection);
                    this._communesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._communesTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._communesTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._communesTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._communesTableAdapter.Adapter);
                    }
                }
                if ((this._motifsTableAdapter != null)) {
                    revertConnections.Add(this._motifsTableAdapter, this._motifsTableAdapter.Connection);
                    this._motifsTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._motifsTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._motifsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._motifsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._motifsTableAdapter.Adapter);
                    }
                }
                if ((this._codesMissionsTableAdapter != null)) {
                    revertConnections.Add(this._codesMissionsTableAdapter, this._codesMissionsTableAdapter.Connection);
                    this._codesMissionsTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(workConnection));
                    this._codesMissionsTableAdapter.Transaction = ((global::System.Data.Odbc.OdbcTransaction)(workTransaction));
                    if (this._codesMissionsTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._codesMissionsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._codesMissionsTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._droitsTableAdapter != null)) {
                    this._droitsTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._droitsTableAdapter]));
                    this._droitsTableAdapter.Transaction = null;
                }
                if ((this._listesUsersTableAdapter != null)) {
                    this._listesUsersTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._listesUsersTableAdapter]));
                    this._listesUsersTableAdapter.Transaction = null;
                }
                if ((this._servicesTableAdapter != null)) {
                    this._servicesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._servicesTableAdapter]));
                    this._servicesTableAdapter.Transaction = null;
                }
                if ((this._usersBioDataTableAdapter != null)) {
                    this._usersBioDataTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._usersBioDataTableAdapter]));
                    this._usersBioDataTableAdapter.Transaction = null;
                }
                if ((this._operateursTableAdapter != null)) {
                    this._operateursTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._operateursTableAdapter]));
                    this._operateursTableAdapter.Transaction = null;
                }
                if ((this._lecteursTableAdapter != null)) {
                    this._lecteursTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._lecteursTableAdapter]));
                    this._lecteursTableAdapter.Transaction = null;
                }
                if ((this._typeTaxiTableAdapter != null)) {
                    this._typeTaxiTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._typeTaxiTableAdapter]));
                    this._typeTaxiTableAdapter.Transaction = null;
                }
                if ((this._labelsControlesTableAdapter != null)) {
                    this._labelsControlesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._labelsControlesTableAdapter]));
                    this._labelsControlesTableAdapter.Transaction = null;
                }
                if ((this._vehiculesTableAdapter != null)) {
                    this._vehiculesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._vehiculesTableAdapter]));
                    this._vehiculesTableAdapter.Transaction = null;
                }
                if ((this._communesTableAdapter != null)) {
                    this._communesTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._communesTableAdapter]));
                    this._communesTableAdapter.Transaction = null;
                }
                if ((this._motifsTableAdapter != null)) {
                    this._motifsTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._motifsTableAdapter]));
                    this._motifsTableAdapter.Transaction = null;
                }
                if ((this._codesMissionsTableAdapter != null)) {
                    this._codesMissionsTableAdapter.Connection = ((global::System.Data.Odbc.OdbcConnection)(revertConnections[this._codesMissionsTableAdapter]));
                    this._codesMissionsTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591